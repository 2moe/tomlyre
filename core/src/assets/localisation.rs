// Version: 0.0.1-beta.1
#![allow(dead_code)]

use super::{lang_id_consts, HashMap, LangID};

pub(crate) type L10nMap = ::phf::Map<&'static str, &'static str>;
pub(crate) type SubLocaleMap = ::phf::Map<&'static str, fn() -> L10nMap>;
pub(crate) type LocaleMap = ::phf::Map<&'static str, fn() -> SubLocaleMap>;
pub(crate) type LocaleHashMap = HashMap<LangID, SubLocaleMap>;

/// Language ID: af;
/// Map name: "conversion";
/// Description: Afrikaans, Latyn, Suid-Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Kon nie die formaat outomaties opspoor nie.Spesifiseer asseblief handmatig.");
/// ```
pub(super) const fn get_af_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Die l├фer is nie 'n geldige 'JSON 1.0' -formaat nie, en probeer om as 'JSON5' te ontleed ..."##),
        ("not-included", r##"Hierdie bin├фre ** sluit nie ** die omskakelingsfunksie vir die betrokke formaat in nie.
U moet die betrokke funksie in u 'vrag.toml' in staat stel en weer saamstaan.
As hierdie sagteware nie die ooreenstemmende funksionaliteit insluit nie, moet u 'n probleem indien."##),
        ("currently-supported", r##"Tans ondersteunde Formate -lys:"##),
        ("unsupported", r##"Omskakeling van onondersteunde formaat"##),
        ("auto-detection-failed", r##"Kon nie die formaat outomaties opspoor nie.Spesifiseer asseblief handmatig."##),
        ("not-support-deser-sexp", r##"** Nog nie ondersteun nie **: omskakeling van 'lisp s-expression' na 'ander formate'"##),
        ("unknown-fmt", r##"Onbekende l├фerformaat"##),
        ("not-saved", r##"Die volgende inhoud ** sal nie ** gestoor word nie, omdat `--save` nie geroep is nie."##),
        ("dst", r##"bestemmingsl├фerpad"##),
        ("conv-error", r##"Omskakelingsfout"##),
    ],
}
}

/// Language ID: af;
/// Map name: "conversion_md";
/// Description: Afrikaans, Latyn, Suid-Afrika;
pub(super) const fn get_af_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDie l├фer is nie 'n geldige 'JSON 1.0' -formaat nie, en probeer om as 'JSON5' te ontleed ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mHierdie bin├фre ** sluit nie ** die omskakelingsfunksie vir die betrokke formaat in nie.
[48;2;34;34;34m[38;2;255;255;255mU moet die betrokke funksie in u 'vrag.toml' in staat stel en weer saamstaan.
[48;2;34;34;34m[38;2;255;255;255mAs hierdie sagteware nie die ooreenstemmende funksionaliteit insluit nie, moet u 'n probleem indien.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mTans ondersteunde Formate -lys:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mOmskakeling van onondersteunde formaat[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mKon nie die formaat outomaties opspoor nie.Spesifiseer asseblief handmatig.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Nog nie ondersteun nie [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: omskakeling van 'lisp s-expression' na 'ander formate'[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mOnbekende l├фerformaat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mDie volgende inhoud ** sal nie ** gestoor word nie, omdat [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nie geroep is nie.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mbestemmingsl├фerpad[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mOmskakelingsfout[0m"##),
    ],
}
}

/// Language ID: af;
/// Map name: "set";
/// Description: Afrikaans, Latyn, Suid-Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ongeldige l├фerpad.");
/// ```
pub(super) const fn get_af_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Die gewysigde inhoud ** sal nie ** gestoor word nie omdat `--sv` nie genoem is nie."##),
        ("new-value", r##"Nuwe waarde"##),
        ("invalid-path", r##"Ongeldige l├фerpad."##),
    ],
}
}

/// Language ID: af;
/// Map name: "set_md";
/// Description: Afrikaans, Latyn, Suid-Afrika;
pub(super) const fn get_af_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDie gewysigde inhoud ** sal nie ** gestoor word nie omdat [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nie genoem is nie.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNuwe waarde[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mOngeldige l├фerpad.[0m"##),
    ],
}
}

/// Language ID: af;
/// Map name: "get";
/// Description: Afrikaans, Latyn, Suid-Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Bestemmingsformaat");
/// ```
pub(super) const fn get_af_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Bestemmingsformaat"##),
        ("src-fmt", r##"Bronl├фerformaat"##),
    ],
}
}

/// af: Afrikaans, Latyn, Suid-Afrika
pub(super) const fn get_af_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_af_map_conversion),
        ("get", get_af_map_get),
        ("set_md", get_af_map_set_md),
        ("set", get_af_map_set),
        ("conversion_md", get_af_map_conversion_md),
    ],
}
}

/// Language ID: am;
/// Map name: "conversion";
/// Description: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "рЅЁрѕГрїИрЅх рЅарѕФрѕх-рѕ░рѕГ рѕѕрѕўрѕЮрѕерїЦ ріарѕЇрЅ░рѕ│ріФрѕЮ.ріЦрЅБріГрІј ріЦрѕФрѕхрІј рІГрїЦрЅђрѕ▒.");
/// ```
pub(super) const fn get_am_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"рІерѕџріерЅ░рѕѕрІЇ рІГрІўрЅх ** ріарІГрѕ░рїЦрѕЮ *** ріарІГрЅђрѕўрїЦрѕЮ *** рѕўрЅђрѕўрїЦ рІерѕѕрЅарЅхрѕЮ."##),
        ("unknown-fmt", r##"рІФрѕЇрЅ│рІѕрЅђ рЇІрІГрѕЇ рЅЁрѕГрїИрЅх"##),
        ("currently-supported", r##"рЅаріарѕЂріЉ рїірІю рІерЅ░рІ░рїѕрЇЅ рЅЁрѕГрЇђрЅХрЅй рІЮрѕГрІЮрѕГ:"##),
        ("auto-detection-failed", r##"рЅЁрѕГрїИрЅх рЅарѕФрѕх-рѕ░рѕГ рѕѕрѕўрѕЮрѕерїЦ ріарѕЇрЅ░рѕ│ріФрѕЮ.ріЦрЅБріГрІј ріЦрѕФрѕхрІј рІГрїЦрЅђрѕ▒."##),
        ("not-included", r##"рІГрѕЁ рѕЂрѕѕрЅхрІ«рѕй ** рЅ░рїѕрЅбрІЇріЋ рЅЁрѕГрїИрЅх рІерІЇрІГрІГрЅх рЅ░рїЇрЅБрѕЕріЋ ріарІФріФрЅхрЅхрѕЮ.
рЅ░рїѕрЅбрІЇріЋ рЅБрѕЁрѕф рЅа `ріўріФрѕф.` `рІј рІЇрѕхрїЦ рЅБрѕѕрІЇ рІерїГріљрЅх рѕўріфріЊрІј рІЇрѕхрїЦ рѕЏріЋрЅЃрЅх рІФрѕхрЇѕрѕЇрїЇрІјрЅ│рѕЇ.
рІГрѕЁ рѕХрЇЇрЅхрІїрѕГ рЅ░рїЊрІ│ріЮ рЅ░рїЇрЅБрѕЕріЋ рІерѕЏрІФріФрЅхрЅх ріерѕєріљ ріЦрЅБріГрІјріЋ ріаріЋрІх рїЅрІ│рІГ рІФрѕхрїѕрЅА."##),
        ("conv-error", r##"рІерІЇрІхрѕГ рѕхрѕЁрЅ░рЅх"##),
        ("dst", r##"рІерѕўрІхрѕерѕ╗ рЇІрІГрѕЇ рѕўріЋрїѕрІх"##),
        ("unsupported", r##"рІерѕЏрІГрІ░рїѕрЇЇ рЅЁрѕГрїИрЅх рѕЇрІѕрїБ"##),
        ("invalid-json1.0", r##"рЇІрІГрѕЅ рЅхріГріГрѕѕріЏ jdson 1.0 рЅЁрѕГрїИрЅх, ріЦріЋрІ░ `json5` рІѕрІ░рЅ│рЅй рѕѕрѕўрѕъріерѕГ рЅарѕўрѕъріерѕГ рѕІрІГ ..."##),
    ],
}
}

/// Language ID: am;
/// Map name: "conversion_md";
/// Description: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ;
pub(super) const fn get_am_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mрІерѕџріерЅ░рѕѕрІЇ рІГрІўрЅх ** ріарІГрѕ░рїЦрѕЮ *** ріарІГрЅђрѕўрїЦрѕЮ *** рѕўрЅђрѕўрїЦ рІерѕѕрЅарЅхрѕЮ.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mрІФрѕЇрЅ│рІѕрЅђ рЇІрІГрѕЇ рЅЁрѕГрїИрЅх[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mрЅаріарѕЂріЉ рїірІю рІерЅ░рІ░рїѕрЇЅ рЅЁрѕГрЇђрЅХрЅй рІЮрѕГрІЮрѕГ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mрЅЁрѕГрїИрЅх рЅарѕФрѕх-рѕ░рѕГ рѕѕрѕўрѕЮрѕерїЦ ріарѕЇрЅ░рѕ│ріФрѕЮ.ріЦрЅБріГрІј ріЦрѕФрѕхрІј рІГрїЦрЅђрѕ▒.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mрІГрѕЁ рѕЂрѕѕрЅхрІ«рѕй ** рЅ░рїѕрЅбрІЇріЋ рЅЁрѕГрїИрЅх рІерІЇрІГрІГрЅх рЅ░рїЇрЅБрѕЕріЋ ріарІФріФрЅхрЅхрѕЮ.
[48;2;34;34;34m[38;2;255;255;255mрЅ░рїѕрЅбрІЇріЋ рЅБрѕЁрѕф рЅа [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mріўріФрѕф.[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mрІј рІЇрѕхрїЦ рЅБрѕѕрІЇ рІерїГріљрЅх рѕўріфріЊрІј рІЇрѕхрїЦ рѕЏріЋрЅЃрЅх рІФрѕхрЇѕрѕЇрїЇрІјрЅ│рѕЇ.
[48;2;34;34;34m[38;2;0;255;255mрІГрѕЁ рѕХрЇЇрЅхрІїрѕГ рЅ░рїЊрІ│ріЮ рЅ░рїЇрЅБрѕЕріЋ рІерѕЏрІФріФрЅхрЅх ріерѕєріљ ріЦрЅБріГрІјріЋ ріаріЋрІх рїЅрІ│рІГ рІФрѕхрїѕрЅА.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mрІерІЇрІхрѕГ рѕхрѕЁрЅ░рЅх[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mрІерѕўрІхрѕерѕ╗ рЇІрІГрѕЇ рѕўріЋрїѕрІх[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mрІерѕЏрІГрІ░рїѕрЇЇ рЅЁрѕГрїИрЅх рѕЇрІѕрїБ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mрЇІрІГрѕЅ рЅхріГріГрѕѕріЏ jdson 1.0 рЅЁрѕГрїИрЅх, ріЦріЋрІ░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m рІѕрІ░рЅ│рЅй рѕѕрѕўрѕъріерѕГ рЅарѕўрѕъріерѕГ рѕІрІГ ...[0m"##),
    ],
}
}

/// Language ID: am;
/// Map name: "set";
/// Description: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "рѕЇріГ рІФрѕЇрѕєріљ рІерЇІрІГрѕЇ рІ▒ріФ.");
/// ```
pub(super) const fn get_am_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("invalid-path", r##"рѕЇріГ рІФрѕЇрѕєріљ рІерЇІрІГрѕЇ рІ▒ріФ."##),
        ("new-value", r##"ріарІ▓рѕх ріЦрѕ┤рЅх"##),
    ],
}
}

/// Language ID: am;
/// Map name: "set_md";
/// Description: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ;
pub(super) const fn get_am_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mрѕЇріГ рІФрѕЇрѕєріљ рІерЇІрІГрѕЇ рІ▒ріФ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mріарІ▓рѕх ріЦрѕ┤рЅх[0m"##),
    ],
}
}

/// Language ID: am;
/// Map name: "get";
/// Description: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "рІерѕўрІхрѕерѕ╗ рЅЁрѕГрїИрЅх");
/// ```
pub(super) const fn get_am_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"рІерѕўрІхрѕерѕ╗ рЅЁрѕГрїИрЅх"##),
        ("src-fmt", r##"рѕЮріЋрїГ рЇІрІГрѕЇ рЅЁрѕГрїИрЅх"##),
    ],
}
}

/// am: ріарѕЏрѕГріЏ, рібрЅхрІ«рЇњріГ, рібрЅхрІ«рїхрІФ
pub(super) const fn get_am_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_am_map_conversion),
        ("get", get_am_map_get),
        ("set_md", get_am_map_set_md),
        ("set", get_am_map_set),
        ("conversion_md", get_am_map_conversion_md),
    ],
}
}

/// Language ID: ar;
/// Map name: "conversion";
/// Description: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "┘Ђп┤┘ё пД┘ё┘Ѓп┤┘Ђ пД┘ёпф┘ё┘ѓпДпд┘і п╣┘є пД┘ёпф┘єп│┘і┘ѓ. ┘іп▒пг┘Ѕ пфпГп»┘іп»┘Є ┘іп»┘ѕ┘і\u{64b}пД.");
/// ```
pub(super) const fn get_ar_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"пД┘ё┘Ё┘ё┘Ђ ┘ё┘іп│ пепф┘єп│┘і┘ѓ `json 1.0` пхпД┘ёпГ пї пгпДп▒┘і ┘ЁпГпД┘ѕ┘ёпЕ пД┘ёпфпГ┘ѕ┘і┘ё пЦ┘ё┘Ѕ `json5` ..."##),
        ("not-included", r##"┘ёпД ┘іпфпХ┘Ё┘є ┘Єп░пД пД┘ёпеп▒┘єпД┘Ёпг пД┘ёпФ┘єпДпд┘і **п╣┘Ё┘ё┘іпЕ пД┘ёпфпГ┘ѕ┘і┘ё** ┘ё┘ёпф┘єп│┘і┘ѓ п░┘і пД┘ёпх┘ёпЕ.
┘іпгпе пф┘Ё┘Ѓ┘і┘є пД┘ё┘Ё┘іп▓пЕ пД┘ё┘Ё┘єпДп│пепЕ ┘Ђ┘і ┘Ё┘ё┘Ђ `Cargo.toml` пД┘ёп«пДпх пе┘Ѓ ┘ѕпЦп╣пДп»пЕ пД┘ёпфп▒пг┘ЁпЕ.
пЦп░пД ┘ё┘Ё ┘іпфпХ┘Ё┘є ┘Єп░пД пД┘ёпеп▒┘єпД┘Ёпг пД┘ёпФ┘єпДпд┘і пД┘ё┘ѕпИпДпд┘Ђ пД┘ё┘Ё┘єпДп│пепЕпї ┘іп▒пг┘Ѕ пЦп▒п│пД┘ё пи┘ёпе ┘Ђ┘і пД┘ё┘ѓпДпд┘ЁпЕ."##),
        ("currently-supported", r##"┘ѓпДпд┘ЁпЕ пД┘ёпф┘єп│┘і┘ѓпДпф пД┘ё┘Ёп»п╣┘ѕ┘ЁпЕ пГпД┘ё┘і┘І┘ЉпД:"##),
        ("unsupported", r##"пфпГ┘ѕ┘і┘ё пД┘ёпф┘єп│┘і┘ѓ п║┘іп▒ пД┘ё┘Ёп»п╣┘ѕ┘Ё"##),
        ("auto-detection-failed", r##"┘Ђп┤┘ё пД┘ё┘Ѓп┤┘Ђ пД┘ёпф┘ё┘ѓпДпд┘і п╣┘є пД┘ёпф┘єп│┘і┘ѓ. ┘іп▒пг┘Ѕ пфпГп»┘іп»┘Є ┘іп»┘ѕ┘і┘ІпД."##),
        ("not-support-deser-sexp", r##"**п║┘іп▒ ┘Ёп»п╣┘ѕ┘Ё пГпД┘ё┘і┘ІпД**: пД┘ёпфпГ┘ѕ┘і┘ё ┘Ё┘є пф┘єп│┘і┘ѓ `Lisp S-Expression` пЦ┘ё┘Ѕ `пф┘єп│┘і┘ѓпДпф пБп«п▒┘Ѕ`"##),
        ("unknown-fmt", r##"пф┘єп│┘і┘ѓ пД┘ё┘Ё┘ё┘Ђ п║┘іп▒ ┘Ёп╣п▒┘ѕ┘Ђ"##),
        ("not-saved", r##"┘ё┘є ┘іпф┘Ё пГ┘ЂпИ пД┘ё┘ЁпГпф┘ѕ┘Ѕ пД┘ёпфпД┘ё┘і **┘ёпБ┘є `--save` ┘ё┘Ё ┘іпф┘Ё пДп│пфп»п╣пДпц┘Є**."##),
        ("dst", r##"┘Ёп│пДп▒ ┘Ё┘ё┘Ђ пД┘ё┘ѕпг┘ЄпЕ"##),
        ("conv-error", r##"п«пипБ ┘Ђ┘і пД┘ёпфпГ┘ѕ┘і┘ё"##),
    ],
}
}

/// Language ID: ar;
/// Map name: "conversion_md";
/// Description: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒;
pub(super) const fn get_ar_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mпД┘ё┘Ё┘ё┘Ђ ┘ё┘іп│ пепф┘єп│┘і┘ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m пхпД┘ёпГ пї пгпДп▒┘і ┘ЁпГпД┘ѕ┘ёпЕ пД┘ёпфпГ┘ѕ┘і┘ё пЦ┘ё┘Ѕ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m┘ёпД ┘іпфпХ┘Ё┘є ┘Єп░пД пД┘ёпеп▒┘єпД┘Ёпг пД┘ёпФ┘єпДпд┘і [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mп╣┘Ё┘ё┘іпЕ пД┘ёпфпГ┘ѕ┘і┘ё[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ┘ё┘ёпф┘єп│┘і┘ѓ п░┘і пД┘ёпх┘ёпЕ.
[48;2;34;34;34m[38;2;255;255;255m┘іпгпе пф┘Ё┘Ѓ┘і┘є пД┘ё┘Ё┘іп▓пЕ пД┘ё┘Ё┘єпДп│пепЕ ┘Ђ┘і ┘Ё┘ё┘Ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m пД┘ёп«пДпх пе┘Ѓ ┘ѕпЦп╣пДп»пЕ пД┘ёпфп▒пг┘ЁпЕ.
[48;2;34;34;34m[38;2;255;255;255mпЦп░пД ┘ё┘Ё ┘іпфпХ┘Ё┘є ┘Єп░пД пД┘ёпеп▒┘єпД┘Ёпг пД┘ёпФ┘єпДпд┘і пД┘ё┘ѕпИпДпд┘Ђ пД┘ё┘Ё┘єпДп│пепЕпї ┘іп▒пг┘Ѕ пЦп▒п│пД┘ё пи┘ёпе ┘Ђ┘і пД┘ё┘ѓпДпд┘ЁпЕ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m┘ѓпДпд┘ЁпЕ пД┘ёпф┘єп│┘і┘ѓпДпф пД┘ё┘Ёп»п╣┘ѕ┘ЁпЕ пГпД┘ё┘і┘І┘ЉпД:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mпфпГ┘ѕ┘і┘ё пД┘ёпф┘єп│┘і┘ѓ п║┘іп▒ пД┘ё┘Ёп»п╣┘ѕ┘Ё[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ђп┤┘ё пД┘ё┘Ѓп┤┘Ђ пД┘ёпф┘ё┘ѓпДпд┘і п╣┘є пД┘ёпф┘єп│┘і┘ѓ. ┘іп▒пг┘Ѕ пфпГп»┘іп»┘Є ┘іп»┘ѕ┘і┘ІпД.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mп║┘іп▒ ┘Ёп»п╣┘ѕ┘Ё пГпД┘ё┘і┘ІпД[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: пД┘ёпфпГ┘ѕ┘і┘ё ┘Ё┘є пф┘єп│┘і┘ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m пЦ┘ё┘Ѕ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mпф┘єп│┘і┘ѓпДпф пБп«п▒┘Ѕ[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mпф┘єп│┘і┘ѓ пД┘ё┘Ё┘ё┘Ђ п║┘іп▒ ┘Ёп╣п▒┘ѕ┘Ђ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255m┘ё┘є ┘іпф┘Ё пГ┘ЂпИ пД┘ё┘ЁпГпф┘ѕ┘Ѕ пД┘ёпфпД┘ё┘і [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m┘ёпБ┘є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ┘ё┘Ё ┘іпф┘Ё пДп│пфп»п╣пДпц┘Є[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ёп│пДп▒ ┘Ё┘ё┘Ђ пД┘ё┘ѕпг┘ЄпЕ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mп«пипБ ┘Ђ┘і пД┘ёпфпГ┘ѕ┘і┘ё[0m"##),
    ],
}
}

/// Language ID: ar;
/// Map name: "set";
/// Description: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "┘Ёп│пДп▒ пД┘ё┘Ё┘ё┘Ђ п║┘іп▒ пхпД┘ёпГ.");
/// ```
pub(super) const fn get_ar_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"┘ё┘є ┘іпф┘Ё пГ┘ЂпИ пД┘ё┘ЁпГпф┘ѕ┘Ѕ пД┘ё┘Ёп╣п»┘ё **┘ёпБ┘є `--sv` ┘ё┘Ё ┘іпф┘Ё пДп│пфп»п╣пДпц┘Є**."##),
        ("new-value", r##"┘ѓ┘і┘ЁпЕ пгп»┘іп»пЕ"##),
        ("invalid-path", r##"┘Ёп│пДп▒ пД┘ё┘Ё┘ё┘Ђ п║┘іп▒ пхпД┘ёпГ."##),
    ],
}
}

/// Language ID: ar;
/// Map name: "set_md";
/// Description: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒;
pub(super) const fn get_ar_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255m┘ё┘є ┘іпф┘Ё пГ┘ЂпИ пД┘ё┘ЁпГпф┘ѕ┘Ѕ пД┘ё┘Ёп╣п»┘ё [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m┘ёпБ┘є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ┘ё┘Ё ┘іпф┘Ё пДп│пфп»п╣пДпц┘Є[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘ѓ┘і┘ЁпЕ пгп»┘іп»пЕ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ёп│пДп▒ пД┘ё┘Ё┘ё┘Ђ п║┘іп▒ пхпД┘ёпГ.[0m"##),
    ],
}
}

/// Language ID: ar;
/// Map name: "get";
/// Description: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "пф┘єп│┘і┘ѓ пД┘ё┘ѕпг┘ЄпЕ");
/// ```
pub(super) const fn get_ar_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"пф┘єп│┘і┘ѓ пД┘ё┘ѕпг┘ЄпЕ"##),
        ("src-fmt", r##"пф┘єп│┘і┘ѓ пД┘ё┘Ё┘ё┘Ђ пД┘ё┘Ёпхп»п▒"##),
    ],
}
}

/// ar: пД┘ёп╣п▒пе┘іпЕ, пД┘ёп╣п▒пе┘іпЕ, ┘Ёпхп▒
pub(super) const fn get_ar_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ar_map_conversion),
        ("get", get_ar_map_get),
        ("set_md", get_ar_map_set_md),
        ("set", get_ar_map_set),
        ("conversion_md", get_ar_map_conversion_md),
    ],
}
}

/// Language ID: az;
/// Map name: "conversion";
/// Description: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Format─▒ avtomatik a┼Ъkar ed╔Ў bilm╔Ўdi.Z╔Ўhm╔Ўt olmasa ╔Ўl il╔Ў g├Хst╔Ўrin.");
/// ```
pub(super) const fn get_az_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fayl, `JSON5` kimi t╔Ўhlil etm╔Ўy╔Ў ├Дal─▒┼Ъaraq, etibarl─▒ bir `JSON 1.0` format─▒ deyil ..."##),
        ("not-included", r##"Bu ikili ** m├╝vafiq format ├╝├Д├╝n d├Хn├╝┼Ъ├╝m funksionall─▒─Ъ─▒ daxil deyil.
'Cargo.toml' da m├╝vafiq x├╝susiyy╔Ўt╔Ў imkan verm╔Ўlisiniz v╔Ў yenid╔Ўn t╔Ўrtib etm╔Ўlisiniz.
Bu proqram─▒n m├╝vafiq funksionall─▒q daxil deyils╔Ў, xahi┼Ъ edir╔Ўm bir m╔Ўs╔Ўl╔Ў t╔Ўqdim edin."##),
        ("currently-supported", r##"Hal-haz─▒rda d╔Ўst╔Ўkl╔Ўn╔Ўn formatlar siyah─▒s─▒:"##),
        ("unsupported", r##"D╔Ўst╔Ўkl╔Ўnm╔Ўy╔Ўn format d├Хn├╝┼Ъ├╝m"##),
        ("auto-detection-failed", r##"Format─▒ avtomatik a┼Ъkar ed╔Ў bilm╔Ўdi.Z╔Ўhm╔Ўt olmasa ╔Ўl il╔Ў g├Хst╔Ўrin."##),
        ("not-support-deser-sexp", r##"** D╔Ўst╔Ўkl╔Ўnm╔Ўyib **: `Lisp S-ifad╔Ўsind╔Ўn 'dig╔Ўr formatlara'"##),
        ("unknown-fmt", r##"Nam╔Ўlum fayl format─▒"##),
        ("not-saved", r##"A┼Ъa─Ъ─▒dak─▒ m╔Ўzmun q╔Ўna╔Ўt olunmayacaq, ├Д├╝nki `--save` deyildi."##),
        ("dst", r##"T╔Ўyinat fayl─▒ yolu"##),
        ("conv-error", r##"D├Хn├╝┼Ъ├╝m x╔Ўtas─▒"##),
    ],
}
}

/// Language ID: az;
/// Map name: "conversion_md";
/// Description: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan;
pub(super) const fn get_az_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFayl, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m kimi t╔Ўhlil etm╔Ўy╔Ў ├Дal─▒┼Ъaraq, etibarl─▒ bir [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m format─▒ deyil ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBu ikili ** m├╝vafiq format ├╝├Д├╝n d├Хn├╝┼Ъ├╝m funksionall─▒─Ъ─▒ daxil deyil.
[48;2;34;34;34m[38;2;255;255;255m'Cargo.toml' da m├╝vafiq x├╝susiyy╔Ўt╔Ў imkan verm╔Ўlisiniz v╔Ў yenid╔Ўn t╔Ўrtib etm╔Ўlisiniz.
[48;2;34;34;34m[38;2;255;255;255mBu proqram─▒n m├╝vafiq funksionall─▒q daxil deyils╔Ў, xahi┼Ъ edir╔Ўm bir m╔Ўs╔Ўl╔Ў t╔Ўqdim edin.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mHal-haz─▒rda d╔Ўst╔Ўkl╔Ўn╔Ўn formatlar siyah─▒s─▒:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mD╔Ўst╔Ўkl╔Ўnm╔Ўy╔Ўn format d├Хn├╝┼Ъ├╝m[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mFormat─▒ avtomatik a┼Ъkar ed╔Ў bilm╔Ўdi.Z╔Ўhm╔Ўt olmasa ╔Ўl il╔Ў g├Хst╔Ўrin.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** D╔Ўst╔Ўkl╔Ўnm╔Ўyib [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-ifad╔Ўsind╔Ўn 'dig╔Ўr formatlara'[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNam╔Ўlum fayl format─▒[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mA┼Ъa─Ъ─▒dak─▒ m╔Ўzmun q╔Ўna╔Ўt olunmayacaq, ├Д├╝nki [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m deyildi.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mT╔Ўyinat fayl─▒ yolu[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mD├Хn├╝┼Ъ├╝m x╔Ўtas─▒[0m"##),
    ],
}
}

/// Language ID: az;
/// Map name: "set";
/// Description: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Yanl─▒┼Ъ fayl yolu.");
/// ```
pub(super) const fn get_az_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"D╔Ўyi┼Ъdirilmi┼Ъ m╔Ўzmun ** ** q╔Ўna╔Ўt olunmayacaq, ├Д├╝nki '-' adland─▒r─▒lmad─▒."##),
        ("new-value", r##"Yeni d╔Ўy╔Ўr"##),
        ("invalid-path", r##"Yanl─▒┼Ъ fayl yolu."##),
    ],
}
}

/// Language ID: az;
/// Map name: "set_md";
/// Description: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan;
pub(super) const fn get_az_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mD╔Ўyi┼Ъdirilmi┼Ъ m╔Ўzmun ** ** q╔Ўna╔Ўt olunmayacaq, ├Д├╝nki '-' adland─▒r─▒lmad─▒.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mYeni d╔Ўy╔Ўr[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mYanl─▒┼Ъ fayl yolu.[0m"##),
    ],
}
}

/// Language ID: az;
/// Map name: "get";
/// Description: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "T╔Ўyinat format─▒");
/// ```
pub(super) const fn get_az_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"T╔Ўyinat format─▒"##),
        ("src-fmt", r##"M╔Ўnb╔Ў fayl─▒ format─▒"##),
    ],
}
}

/// az: az╔Ўrbaycan, lat─▒n, Az╔Ўrbaycan
pub(super) const fn get_az_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_az_map_conversion),
        ("get", get_az_map_get),
        ("set_md", get_az_map_set_md),
        ("set", get_az_map_set),
        ("conversion_md", get_az_map_conversion_md),
    ],
}
}

/// Language ID: be;
/// Map name: "conversion";
/// Description: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлх л░ЛѓЛђЛІл╝л░л╗л░ЛЂЛЈ л░ЛъЛѓл░л╝л░ЛѓЛІЛЄлйл░ л▓ЛІЛЈл▓ЛќЛєЛї Лёл░Лђл╝л░Лѓ.лџл░л╗Лќ л╗л░ЛЂл║л░, ЛЃл║л░лХЛІЛєлх ЛъЛђЛЃЛЄлйЛЃЛј.");
/// ```
pub(super) const fn get_be_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лцл░л╣л╗ лйлх ли'ЛЈЛъл╗ЛЈлхЛєЛєл░ ЛЂл░л┐Лђл░Лъл┤лйЛІл╝ Лёл░Лђл╝л░Лѓл░л╝ `json 1.0`, ЛЂл┐Лђл░л▒ЛЃЛјЛЄЛІ Лђл░лил▒Лќл▓л░ЛєЛї ЛЈл║ `json5` ..."##),
        ("not-included", r##"лЊЛЇЛѓЛІ л┤л▓л░л╣л║лЙл▓ЛІ ** лйлх Лъл║л╗ЛјЛЄл░лх ** ЛёЛЃлйл║ЛєЛІЛЈлйл░л╗Лїлйл░ЛЂЛєЛї л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйЛЈ л┤л╗ЛЈ л░л┤л┐л░л▓лхл┤лйл░л│л░ Лёл░Лђл╝л░ЛѓЛЃ.
лњл░л╝ лйлхл░л▒ЛЁлЙл┤лйл░ Лъл║л╗ЛјЛЄЛІЛєЛї л░л┤л┐л░л▓лхл┤лйЛЃЛј ЛёЛЃлйл║ЛєЛІЛј Лъ л▓л░ЛѕЛІл╝ `chargo.toml` Лќ Recompile.
лџл░л╗Лќ л│ЛЇЛѓл░ л┐Лђл░л│Лђл░л╝лйл░лх лил░л▒лхЛЂл┐ЛЈЛЄЛЇлйлйлх лйлх Лъл║л╗ЛјЛЄл░лх л░л┤л┐л░л▓лхл┤лйЛЃЛј ЛёЛЃлйл║ЛєЛІЛЈлйл░л╗Лїлйл░ЛЂЛєЛї, л║л░л╗Лќ л╗л░ЛЂл║л░, л░л┤л┐Лђл░ЛъЛєлх л┐Лђл░л▒л╗лхл╝ЛЃ."##),
        ("currently-supported", r##"лБ ЛєЛЈл┐лхЛђл░ЛѕлйЛќ ЛЄл░ЛЂ л┐л░л┤ЛѓЛђЛІл╝л╗Лќл▓л░лхЛєЛєл░ ЛЂл┐ЛќЛЂ Лёл░Лђл╝л░Лѓл░Лъ:"##),
        ("unsupported", r##"лЪлхЛђл░л║л╗л░л┤лилхлйл░лх л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйлх Лёл░Лђл╝л░ЛѓЛЃ"##),
        ("auto-detection-failed", r##"лЮлх л░ЛѓЛђЛІл╝л░л╗л░ЛЂЛЈ л░ЛъЛѓл░л╝л░ЛѓЛІЛЄлйл░ л▓ЛІЛЈл▓ЛќЛєЛї Лёл░Лђл╝л░Лѓ.лџл░л╗Лќ л╗л░ЛЂл║л░, ЛЃл║л░лХЛІЛєлх ЛъЛђЛЃЛЄлйЛЃЛј."##),
        ("not-support-deser-sexp", r##"** лЪл░л║ЛЃл╗Лї ЛЈЛѕЛЄЛЇ лйлх л┐л░л┤ЛѓЛђЛІл╝л╗Лќл▓л░лхЛєЛєл░ **: л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйлх ли `Lisp S-Expression` л┤л░` ЛќлйЛѕЛІЛЁ Лёл░Лђл╝л░Лѓл░Лъ '"##),
        ("unknown-fmt", r##"лЮлхл▓ЛЈл┤лЙл╝ЛІ Лёл░Лђл╝л░Лѓ Лёл░л╣л╗л░"##),
        ("not-saved", r##"лЮл░ЛЂЛѓЛЃл┐лйЛІ лил╝лхЛЂЛѓ ** лйлх л▒ЛЃл┤лилх лил░ЛЁл░л▓л░лйЛІ **, Лѓл░л╝ЛЃ ЛѕЛѓлЙ `--save` лйлх л▒ЛІЛъ л▓ЛІл║л╗Лќл║л░лйЛІ."##),
        ("dst", r##"Лѕл╗ЛЈЛЁ Лёл░л╣л╗л░ л┐ЛђЛІлилйл░ЛЄЛЇлйлйЛЈ"##),
        ("conv-error", r##"лЪл░л╝ЛІл╗л║л░ л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйЛЈ"##),
    ],
}
}

/// Language ID: be;
/// Map name: "conversion_md";
/// Description: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї;
pub(super) const fn get_be_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ лйлх ли'ЛЈЛъл╗ЛЈлхЛєЛєл░ ЛЂл░л┐Лђл░Лъл┤лйЛІл╝ Лёл░Лђл╝л░Лѓл░л╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ЛЂл┐Лђл░л▒ЛЃЛјЛЄЛІ Лђл░лил▒Лќл▓л░ЛєЛї ЛЈл║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлЊЛЇЛѓЛІ л┤л▓л░л╣л║лЙл▓ЛІ ** лйлх Лъл║л╗ЛјЛЄл░лх ** ЛёЛЃлйл║ЛєЛІЛЈлйл░л╗Лїлйл░ЛЂЛєЛї л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйЛЈ л┤л╗ЛЈ л░л┤л┐л░л▓лхл┤лйл░л│л░ Лёл░Лђл╝л░ЛѓЛЃ.
[48;2;34;34;34m[38;2;255;255;255mлњл░л╝ лйлхл░л▒ЛЁлЙл┤лйл░ Лъл║л╗ЛјЛЄЛІЛєЛї л░л┤л┐л░л▓лхл┤лйЛЃЛј ЛёЛЃлйл║ЛєЛІЛј Лъ л▓л░ЛѕЛІл╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mchargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Лќ Recompile.
[48;2;34;34;34m[38;2;255;255;255mлџл░л╗Лќ л│ЛЇЛѓл░ л┐Лђл░л│Лђл░л╝лйл░лх лил░л▒лхЛЂл┐ЛЈЛЄЛЇлйлйлх лйлх Лъл║л╗ЛјЛЄл░лх л░л┤л┐л░л▓лхл┤лйЛЃЛј ЛёЛЃлйл║ЛєЛІЛЈлйл░л╗Лїлйл░ЛЂЛєЛї, л║л░л╗Лќ л╗л░ЛЂл║л░, л░л┤л┐Лђл░ЛъЛєлх л┐Лђл░л▒л╗лхл╝ЛЃ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлБ ЛєЛЈл┐лхЛђл░ЛѕлйЛќ ЛЄл░ЛЂ л┐л░л┤ЛѓЛђЛІл╝л╗Лќл▓л░лхЛєЛєл░ ЛЂл┐ЛќЛЂ Лёл░Лђл╝л░Лѓл░Лъ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЪлхЛђл░л║л╗л░л┤лилхлйл░лх л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйлх Лёл░Лђл╝л░ЛѓЛЃ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлх л░ЛѓЛђЛІл╝л░л╗л░ЛЂЛЈ л░ЛъЛѓл░л╝л░ЛѓЛІЛЄлйл░ л▓ЛІЛЈл▓ЛќЛєЛї Лёл░Лђл╝л░Лѓ.лџл░л╗Лќ л╗л░ЛЂл║л░, ЛЃл║л░лХЛІЛєлх ЛъЛђЛЃЛЄлйЛЃЛј.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лЪл░л║ЛЃл╗Лї ЛЈЛѕЛЄЛЇ лйлх л┐л░л┤ЛѓЛђЛІл╝л╗Лќл▓л░лхЛєЛєл░ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйлх ли [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m л┤л░[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЛќлйЛѕЛІЛЁ Лёл░Лђл╝л░Лѓл░Лъ '[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓ЛЈл┤лЙл╝ЛІ Лёл░Лђл╝л░Лѓ Лёл░л╣л╗л░[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлЮл░ЛЂЛѓЛЃл┐лйЛІ лил╝лхЛЂЛѓ ** лйлх л▒ЛЃл┤лилх лил░ЛЁл░л▓л░лйЛІ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, Лѓл░л╝ЛЃ ЛѕЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m лйлх л▒ЛІЛъ л▓ЛІл║л╗Лќл║л░лйЛІ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЛѕл╗ЛЈЛЁ Лёл░л╣л╗л░ л┐ЛђЛІлилйл░ЛЄЛЇлйлйЛЈ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЪл░л╝ЛІл╗л║л░ л┐лхЛђл░ЛъЛѓл▓л░ЛђЛЇлйлйЛЈ[0m"##),
    ],
}
}

/// Language ID: be;
/// Map name: "set";
/// Description: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхЛЂл░л┐Лђл░Лъл┤лйЛІ Лѕл╗ЛЈЛЁ Лёл░л╣л╗л░.");
/// ```
pub(super) const fn get_be_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"лЌл╝лхлйлхлйЛІ лил╝лхЛЂЛѓ ** лйлх л▒ЛЃл┤лилх лил░ЛЁл░л▓л░лйЛІ, Лѓл░л╝ЛЃ ЛѕЛѓлЙ `--sv` лйлх л▒ЛІЛъ л▓ЛІл║л╗Лќл║л░лйЛІ."##),
        ("new-value", r##"лЮлЙл▓л░лх лилйл░ЛЄЛЇлйлйлх"##),
        ("invalid-path", r##"лЮлхЛЂл░л┐Лђл░Лъл┤лйЛІ Лѕл╗ЛЈЛЁ Лёл░л╣л╗л░."##),
    ],
}
}

/// Language ID: be;
/// Map name: "set_md";
/// Description: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї;
pub(super) const fn get_be_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлЌл╝лхлйлхлйЛІ лил╝лхЛЂЛѓ ** лйлх л▒ЛЃл┤лилх лил░ЛЁл░л▓л░лйЛІ, Лѓл░л╝ЛЃ ЛѕЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх л▒ЛІЛъ л▓ЛІл║л╗Лќл║л░лйЛІ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлЙл▓л░лх лилйл░ЛЄЛЇлйлйлх[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхЛЂл░л┐Лђл░Лъл┤лйЛІ Лѕл╗ЛЈЛЁ Лёл░л╣л╗л░.[0m"##),
    ],
}
}

/// Language ID: be;
/// Map name: "get";
/// Description: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцл░Лђл╝л░Лѓ л┐ЛђЛІлилйл░ЛЄЛЇлйлйЛЈ");
/// ```
pub(super) const fn get_be_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцл░Лђл╝л░Лѓ л┐ЛђЛІлилйл░ЛЄЛЇлйлйЛЈ"##),
        ("src-fmt", r##"лцл░Лђл╝л░Лѓ лиЛІЛЁлЙл┤лйл░л│л░ Лёл░л╣л╗л░"##),
    ],
}
}

/// be: л▒лхл╗л░ЛђЛЃЛЂл║л░ЛЈ, л║ЛќЛђЛІл╗ЛќЛєл░, лЉлхл╗л░ЛђЛЃЛЂЛї
pub(super) const fn get_be_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_be_map_conversion),
        ("get", get_be_map_get),
        ("set_md", get_be_map_set_md),
        ("set", get_be_map_set),
        ("conversion_md", get_be_map_conversion_md),
    ],
}
}

/// Language ID: bg;
/// Map name: "conversion";
/// Description: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлхЛЃЛЂл┐лхЛѕлйлЙ лЙЛѓл║ЛђлИл▓л░лйлх лйл░ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ ЛёлЙЛђл╝л░Лѓл░.люлЙл╗ЛЈ, л┐лЙЛЂлЙЛЄлхЛѓлх ЛђЛіЛЄлйлЙ.");
/// ```
pub(super) const fn get_bg_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лцл░л╣л╗ЛіЛѓ лйлх лх л▓л░л╗лИл┤лхлй ЛёлЙЛђл╝л░Лѓ `json 1.0`, лЙл┐лИЛѓл▓л░л╣л║лИ ЛЂлх л┤л░ л░лйл░л╗лИлилИЛђл░ л║л░ЛѓлЙ `json5` ..."##),
        ("not-included", r##"лблЙлилИ л┤л▓лЙлИЛЄлхлй ** лйлх л▓л║л╗ЛјЛЄл▓л░ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓЛѓл░ лил░ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх лил░ ЛЂЛілЙЛѓл▓лхЛѓлйлИЛЈ ЛёлЙЛђл╝л░Лѓ.
лбЛђЛЈл▒л▓л░ л┤л░ л░л║ЛѓлИл▓лИЛђл░Лѓлх ЛЂЛілЙЛѓл▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИЛЈ л▓Ліл▓ л▓л░ЛѕлИЛЈ `Cargo.toml` лИ л┤л░ ЛЂлх л┐Лђлхл║лЙл╝л┐лИл╗лИЛђл░Лѓлх.
лљл║лЙ ЛѓлЙлилИ ЛЂлЙЛёЛѓЛЃлхЛђ лйлх л▓л║л╗ЛјЛЄл▓л░ ЛЂЛілЙЛѓл▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л╝лЙл╗ЛЈ, лИлил┐Лђл░ЛѓлхЛѓлх л┐ЛђлЙл▒л╗лхл╝."##),
        ("currently-supported", r##"лАл┐лИЛЂЛіл║ ЛЂ л┐лЙл┤л┤ЛђЛілХл║л░ лйл░ ЛёлЙЛђл╝л░ЛѓлИ л▓ л╝лЙл╝лхлйЛѓл░:"##),
        ("unsupported", r##"лЮлхл┐Лђлхл┤л▓лхЛЄлхлйлЙ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх лйл░ ЛёлЙЛђл╝л░Лѓ"##),
        ("auto-detection-failed", r##"лЮлхЛЃЛЂл┐лхЛѕлйлЙ лЙЛѓл║ЛђлИл▓л░лйлх лйл░ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ ЛёлЙЛђл╝л░Лѓл░.люлЙл╗ЛЈ, л┐лЙЛЂлЙЛЄлхЛѓлх ЛђЛіЛЄлйлЙ."##),
        ("not-support-deser-sexp", r##"** лњЛЂлх лЙЛЅлх лйлх лх л┐лЙл┤л┤ЛіЛђлХл░лй **: лџлЙлйл▓лхЛђЛѓлИЛђл░лйлх лЙЛѓ `Lisp S-Expression` л▓` л┤ЛђЛЃл│лИ ЛёлЙЛђл╝л░ЛѓлИ`"##),
        ("unknown-fmt", r##"лЮлхлИлил▓лхЛЂЛѓлхлй ЛёлЙЛђл╝л░Лѓ лйл░ Лёл░л╣л╗л░"##),
        ("not-saved", r##"лАл╗лхл┤лйлЙЛѓлЙ ЛЂЛіл┤ЛіЛђлХл░лйлИлх ** лйЛЈл╝л░ л┤л░ л▒Ліл┤лх лил░л┐л░лилхлйлЙ, лил░ЛЅлЙЛѓлЙ `--save` лйлх лх лИлил▓лИл║л░лйлЙ."##),
        ("dst", r##"лЪЛіЛѓЛЈЛѓ лйл░ Лёл░л╣л╗л░ лйл░ л┤лхЛЂЛѓлИлйл░ЛєлИЛЈЛѓл░"##),
        ("conv-error", r##"лЊЛђлхЛѕл║л░ лил░ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх"##),
    ],
}
}

/// Language ID: bg;
/// Map name: "conversion_md";
/// Description: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ;
pub(super) const fn get_bg_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ЛіЛѓ лйлх лх л▓л░л╗лИл┤лхлй ЛёлЙЛђл╝л░Лѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, лЙл┐лИЛѓл▓л░л╣л║лИ ЛЂлх л┤л░ л░лйл░л╗лИлилИЛђл░ л║л░ЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлблЙлилИ л┤л▓лЙлИЛЄлхлй ** лйлх л▓л║л╗ЛјЛЄл▓л░ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓЛѓл░ лил░ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх лил░ ЛЂЛілЙЛѓл▓лхЛѓлйлИЛЈ ЛёлЙЛђл╝л░Лѓ.
[48;2;34;34;34m[38;2;255;255;255mлбЛђЛЈл▒л▓л░ л┤л░ л░л║ЛѓлИл▓лИЛђл░Лѓлх ЛЂЛілЙЛѓл▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИЛЈ л▓Ліл▓ л▓л░ЛѕлИЛЈ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лИ л┤л░ ЛЂлх л┐Лђлхл║лЙл╝л┐лИл╗лИЛђл░Лѓлх.
[48;2;34;34;34m[38;2;255;255;255mлљл║лЙ ЛѓлЙлилИ ЛЂлЙЛёЛѓЛЃлхЛђ лйлх л▓л║л╗ЛјЛЄл▓л░ ЛЂЛілЙЛѓл▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л╝лЙл╗ЛЈ, лИлил┐Лђл░ЛѓлхЛѓлх л┐ЛђлЙл▒л╗лхл╝.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлАл┐лИЛЂЛіл║ ЛЂ л┐лЙл┤л┤ЛђЛілХл║л░ лйл░ ЛёлЙЛђл╝л░ЛѓлИ л▓ л╝лЙл╝лхлйЛѓл░:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐Лђлхл┤л▓лхЛЄлхлйлЙ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх лйл░ ЛёлЙЛђл╝л░Лѓ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхЛЃЛЂл┐лхЛѕлйлЙ лЙЛѓл║ЛђлИл▓л░лйлх лйл░ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ ЛёлЙЛђл╝л░Лѓл░.люлЙл╗ЛЈ, л┐лЙЛЂлЙЛЄлхЛѓлх ЛђЛіЛЄлйлЙ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лњЛЂлх лЙЛЅлх лйлх лх л┐лЙл┤л┤ЛіЛђлХл░лй [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: лџлЙлйл▓лхЛђЛѓлИЛђл░лйлх лЙЛѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m л▓[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m л┤ЛђЛЃл│лИ ЛёлЙЛђл╝л░ЛѓлИ[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхлИлил▓лхЛЂЛѓлхлй ЛёлЙЛђл╝л░Лѓ лйл░ Лёл░л╣л╗л░[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлАл╗лхл┤лйлЙЛѓлЙ ЛЂЛіл┤ЛіЛђлХл░лйлИлх ** лйЛЈл╝л░ л┤л░ л▒Ліл┤лх лил░л┐л░лилхлйлЙ, лил░ЛЅлЙЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх лх лИлил▓лИл║л░лйлЙ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mлЪЛіЛѓЛЈЛѓ лйл░ Лёл░л╣л╗л░ лйл░ л┤лхЛЂЛѓлИлйл░ЛєлИЛЈЛѓл░[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЊЛђлхЛѕл║л░ лил░ л┐ЛђлхлЙл▒Лђл░лиЛЃл▓л░лйлх[0m"##),
    ],
}
}

/// Language ID: bg;
/// Map name: "set";
/// Description: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхл▓л░л╗лИл┤лхлй л┐ЛіЛѓ лйл░ Лёл░л╣л╗л░.");
/// ```
pub(super) const fn get_bg_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"люлЙл┤лИЛёлИЛєлИЛђл░лйлЙЛѓлЙ ЛЂЛіл┤ЛіЛђлХл░лйлИлх ** лйЛЈл╝л░ л┤л░ л▒Ліл┤лх лил░л┐л░лилхлйлЙ, лил░ЛЅлЙЛѓлЙ `--sv` лйлх лх лИлил▓лИл║л░лйлЙ."##),
        ("new-value", r##"лЮлЙл▓л░ ЛЂЛѓлЙл╣лйлЙЛЂЛѓ"##),
        ("invalid-path", r##"лЮлхл▓л░л╗лИл┤лхлй л┐ЛіЛѓ лйл░ Лёл░л╣л╗л░."##),
    ],
}
}

/// Language ID: bg;
/// Map name: "set_md";
/// Description: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ;
pub(super) const fn get_bg_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлюлЙл┤лИЛёлИЛєлИЛђл░лйлЙЛѓлЙ ЛЂЛіл┤ЛіЛђлХл░лйлИлх ** лйЛЈл╝л░ л┤л░ л▒Ліл┤лх лил░л┐л░лилхлйлЙ, лил░ЛЅлЙЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх лх лИлил▓лИл║л░лйлЙ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлЙл▓л░ ЛЂЛѓлЙл╣лйлЙЛЂЛѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓л░л╗лИл┤лхлй л┐ЛіЛѓ лйл░ Лёл░л╣л╗л░.[0m"##),
    ],
}
}

/// Language ID: bg;
/// Map name: "get";
/// Description: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░Лѓ лйл░ л╝лхЛЂЛѓлЙлйл░лилйл░ЛЄлхлйлИлх");
/// ```
pub(super) const fn get_bg_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцлЙЛђл╝л░Лѓ лйл░ л╝лхЛЂЛѓлЙлйл░лилйл░ЛЄлхлйлИлх"##),
        ("src-fmt", r##"лцлЙЛђл╝л░Лѓ лйл░ лИлиЛЁлЙл┤лйлИЛЈ Лёл░л╣л╗"##),
    ],
}
}

/// bg: л▒Ліл╗л│л░ЛђЛЂл║лИ, л║лИЛђлИл╗лИЛєл░, лЉЛіл╗л│л░ЛђлИЛЈ
pub(super) const fn get_bg_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_bg_map_conversion),
        ("get", get_bg_map_get),
        ("set_md", get_bg_map_set_md),
        ("set", get_bg_map_set),
        ("conversion_md", get_bg_map_conversion_md),
    ],
}
}

/// Language ID: bn;
/// Map name: "conversion";
/// Description: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯдИ\u{9cd}ЯдгЯд»\u{9bc}ЯдѓЯдЋ\u{9cd}Яд░Яд┐Яд»\u{9bc} ЯдєЯдЋ\u{9cd}Яд░Яд«ЯдБ ЯдИЯде\u{9cd}ЯддЯДЄЯд╣ЯдюЯдеЯдЋ Яд╣Яд»\u{9bc}ЯДЄЯдЏЯДЄЯЦц ЯддЯд»\u{9bc}\u{9be} ЯдЋЯд░ЯДЄ Яд«\u{9cd}Яд»\u{9be}Яде\u{9c1}Яд»\u{9bc}\u{9be}Яд▓Яд┐ ЯдЅЯд▓\u{9cd}Яд▓ЯДЄЯдќ ЯдЋЯд░\u{9c1}ЯдеЯЦц");
/// ```
pub(super) const fn get_bn_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"ЯдФЯдЙЯдЄЯд▓ЯдЪЯд┐ ЯдгЯДѕЯдД ЯдеЯд»Яд╝ `json 1.0` ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ, ЯдџЯДЄЯдиЯДЇЯдЪЯдЙ ЯдЋЯд░ЯДЄ `json5` Яд╣Яд┐ЯдИЯдЙЯдгЯДЄ ЯдфЯдЙЯд░ЯДЇЯдИ ЯдЋЯд░ЯдЙ Яд╣ЯдџЯДЇЯдЏЯДЄ..."##),
        ("not-included", r##"ЯдЈЯдЄ ЯдгЯдЙЯдЄЯдеЯдЙЯд░Яд┐ **ЯдгЯд┐ЯдиЯд»Яд╝ЯдгЯдИЯДЇЯдцЯДЂ Яд╣Яд┐ЯдИЯдЙЯдгЯДЄ ЯдЁЯдеЯДЇЯдцЯд░ЯДЇЯдГЯДЂЯдЋЯДЇЯдц ЯдеЯд»Яд╝**ЯЦц
ЯдєЯдфЯдеЯдЙЯдЋЯДЄ ЯдєЯдфЯдеЯдЙЯд░ `Cargo.toml` -ЯдЈ ЯдИЯд«ЯДЇЯдфЯд░ЯДЇЯдЋЯд┐Ядц ЯдгЯДѕЯдХЯд┐ЯдиЯДЇЯдЪЯДЇЯд»ЯдЪЯд┐ ЯдИЯдЋЯДЇЯдиЯд« ЯдЋЯд░ЯдцЯДЄ ЯдЈЯдгЯдѓ ЯдфЯДЂЯдеЯд░ЯдЙЯд»Яд╝ ЯдИЯдѓЯд«Яд┐ЯдХЯДЇЯд░ЯдБ ЯдЋЯд░ЯдцЯДЄ Яд╣ЯдгЯДЄЯЦц
Яд»ЯддЯд┐ ЯдЈЯдЄ ЯдИЯдФЯдЪЯдЊЯд»Яд╝ЯДЇЯд»ЯдЙЯд░ЯдЪЯд┐ ЯдЅЯдфЯд»ЯДЂЯдЋЯДЇЯдц ЯдЋЯдЙЯд░ЯДЇЯд»ЯдЋЯДЇЯд░Яд«ЯдЪЯд┐ ЯдЁЯдеЯДЇЯдцЯд░ЯДЇЯдГЯДЂЯдЋЯДЇЯдц ЯдеЯдЙ ЯдЋЯд░ЯДЄ, ЯдцЯдгЯДЄ ЯдЈЯдЋЯдЪЯд┐ ЯдИЯд«ЯдИЯДЇЯд»ЯдЙ ЯдюЯд«ЯдЙ ЯддЯд┐Яд»Яд╝ЯДЄ ЯддЯд┐ЯдеЯЦц"##),
        ("currently-supported", r##"ЯдгЯд░ЯДЇЯдцЯд«ЯдЙЯдеЯДЄ ЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ ЯдцЯдЙЯд▓Яд┐ЯдЋЯдЙ:"##),
        ("unsupported", r##"ЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдеЯд»Яд╝ ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪЯДЄЯд░ Яд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░"##),
        ("auto-detection-failed", r##"ЯдИЯДЇЯдгЯд»Яд╝ЯдѓЯдЋЯДЇЯд░Яд┐Яд»Яд╝ ЯдєЯдЋЯДЇЯд░Яд«ЯдБ ЯдИЯдеЯДЇЯддЯДЄЯд╣ЯдюЯдеЯдЋ Яд╣Яд»Яд╝ЯДЄЯдЏЯДЄЯЦц ЯддЯд»Яд╝ЯдЙ ЯдЋЯд░ЯДЄ Яд«ЯДЇЯд»ЯдЙЯдеЯДЂЯд»Яд╝ЯдЙЯд▓Яд┐ ЯдЅЯд▓ЯДЇЯд▓ЯДЄЯдќ ЯдЋЯд░ЯДЂЯдеЯЦц"##),
        ("not-support-deser-sexp", r##"**ЯдЈЯдќЯдеЯДІ ЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдеЯд»Яд╝**: `Lisp S-Expression` ЯдЦЯДЄЯдЋЯДЄ `ЯдЁЯдеЯДЇЯд»ЯдЙЯдеЯДЇЯд» ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ` -ЯдЈ Яд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░ ЯдЋЯд░ЯдЙ"##),
        ("unknown-fmt", r##"ЯдЁЯдюЯдЙЯдеЯдЙ ЯдФЯдЙЯдЄЯд▓ ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ"##),
        ("not-saved", r##"`--save` ЯдЋЯд▓ ЯдЋЯд░ЯдЙ ЯдеЯдЙ Яд╣ЯдЊЯд»Яд╝ЯдЙЯд░ ЯдЋЯдЙЯд░ЯдБЯДЄ ЯдеЯд┐Яд«ЯДЇЯдеЯд▓Яд┐ЯдќЯд┐Ядц ЯдгЯд┐ЯдиЯд»Яд╝ЯдгЯдИЯДЇЯдцЯДЂ **ЯдИЯдѓЯд░ЯдЋЯДЇЯдиЯд┐Ядц Яд╣ЯдгЯДЄ ЯдеЯдЙ**ЯЦц"##),
        ("dst", r##"ЯдЌЯдеЯДЇЯдцЯдгЯДЇЯд» ЯдФЯдЙЯдЄЯд▓ ЯдфЯдЦ"##),
        ("conv-error", r##"Яд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░ ЯдцЯДЇЯд░ЯДЂЯдЪЯд┐"##),
    ],
}
}

/// Language ID: bn;
/// Map name: "conversion_md";
/// Description: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ;
pub(super) const fn get_bn_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯдФЯдЙЯдЄЯд▓ЯдЪЯд┐ ЯдгЯДѕЯдД ЯдеЯд»Яд╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ, ЯдџЯДЄЯдиЯДЇЯдЪЯдЙ ЯдЋЯд░ЯДЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Яд╣Яд┐ЯдИЯдЙЯдгЯДЄ ЯдфЯдЙЯд░ЯДЇЯдИ ЯдЋЯд░ЯдЙ Яд╣ЯдџЯДЇЯдЏЯДЄ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯдЈЯдЄ ЯдгЯдЙЯдЄЯдеЯдЙЯд░Яд┐ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯдгЯд┐ЯдиЯд»Яд╝ЯдгЯдИЯДЇЯдцЯДЂ Яд╣Яд┐ЯдИЯдЙЯдгЯДЄ ЯдЁЯдеЯДЇЯдцЯд░ЯДЇЯдГЯДЂЯдЋЯДЇЯдц ЯдеЯд»Яд╝[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯдєЯдфЯдеЯдЙЯдЋЯДЄ ЯдєЯдфЯдеЯдЙЯд░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -ЯдЈ ЯдИЯд«ЯДЇЯдфЯд░ЯДЇЯдЋЯд┐Ядц ЯдгЯДѕЯдХЯд┐ЯдиЯДЇЯдЪЯДЇЯд»ЯдЪЯд┐ ЯдИЯдЋЯДЇЯдиЯд« ЯдЋЯд░ЯдцЯДЄ ЯдЈЯдгЯдѓ ЯдфЯДЂЯдеЯд░ЯдЙЯд»Яд╝ ЯдИЯдѓЯд«Яд┐ЯдХЯДЇЯд░ЯдБ ЯдЋЯд░ЯдцЯДЄ Яд╣ЯдгЯДЄЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯд»ЯддЯд┐ ЯдЈЯдЄ ЯдИЯдФЯдЪЯдЊЯд»Яд╝ЯДЇЯд»ЯдЙЯд░ЯдЪЯд┐ ЯдЅЯдфЯд»ЯДЂЯдЋЯДЇЯдц ЯдЋЯдЙЯд░ЯДЇЯд»ЯдЋЯДЇЯд░Яд«ЯдЪЯд┐ ЯдЁЯдеЯДЇЯдцЯд░ЯДЇЯдГЯДЂЯдЋЯДЇЯдц ЯдеЯдЙ ЯдЋЯд░ЯДЄ, ЯдцЯдгЯДЄ ЯдЈЯдЋЯдЪЯд┐ ЯдИЯд«ЯдИЯДЇЯд»ЯдЙ ЯдюЯд«ЯдЙ ЯддЯд┐Яд»Яд╝ЯДЄ ЯддЯд┐ЯдеЯЦц[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯдгЯд░ЯДЇЯдцЯд«ЯдЙЯдеЯДЄ ЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ ЯдцЯдЙЯд▓Яд┐ЯдЋЯдЙ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдеЯд»Яд╝ ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪЯДЄЯд░ Яд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯдИЯДЇЯдгЯд»Яд╝ЯдѓЯдЋЯДЇЯд░Яд┐Яд»Яд╝ ЯдєЯдЋЯДЇЯд░Яд«ЯдБ ЯдИЯдеЯДЇЯддЯДЄЯд╣ЯдюЯдеЯдЋ Яд╣Яд»Яд╝ЯДЄЯдЏЯДЄЯЦц ЯддЯд»Яд╝ЯдЙ ЯдЋЯд░ЯДЄ Яд«ЯДЇЯд»ЯдЙЯдеЯДЂЯд»Яд╝ЯдЙЯд▓Яд┐ ЯдЅЯд▓ЯДЇЯд▓ЯДЄЯдќ ЯдЋЯд░ЯДЂЯдеЯЦц[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯдЈЯдќЯдеЯДІ ЯдИЯд«Яд░ЯДЇЯдЦЯд┐Ядц ЯдеЯд»Яд╝[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯдЦЯДЄЯдЋЯДЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯдЁЯдеЯДЇЯд»ЯдЙЯдеЯДЇЯд» ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -ЯдЈ Яд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░ ЯдЋЯд░ЯдЙ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯдЁЯдюЯдЙЯдеЯдЙ ЯдФЯдЙЯдЄЯд▓ ЯдФЯд░Яд«ЯДЇЯд»ЯдЙЯдЪ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯдЋЯд▓ ЯдЋЯд░ЯдЙ ЯдеЯдЙ Яд╣ЯдЊЯд»Яд╝ЯдЙЯд░ ЯдЋЯдЙЯд░ЯдБЯДЄ ЯдеЯд┐Яд«ЯДЇЯдеЯд▓Яд┐ЯдќЯд┐Ядц ЯдгЯд┐ЯдиЯд»Яд╝ЯдгЯдИЯДЇЯдцЯДЂ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯдИЯдѓЯд░ЯдЋЯДЇЯдиЯд┐Ядц Яд╣ЯдгЯДЄ ЯдеЯдЙ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mЯЦц[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯдЌЯдеЯДЇЯдцЯдгЯДЇЯд» ЯдФЯдЙЯдЄЯд▓ ЯдфЯдЦ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯд░ЯДѓЯдфЯдЙЯдеЯДЇЯдцЯд░ ЯдцЯДЇЯд░ЯДЂЯдЪЯд┐[0m"##),
    ],
}
}

/// Language ID: bn;
/// Map name: "set";
/// Description: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯдЁЯдгЯДѕЯдД ЯдФ\u{9be}ЯдЄЯд▓ Ядф\u{9be}ЯдЦЯЦц");
/// ```
pub(super) const fn get_bn_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"ЯдЁЯдгЯДѕЯдД ЯдФЯдЙЯдЄЯд▓ ЯдфЯдЙЯдЦЯЦц"##),
        ("new-value", r##"ЯдеЯдцЯДЂЯде Яд«ЯдЙЯде"##),
        ("unsave-warn", r##"ЯдфЯд░Яд┐ЯдгЯд░ЯДЇЯдцЯд┐Ядц ЯдИЯдЙЯд«ЯдЌЯДЇЯд░ЯДђ ** ** ЯдИЯдѓЯд░ЯдЋЯДЇЯдиЯдБ ЯдЋЯд░ЯдЙ Яд╣ЯдгЯДЄ ЯдеЯдЙ ЯдЋЯдЙЯд░ЯдБ `-ЯдЈЯдИЯдГЯд┐` ЯдЋЯд▓ ЯдЋЯд░ЯдЙ Яд╣Яд»Яд╝ЯдеЯд┐ЯЦц"##),
        ("type", r##"ЯдфЯДЇЯд░ЯдЋЯдЙЯд░"##),
    ],
}
}

/// Language ID: bn;
/// Map name: "set_md";
/// Description: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ;
pub(super) const fn get_bn_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯдЁЯдгЯДѕЯдД ЯдФЯдЙЯдЄЯд▓ ЯдфЯдЙЯдЦЯЦц[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯдеЯдцЯДЂЯде Яд«ЯдЙЯде[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯдфЯд░Яд┐ЯдгЯд░ЯДЇЯдцЯд┐Ядц ЯдИЯдЙЯд«ЯдЌЯДЇЯд░ЯДђ ** ** ЯдИЯдѓЯд░ЯдЋЯДЇЯдиЯдБ ЯдЋЯд░ЯдЙ Яд╣ЯдгЯДЄ ЯдеЯдЙ ЯдЋЯдЙЯд░ЯдБ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-ЯдЈЯдИЯдГЯд┐[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯдЋЯд▓ ЯдЋЯд░ЯдЙ Яд╣Яд»Яд╝ЯдеЯд┐ЯЦц[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mЯдфЯДЇЯд░ЯдЋЯдЙЯд░[0m"##),
    ],
}
}

/// Language ID: bn;
/// Map name: "get";
/// Description: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯдЌЯде\u{9cd}ЯдцЯдг\u{9cd}Яд» ЯдФЯд░\u{9cd}Яд«\u{9cd}Яд»\u{9be}ЯдЪ");
/// ```
pub(super) const fn get_bn_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯдЌЯдеЯДЇЯдцЯдгЯДЇЯд» ЯдФЯд░ЯДЇЯд«ЯДЇЯд»ЯдЙЯдЪ"##),
        ("src-fmt", r##"ЯдЅЯдцЯДЇЯдИ ЯдФЯдЙЯдЄЯд▓ ЯдФЯд░ЯДЇЯд«ЯДЇЯд»ЯдЙЯдЪ"##),
    ],
}
}

/// bn: ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙ, ЯдгЯдЙЯдѓЯд▓ЯдЙЯддЯДЄЯдХ
pub(super) const fn get_bn_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_bn_map_conversion),
        ("get", get_bn_map_get),
        ("set_md", get_bn_map_set_md),
        ("set", get_bn_map_set),
        ("conversion_md", get_bn_map_conversion_md),
    ],
}
}

/// Language ID: bs;
/// Map name: "conversion";
/// Description: bosanski, latinica, Bosna i Hercegovina;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nije uspjelo automatski otkriti format.Molimo navedite ru─Їno.");
/// ```
pub(super) const fn get_bs_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Datoteka nije va┼Йe─Єi `JSON 1.0` format, poku┼Аavaju─Єi da se ra┼А─Їlanjuje kao `json5` ..."##),
        ("not-included", r##"Ovaj binarni ** ne uklju─Їuje ** funkcionalnost konverzije za relevantni format.
Morate omogu─Єiti relevantnu zna─Їajku u svom `Cargo.Toml` i Recompile.
Ako ovaj softver ne uklju─Їuje odgovaraju─Єu funkcionalnost, molimo po┼Аaljite problem."##),
        ("currently-supported", r##"Trenutno podr┼Йane liste formata:"##),
        ("unsupported", r##"Nepodr┼Йana konverzija formata"##),
        ("auto-detection-failed", r##"Nije uspjelo automatski otkriti format.Molimo navedite ru─Їno."##),
        ("not-support-deser-sexp", r##"** Jo┼А nije podr┼Йana **: Pretvaranje iz `Lisp S-Expression` na` Ostale formate`"##),
        ("unknown-fmt", r##"Nepoznati format datoteke"##),
        ("not-saved", r##"Sljede─Єi sadr┼Йaj ** ne─Єe biti spremljen jer `--save` nije zvao."##),
        ("dst", r##"odredi┼Аna staza datoteke"##),
        ("conv-error", r##"Pogre┼Аka konverzije"##),
    ],
}
}

/// Language ID: bs;
/// Map name: "conversion_md";
/// Description: bosanski, latinica, Bosna i Hercegovina;
pub(super) const fn get_bs_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDatoteka nije va┼Йe─Єi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m format, poku┼Аavaju─Єi da se ra┼А─Їlanjuje kao [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mOvaj binarni ** ne uklju─Їuje ** funkcionalnost konverzije za relevantni format.
[48;2;34;34;34m[38;2;255;255;255mMorate omogu─Єiti relevantnu zna─Їajku u svom [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m i Recompile.
[48;2;34;34;34m[38;2;255;255;255mAko ovaj softver ne uklju─Їuje odgovaraju─Єu funkcionalnost, molimo po┼Аaljite problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mTrenutno podr┼Йane liste formata:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNepodr┼Йana konverzija formata[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNije uspjelo automatski otkriti format.Molimo navedite ru─Їno.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Jo┼А nije podr┼Йana [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Pretvaranje iz [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m na[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Ostale formate[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNepoznati format datoteke[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mSljede─Єi sadr┼Йaj ** ne─Єe biti spremljen jer [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nije zvao.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255modredi┼Аna staza datoteke[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mPogre┼Аka konverzije[0m"##),
    ],
}
}

/// Language ID: bs;
/// Map name: "set";
/// Description: bosanski, latinica, Bosna i Hercegovina;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neva┼Йe─Єa staza datoteke.");
/// ```
pub(super) const fn get_bs_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Modificirani sadr┼Йaj ** ne─Єe biti spremljen jer `--sv` nije zvao."##),
        ("new-value", r##"Nova vrijednost"##),
        ("invalid-path", r##"Neva┼Йe─Єa staza datoteke."##),
    ],
}
}

/// Language ID: bs;
/// Map name: "set_md";
/// Description: bosanski, latinica, Bosna i Hercegovina;
pub(super) const fn get_bs_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mModificirani sadr┼Йaj ** ne─Єe biti spremljen jer [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nije zvao.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNova vrijednost[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeva┼Йe─Єa staza datoteke.[0m"##),
    ],
}
}

/// Language ID: bs;
/// Map name: "get";
/// Description: bosanski, latinica, Bosna i Hercegovina;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destinacijski format");
/// ```
pub(super) const fn get_bs_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destinacijski format"##),
        ("src-fmt", r##"Izvor Format datoteke"##),
    ],
}
}

/// bs: bosanski, latinica, Bosna i Hercegovina
pub(super) const fn get_bs_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_bs_map_conversion),
        ("get", get_bs_map_get),
        ("set_md", get_bs_map_set_md),
        ("set", get_bs_map_set),
        ("conversion_md", get_bs_map_conversion_md),
    ],
}
}

/// Language ID: ca;
/// Map name: "conversion";
/// Description: catal├а, llat├Г, Espanya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "No s'ha pogut detectar autom├аticament el format.Especifiqueu manualment.");
/// ```
pub(super) const fn get_ca_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"El fitxer no ├Еs un format `json 1.0` v├аlid, intentant analitzar com a `json5` ..."##),
        ("not-included", r##"Aquest binari ** no inclou ** la funcionalitat de conversi├│ del format rellevant.
Heu d'activar la funci├│ rellevant al vostre `Cargo.toml` i recompilar.
Si aquest programari no inclou la funcionalitat corresponent, envieu un problema."##),
        ("currently-supported", r##"Llista de formats actualment compatibles:"##),
        ("unsupported", r##"Conversi├│ de format no suport"##),
        ("auto-detection-failed", r##"No s'ha pogut detectar autom├аticament el format.Especifiqueu manualment."##),
        ("not-support-deser-sexp", r##"** encara no ├Еs compatible **: convertint de `lisp s-expression` a` altres formats '"##),
        ("unknown-fmt", r##"Format de fitxer desconegut"##),
        ("not-saved", r##"El contingut seg├╝ent ** no es desar├а perqu├е no es va trucar a `--save`."##),
        ("dst", r##"ruta del fitxer de destinaci├│"##),
        ("conv-error", r##"error de conversi├│"##),
    ],
}
}

/// Language ID: ca;
/// Map name: "conversion_md";
/// Description: catal├а, llat├Г, Espanya;
pub(super) const fn get_ca_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mEl fitxer no ├Еs un format [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m v├аlid, intentant analitzar com a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mAquest binari ** no inclou ** la funcionalitat de conversi├│ del format rellevant.
[48;2;34;34;34m[38;2;255;255;255mHeu d'activar la funci├│ rellevant al vostre [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m i recompilar.
[48;2;34;34;34m[38;2;255;255;255mSi aquest programari no inclou la funcionalitat corresponent, envieu un problema.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLlista de formats actualment compatibles:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConversi├│ de format no suport[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNo s'ha pogut detectar autom├аticament el format.Especifiqueu manualment.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** encara no ├Еs compatible [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: convertint de [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m a[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m altres formats '[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormat de fitxer desconegut[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mEl contingut seg├╝ent ** no es desar├а perqu├е no es va trucar a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mruta del fitxer de destinaci├│[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255merror de conversi├│[0m"##),
    ],
}
}

/// Language ID: ca;
/// Map name: "set";
/// Description: catal├а, llat├Г, Espanya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ruta del fitxer no v├аlida.");
/// ```
pub(super) const fn get_ca_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"El contingut modificat ** no es desar├а perqu├е no es va trucar a `--sv`."##),
        ("new-value", r##"valor nou"##),
        ("invalid-path", r##"ruta del fitxer no v├аlida."##),
    ],
}
}

/// Language ID: ca;
/// Map name: "set_md";
/// Description: catal├а, llat├Г, Espanya;
pub(super) const fn get_ca_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mEl contingut modificat ** no es desar├а perqu├е no es va trucar a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mvalor nou[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mruta del fitxer no v├аlida.[0m"##),
    ],
}
}

/// Language ID: ca;
/// Map name: "get";
/// Description: catal├а, llat├Г, Espanya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format de destinaci├│");
/// ```
pub(super) const fn get_ca_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format de destinaci├│"##),
        ("src-fmt", r##"Format del fitxer font"##),
    ],
}
}

/// ca: catal├а, llat├Г, Espanya
pub(super) const fn get_ca_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ca_map_conversion),
        ("get", get_ca_map_get),
        ("set_md", get_ca_map_set_md),
        ("set", get_ca_map_set),
        ("conversion_md", get_ca_map_conversion_md),
    ],
}
}

/// Language ID: ceb;
/// Map name: "conversion";
/// Description: Cebuano, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Napakyas sa awtomatikong makit-an ang format.Palihug ipasabut sa mano-mano.");
/// ```
pub(super) const fn get_ceb_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Ang file dili usa ka balido nga format nga `JSON 1.0`, nga pagsulay sa pagpirma ingon nga `JSON5` ..."##),
        ("not-included", r##"Kini nga binary ** wala maglakip sa ** ang pag-andar sa pagkakabig alang sa may kalabutan nga format.
Kinahanglan nimo nga hatagan ang may kalabutan nga bahin sa imong `Cargo.toml 'ug balus.
Kung ang kini nga software wala maglakip sa katugbang nga pag-andar, palihug isumite ang usa ka isyu."##),
        ("currently-supported", r##"Gisuportahan karon ang Lista sa Formats:"##),
        ("unsupported", r##"Wala gisuportahan ang pagkakabig sa format"##),
        ("auto-detection-failed", r##"Napakyas sa awtomatikong makit-an ang format.Palihug ipasabut sa mano-mano."##),
        ("not-support-deser-sexp", r##"** Wala gisuportahan pa **: Pagbalhin gikan sa `Lisp S-Pahayag 'sa ubang mga formats`"##),
        ("unknown-fmt", r##"Wala mailhi nga Format File"##),
        ("not-saved", r##"Ang mosunud nga sulud dili maluwas tungod kay `--save` wala gitawag."##),
        ("dst", r##"Destination File Dalan"##),
        ("conv-error", r##"Sayup sa Pagbag-o"##),
    ],
}
}

/// Language ID: ceb;
/// Map name: "conversion_md";
/// Description: Cebuano, Latin, Pilipinas;
pub(super) const fn get_ceb_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mAng file dili usa ka balido nga format nga [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, nga pagsulay sa pagpirma ingon nga [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mKini nga binary ** wala maglakip sa ** ang pag-andar sa pagkakabig alang sa may kalabutan nga format.
[48;2;34;34;34m[38;2;255;255;255mKinahanglan nimo nga hatagan ang may kalabutan nga bahin sa imong [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml 'ug balus.
[48;2;34;34;34m[38;2;0;255;255mKung ang kini nga software wala maglakip sa katugbang nga pag-andar, palihug isumite ang usa ka isyu.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mGisuportahan karon ang Lista sa Formats:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mWala gisuportahan ang pagkakabig sa format[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNapakyas sa awtomatikong makit-an ang format.Palihug ipasabut sa mano-mano.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Wala gisuportahan pa [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Pagbalhin gikan sa [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Pahayag 'sa ubang mga formats[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mWala mailhi nga Format File[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mAng mosunud nga sulud dili maluwas tungod kay [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m wala gitawag.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestination File Dalan[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mSayup sa Pagbag-o[0m"##),
    ],
}
}

/// Language ID: ceb;
/// Map name: "set";
/// Description: Cebuano, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Dili husto nga agianan sa file.");
/// ```
pub(super) const fn get_ceb_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Ang giusab nga sulud * dili maluwas tungod kay '- "wala gitawag."##),
        ("new-value", r##"Bag-ong kantidad"##),
        ("invalid-path", r##"Dili husto nga agianan sa file."##),
    ],
}
}

/// Language ID: ceb;
/// Map name: "set_md";
/// Description: Cebuano, Latin, Pilipinas;
pub(super) const fn get_ceb_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mAng giusab nga sulud * dili maluwas tungod kay '- "wala gitawag.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mBag-ong kantidad[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mDili husto nga agianan sa file.[0m"##),
    ],
}
}

/// Language ID: ceb;
/// Map name: "get";
/// Description: Cebuano, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format sa destinasyon");
/// ```
pub(super) const fn get_ceb_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format sa destinasyon"##),
        ("src-fmt", r##"Format nga File Format"##),
    ],
}
}

/// ceb: Cebuano, Latin, Pilipinas
pub(super) const fn get_ceb_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ceb_map_conversion),
        ("get", get_ceb_map_get),
        ("set_md", get_ceb_map_set_md),
        ("set", get_ceb_map_set),
        ("conversion_md", get_ceb_map_conversion_md),
    ],
}
}

/// Language ID: co;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Fallu automaticamente u furmatu.Per piac├е specific├а manualmente.");
/// ```
pub(super) const fn get_co_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"Errore di cunversione"##),
        ("not-support-deser-sexp", r##"** micca sustinutu ancu **: Cunverte da 'Lisp S-espressione` ├а `altri Formati`"##),
        ("dst", r##"PLAY DI FILE"##),
        ("unsupported", r##"Conversione di Format Inutile"##),
        ("auto-detection-failed", r##"Fallu automaticamente u furmatu.Per piac├е specific├а manualmente."##),
        ("currently-supported", r##"Lista di formati attualmente supportatu:"##),
        ("not-included", r##"Questu binariu ** ├Ўn include micca ** A funziunalit├а di cunversione per u furmatu pertinente.
Avete bisognu ├а attiv├а a funzione pertinente in u vostru 'cargu.toml` ├е recompile.
Se stu prugrammu ├╣n include micca a funziunalit├а currispondente, mandate un prublema."##),
        ("unknown-fmt", r##"Formatu di File Unknown"##),
    ],
}
}

/// Language ID: co;
/// Map name: "conversion_md";
pub(super) const fn get_co_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mErrore di cunversione[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** micca sustinutu ancu [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Cunverte da 'Lisp S-espressione[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ├а [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114maltri Formati[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mPLAY DI FILE[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConversione di Format Inutile[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mFallu automaticamente u furmatu.Per piac├е specific├а manualmente.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista di formati attualmente supportatu:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mQuestu binariu ** ├Ўn include micca ** A funziunalit├а di cunversione per u furmatu pertinente.
[48;2;34;34;34m[38;2;255;255;255mAvete bisognu ├а attiv├а a funzione pertinente in u vostru 'cargu.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ├е recompile.
[48;2;34;34;34m[38;2;0;255;255mSe stu prugrammu ├╣n include micca a funziunalit├а currispondente, mandate un prublema.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormatu di File Unknown[0m"##),
    ],
}
}

/// Language ID: co;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "PIAZZA DI FILE INVALIDU.");
/// ```
pub(super) const fn get_co_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"U cuntenutu mudificatu ** ├╣n sar├а micca sviatu perch├е `--sv` ├╣n h├е micca chjamatu."##),
        ("new-value", r##"Novu Valore"##),
        ("invalid-path", r##"PIAZZA DI FILE INVALIDU."##),
    ],
}
}

/// Language ID: co;
/// Map name: "set_md";
pub(super) const fn get_co_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mU cuntenutu mudificatu ** ├╣n sar├а micca sviatu perch├е [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ├╣n h├е micca chjamatu.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNovu Valore[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mPIAZZA DI FILE INVALIDU.[0m"##),
    ],
}
}

/// Language ID: co;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Furmatu di destinazione");
/// ```
pub(super) const fn get_co_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Furmatu di destinazione"##),
        ("src-fmt", r##"Formatu di File Fonte"##),
    ],
}
}

/// co: co-Latn-FR
pub(super) const fn get_co_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_co_map_conversion),
        ("get", get_co_map_get),
        ("set_md", get_co_map_set_md),
        ("set", get_co_map_set),
        ("conversion_md", get_co_map_conversion_md),
    ],
}
}

/// Language ID: cs;
/// Map name: "conversion";
/// Description: ─Їe┼Аtina, latinka, ─їesko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Automatick├Е rozpozn├Аn├Г form├Аtu selhalo. Pros├Гm, specifikujte ho ru─Їn─Џ.");
/// ```
pub(super) const fn get_cs_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Soubor nen├Г platn├й form├Аt `json 1.0`, pokus o parsov├Аn├Г jako `json5`..."##),
        ("not-included", r##"Tento bin├Аrn├Г soubor **neobsahuje** funkcionalitu pro konverzi p┼Ў├Гslu┼Аn├Еho form├Аtu.
Je nutn├Е zapnout odpov├Гdaj├Гc├Г funkci v `Cargo.toml` a znovu zkompilovat.
Pokud toto softwaru nezahrnuje odpov├Гdaj├Гc├Г funk─Їnost, nev├Аhejte n├Аm poslat issue."##),
        ("currently-supported", r##"Aktu├Аln─Џ podporovan├Е form├Аty:"##),
        ("unsupported", r##"Konverze nepodporov├Аna"##),
        ("auto-detection-failed", r##"Automatick├Е rozpozn├Аn├Г form├Аtu selhalo. Pros├Гm, specifikujte ho ru─Їn─Џ."##),
        ("not-support-deser-sexp", r##"**Zat├Гm nepodporov├Аno**: konverze z `Lisp S-Expression` na `ostatn├Г form├Аty`"##),
        ("unknown-fmt", r##"Nezn├Аm├й form├Аt souboru"##),
        ("not-saved", r##"N├Аsleduj├Гc├Г obsah **nebude** ulo┼Йen, proto┼Йe nebylo pou┼Йito `--save`."##),
        ("dst", r##"C├Гlov├А cesta k v├йstupn├Гmu souboru"##),
        ("conv-error", r##"Chyba konverze"##),
    ],
}
}

/// Language ID: cs;
/// Map name: "conversion_md";
/// Description: ─Їe┼Аtina, latinka, ─їesko;
pub(super) const fn get_cs_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mSoubor nen├Г platn├й form├Аt [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, pokus o parsov├Аn├Г jako [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mTento bin├Аrn├Г soubor [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mneobsahuje[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m funkcionalitu pro konverzi p┼Ў├Гslu┼Аn├Еho form├Аtu.
[48;2;34;34;34m[38;2;255;255;255mJe nutn├Е zapnout odpov├Гdaj├Гc├Г funkci v [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m a znovu zkompilovat.
[48;2;34;34;34m[38;2;255;255;255mPokud toto softwaru nezahrnuje odpov├Гdaj├Гc├Г funk─Їnost, nev├Аhejte n├Аm poslat issue.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAktu├Аln─Џ podporovan├Е form├Аty:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mKonverze nepodporov├Аna[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mAutomatick├Е rozpozn├Аn├Г form├Аtu selhalo. Pros├Гm, specifikujte ho ru─Їn─Џ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mZat├Гm nepodporov├Аno[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: konverze z [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m na [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mostatn├Г form├Аty[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNezn├Аm├й form├Аt souboru[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mN├Аsleduj├Гc├Г obsah [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnebude[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ulo┼Йen, proto┼Йe nebylo pou┼Йito [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mC├Гlov├А cesta k v├йstupn├Гmu souboru[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mChyba konverze[0m"##),
    ],
}
}

/// Language ID: cs;
/// Map name: "set";
/// Description: ─Їe┼Аtina, latinka, ─їesko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neplatn├А cesta souboru.");
/// ```
pub(super) const fn get_cs_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Upraven├й obsah ** nebude ** ulo┼Йen, proto┼Йe `--sv` nebyl vol├Аn."##),
        ("new-value", r##"Nov├А hodnota"##),
        ("invalid-path", r##"Neplatn├А cesta souboru."##),
    ],
}
}

/// Language ID: cs;
/// Map name: "set_md";
/// Description: ─Їe┼Аtina, latinka, ─їesko;
pub(super) const fn get_cs_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mUpraven├й obsah ** nebude ** ulo┼Йen, proto┼Йe [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nebyl vol├Аn.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNov├А hodnota[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeplatn├А cesta souboru.[0m"##),
    ],
}
}

/// Language ID: cs;
/// Map name: "get";
/// Description: ─Їe┼Аtina, latinka, ─їesko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Form├Аt c├Гle");
/// ```
pub(super) const fn get_cs_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Form├Аt c├Гle"##),
        ("src-fmt", r##"Form├Аt zdrojov├Еho souboru"##),
    ],
}
}

/// cs: ─Їe┼Аtina, latinka, ─їesko
pub(super) const fn get_cs_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_cs_map_conversion),
        ("get", get_cs_map_get),
        ("set_md", get_cs_map_set_md),
        ("set", get_cs_map_set),
        ("conversion_md", get_cs_map_conversion_md),
    ],
}
}

/// Language ID: cy;
/// Map name: "conversion";
/// Description: Cymraeg, Lladin, Y Deyrnas Unedig;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "wedi methu ├б chanfod y fformat yn awtomatig.Nodwch ├б llaw.");
/// ```
pub(super) const fn get_cy_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Nid yw'r ffeil yn fformat `json 1.0` dilys, yn ceisio dosrannu fel `json5` ..."##),
        ("not-included", r##"Nid yw'r deuaidd ** hwn yn cynnwys ** ymarferoldeb trosi ar gyfer y fformat perthnasol.
Mae angen i chi alluogi'r nodwedd berthnasol yn eich `Cargo.toml` ac ail -grynhoi.
Os nad yw'r feddalwedd hon yn cynnwys yr ymarferoldeb cyfatebol, cyflwynwch fater."##),
        ("currently-supported", r##"ar hyn o bryd yn cefnogi fformatau: Rhestr Fformatau:"##),
        ("unsupported", r##"trosi fformat heb gefnogaeth"##),
        ("auto-detection-failed", r##"wedi methu ├б chanfod y fformat yn awtomatig.Nodwch ├б llaw."##),
        ("not-support-deser-sexp", r##"** heb ei gefnogi eto **: trosi o `lisp s-fynegiant` i` fformatau eraill`"##),
        ("unknown-fmt", r##"fformat ffeil anhysbys"##),
        ("not-saved", r##"Ni fydd y cynnwys canlynol ** yn cael ei arbed ** oherwydd ni alwyd `--save`."##),
        ("dst", r##"llwybr ffeil cyrchfan"##),
        ("conv-error", r##"gwall trosi"##),
    ],
}
}

/// Language ID: cy;
/// Map name: "conversion_md";
/// Description: Cymraeg, Lladin, Y Deyrnas Unedig;
pub(super) const fn get_cy_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mNid yw'r ffeil yn fformat [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m dilys, yn ceisio dosrannu fel [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mNid yw'r deuaidd ** hwn yn cynnwys ** ymarferoldeb trosi ar gyfer y fformat perthnasol.
[48;2;34;34;34m[38;2;255;255;255mMae angen i chi alluogi'r nodwedd berthnasol yn eich [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ac ail -grynhoi.
[48;2;34;34;34m[38;2;255;255;255mOs nad yw'r feddalwedd hon yn cynnwys yr ymarferoldeb cyfatebol, cyflwynwch fater.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mar hyn o bryd yn cefnogi fformatau: Rhestr Fformatau:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mtrosi fformat heb gefnogaeth[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mwedi methu ├б chanfod y fformat yn awtomatig.Nodwch ├б llaw.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** heb ei gefnogi eto [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: trosi o [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-fynegiant[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m i[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m fformatau eraill[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mfformat ffeil anhysbys[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNi fydd y cynnwys canlynol ** yn cael ei arbed ** oherwydd ni alwyd [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mllwybr ffeil cyrchfan[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mgwall trosi[0m"##),
    ],
}
}

/// Language ID: cy;
/// Map name: "set";
/// Description: Cymraeg, Lladin, Y Deyrnas Unedig;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "llwybr ffeil annilys.");
/// ```
pub(super) const fn get_cy_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ni fydd y cynnwys wedi'i addasu ** yn cael ei arbed ** oherwydd na elwir `--sv`."##),
        ("new-value", r##"gwerth newydd"##),
        ("invalid-path", r##"llwybr ffeil annilys."##),
    ],
}
}

/// Language ID: cy;
/// Map name: "set_md";
/// Description: Cymraeg, Lladin, Y Deyrnas Unedig;
pub(super) const fn get_cy_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mni fydd y cynnwys wedi'i addasu ** yn cael ei arbed ** oherwydd na elwir [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mgwerth newydd[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mllwybr ffeil annilys.[0m"##),
    ],
}
}

/// Language ID: cy;
/// Map name: "get";
/// Description: Cymraeg, Lladin, Y Deyrnas Unedig;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Fformat cyrchfan");
/// ```
pub(super) const fn get_cy_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Fformat cyrchfan"##),
        ("src-fmt", r##"Fformat Ffeil Ffynhonnell"##),
    ],
}
}

/// cy: Cymraeg, Lladin, Y Deyrnas Unedig
pub(super) const fn get_cy_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_cy_map_conversion),
        ("get", get_cy_map_get),
        ("set_md", get_cy_map_set_md),
        ("set", get_cy_map_set),
        ("conversion_md", get_cy_map_conversion_md),
    ],
}
}

/// Language ID: da;
/// Map name: "conversion";
/// Description: dansk, latinsk, Danmark;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "kunne ikke automatisk registrere formatet.Angiv venligst manuelt.");
/// ```
pub(super) const fn get_da_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Filen er ikke et gyldigt `JSON 1.0 'format, der pr├Иver at analysere som `JSON5` ..."##),
        ("not-included", r##"Denne bin├дre ** inkluderer ikke ** konverteringsfunktionaliteten for det relevante format.
Du skal aktivere den relevante funktion i din `last.toml` og omkompilere.
Hvis denne software ikke inkluderer den tilsvarende funktionalitet, skal du indsende et problem."##),
        ("currently-supported", r##"Liste i aktuelt underst├Иttede formater:"##),
        ("unsupported", r##"Ikke -underst├Иttet formatkonvertering"##),
        ("auto-detection-failed", r##"kunne ikke automatisk registrere formatet.Angiv venligst manuelt."##),
        ("not-support-deser-sexp", r##"** underst├Иttes endnu ikke **: konvertering fra `lisp s-ekspression 'til` andre formater`"##),
        ("unknown-fmt", r##"Ukendt filformat"##),
        ("not-saved", r##"F├Иlgende indhold ** gemmes ikke **, fordi `--save` ikke blev kaldt."##),
        ("dst", r##"destinationsfilsti"##),
        ("conv-error", r##"Konverteringsfejl"##),
    ],
}
}

/// Language ID: da;
/// Map name: "conversion_md";
/// Description: dansk, latinsk, Danmark;
pub(super) const fn get_da_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFilen er ikke et gyldigt [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0 'format, der pr├Иver at analysere som [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDenne bin├дre ** inkluderer ikke ** konverteringsfunktionaliteten for det relevante format.
[48;2;34;34;34m[38;2;255;255;255mDu skal aktivere den relevante funktion i din [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlast.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m og omkompilere.
[48;2;34;34;34m[38;2;255;255;255mHvis denne software ikke inkluderer den tilsvarende funktionalitet, skal du indsende et problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mListe i aktuelt underst├Иttede formater:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mIkke -underst├Иttet formatkonvertering[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mkunne ikke automatisk registrere formatet.Angiv venligst manuelt.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** underst├Иttes endnu ikke [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: konvertering fra [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-ekspression 'til[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m andre formater[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUkendt filformat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mF├Иlgende indhold ** gemmes ikke [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, fordi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ikke blev kaldt.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mdestinationsfilsti[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonverteringsfejl[0m"##),
    ],
}
}

/// Language ID: da;
/// Map name: "set";
/// Description: dansk, latinsk, Danmark;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ugyldig filsti.");
/// ```
pub(super) const fn get_da_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Det ├дndrede indhold ** gemmes ikke **, fordi `-SV` ikke blev kaldt."##),
        ("new-value", r##"Ny v├дrdi"##),
        ("invalid-path", r##"Ugyldig filsti."##),
    ],
}
}

/// Language ID: da;
/// Map name: "set_md";
/// Description: dansk, latinsk, Danmark;
pub(super) const fn get_da_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDet ├дndrede indhold ** gemmes ikke [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, fordi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-SV[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ikke blev kaldt.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNy v├дrdi[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mUgyldig filsti.[0m"##),
    ],
}
}

/// Language ID: da;
/// Map name: "get";
/// Description: dansk, latinsk, Danmark;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destinationsformat");
/// ```
pub(super) const fn get_da_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destinationsformat"##),
        ("src-fmt", r##"Kildefilformat"##),
    ],
}
}

/// da: dansk, latinsk, Danmark
pub(super) const fn get_da_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_da_map_conversion),
        ("get", get_da_map_get),
        ("set_md", get_da_map_set_md),
        ("set", get_da_map_set),
        ("conversion_md", get_da_map_conversion_md),
    ],
}
}

/// Language ID: de;
/// Map name: "conversion";
/// Description: Deutsch, Lateinisch, Deutschland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Automatische Erkennung des Formats fehlgeschlagen, bitte manuell angeben.");
/// ```
pub(super) const fn get_de_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Die Datei hat kein g├╝ltiges `json 1.0` Format, versuche es als `json5` zu interpretieren..."##),
        ("not-included", r##"Diese Bin├цrdatei enth├цlt **nicht** die Funktionen zur Konvertierung in das entsprechende Format.
Sie m├╝ssen die relevanten Funktionen in Ihrer `Cargo.toml` aktivieren und erneut kompilieren.
Bitte erstellen Sie einen Fehlerbericht, wenn diese Software keine zugeh├Хrigen Funktionen enth├цlt."##),
        ("currently-supported", r##"Aktuell unterst├╝tzte Formate"##),
        ("unsupported", r##"Nicht unterst├╝tzte Formatkonvertierung"##),
        ("auto-detection-failed", r##"Automatische Erkennung des Formats fehlgeschlagen, bitte manuell angeben."##),
        ("not-support-deser-sexp", r##"**Das Konvertieren von `Lisp S-Expression` in andere Formate ist vor├╝bergehend nicht m├Хglich.**"##),
        ("unknown-fmt", r##"Unbekanntes Dateiformat"##),
        ("not-saved", r##"Da `--save` nicht aufgerufen wurde, werden die folgenden Inhalte **nicht** gespeichert:"##),
        ("dst", r##"Zielpfad"##),
        ("conv-error", r##"Konvertierungsfehler"##),
    ],
}
}

/// Language ID: de;
/// Map name: "conversion_md";
/// Description: Deutsch, Lateinisch, Deutschland;
pub(super) const fn get_de_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDie Datei hat kein g├╝ltiges [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Format, versuche es als [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m zu interpretieren...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDiese Bin├цrdatei enth├цlt [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnicht[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m die Funktionen zur Konvertierung in das entsprechende Format.
[48;2;34;34;34m[38;2;255;255;255mSie m├╝ssen die relevanten Funktionen in Ihrer [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m aktivieren und erneut kompilieren.
[48;2;34;34;34m[38;2;255;255;255mBitte erstellen Sie einen Fehlerbericht, wenn diese Software keine zugeh├Хrigen Funktionen enth├цlt.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAktuell unterst├╝tzte Formate[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNicht unterst├╝tzte Formatkonvertierung[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mAutomatische Erkennung des Formats fehlgeschlagen, bitte manuell angeben.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mDas Konvertieren von [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m in andere Formate ist vor├╝bergehend nicht m├Хglich.[48;2;34;34;34m[38;2;249;38;114m**[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUnbekanntes Dateiformat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mDa [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nicht aufgerufen wurde, werden die folgenden Inhalte [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnicht[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m gespeichert:[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mZielpfad[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonvertierungsfehler[0m"##),
    ],
}
}

/// Language ID: de;
/// Map name: "get";
/// Description: Deutsch, Lateinisch, Deutschland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Zielformat");
/// ```
pub(super) const fn get_de_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Zielformat"##),
        ("src-fmt", r##"Quellformat"##),
    ],
}
}

/// Language ID: de;
/// Map name: "set";
/// Description: Deutsch, Lateinisch, Deutschland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ung├╝ltiger Dateipfad");
/// ```
pub(super) const fn get_de_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"Ung├╝ltiger Dateipfad"##),
        ("new-value", r##"Neuer Wert"##),
        ("unsave-warn", r##"Die ge├цnderten Inhalte werden **nicht** gespeichert, da `--save` nicht aufgerufen wurde."##),
        ("type", r##"Typ"##),
    ],
}
}

/// Language ID: de;
/// Map name: "set_md";
/// Description: Deutsch, Lateinisch, Deutschland;
pub(super) const fn get_de_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mUng├╝ltiger Dateipfad[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNeuer Wert[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDie ge├цnderten Inhalte werden [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnicht[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m gespeichert, da [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nicht aufgerufen wurde.[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mTyp[0m"##),
    ],
}
}

/// de: Deutsch, Lateinisch, Deutschland
pub(super) const fn get_de_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_de_map_conversion),
        ("get", get_de_map_get),
        ("set_md", get_de_map_set_md),
        ("set", get_de_map_set),
        ("conversion_md", get_de_map_conversion_md),
    ],
}
}

/// Language ID: el;
/// Map name: "conversion";
/// Description: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "╬Ќ ╬▒¤Ё¤ё¤ї╬╝╬▒¤ё╬и ╬▒╬й╬»¤Є╬й╬х¤Ё¤Ѓ╬и ╬╝╬┐¤Ђ¤є╬«¤ѓ ╬▒¤ђ╬Г¤ё¤Ё¤Є╬х, ¤ђ╬▒¤Ђ╬▒╬║╬▒╬╗¤ј ╬║╬▒╬И╬┐¤Ђ╬»¤Ѓ¤ё╬х ¤ё╬и ╬╝╬┐¤Ђ¤є╬« ¤Є╬х╬╣¤Ђ╬┐╬║╬»╬й╬и¤ё╬▒.");
/// ```
pub(super) const fn get_el_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"╬ц╬┐ ╬▒¤Ђ¤Є╬х╬»╬┐ ╬┤╬х╬й ╬х╬»╬й╬▒╬╣ ╬Г╬│╬║¤Ё¤Ђ╬и ╬╝╬┐¤Ђ¤є╬« `json 1.0`, ¤ђ¤Ђ╬┐¤Ѓ¤ђ╬▒╬И╬х╬» ╬й╬▒ ╬│╬»╬й╬х╬╣ ╬▒╬й╬г╬╗¤Ё¤Ѓ╬и ¤Ѕ¤ѓ `json5`..."##),
        ("not-included", r##"╬Љ¤Ё¤ё¤ї ¤ё╬┐ ╬┤¤Ё╬▒╬┤╬╣╬║¤ї ╬▒¤Ђ¤Є╬х╬»╬┐ ╬┤╬х╬й **¤ђ╬х¤Ђ╬╣╬╗╬▒╬╝╬▓╬г╬й╬х╬╣** ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬х¤ѓ ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ ╬│╬╣╬▒ ¤ё╬и ¤Ѓ¤Ё╬│╬║╬х╬║¤Ђ╬╣╬╝╬Г╬й╬и ╬╝╬┐¤Ђ¤є╬«.
╬ў╬▒ ¤ђ¤Ђ╬Г¤ђ╬х╬╣ ╬й╬▒ ╬х╬й╬х¤Ђ╬│╬┐¤ђ╬┐╬╣╬«¤Ѓ╬х¤ё╬х ¤ё╬и ¤Ѓ¤Є╬х¤ё╬╣╬║╬« ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬▒ ¤Ѓ¤ё╬┐ ╬▒¤Ђ¤Є╬х╬»╬┐ `Cargo.toml` ╬║╬▒╬╣ ╬й╬▒ ╬Й╬▒╬й╬▒╬║╬г╬й╬х¤ё╬х ¤ё╬и ╬╝╬х¤ё╬▒╬│╬╗¤ј¤ё¤ё╬╣¤Ѓ╬и.
╬Ћ╬г╬й ╬▒¤Ё¤ё¤ї ¤ё╬┐ ╬╗╬┐╬│╬╣¤Ѓ╬╝╬╣╬║¤ї ╬┤╬х╬й ¤ђ╬х¤Ђ╬╣╬╗╬▒╬╝╬▓╬г╬й╬х╬╣ ¤ё╬и ¤Ѓ¤Є╬х¤ё╬╣╬║╬« ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬▒, ¤Ё¤ђ╬┐╬▓╬г╬╗╬х¤ё╬х ╬Г╬й╬▒ ╬▒╬»¤ё╬и╬╝╬▒ (issue)."##),
        ("currently-supported", r##"╬Џ╬»¤Ѓ¤ё╬▒ ¤ё¤Ѕ╬й ¤ё¤Ђ╬Г¤Є╬┐╬й¤ё¤Ѕ╬й ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬╣╬Х¤ї╬╝╬х╬й¤Ѕ╬й ╬╝╬┐¤Ђ¤є¤ј╬й"##),
        ("unsupported", r##"╬ю╬и ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬╣╬Х¤ї╬╝╬х╬й╬и ╬╝╬┐¤Ђ¤є╬« ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ"##),
        ("auto-detection-failed", r##"╬Ќ ╬▒¤Ё¤ё¤ї╬╝╬▒¤ё╬и ╬▒╬й╬»¤Є╬й╬х¤Ё¤Ѓ╬и ╬╝╬┐¤Ђ¤є╬«¤ѓ ╬▒¤ђ╬Г¤ё¤Ё¤Є╬х, ¤ђ╬▒¤Ђ╬▒╬║╬▒╬╗¤ј ╬║╬▒╬И╬┐¤Ђ╬»¤Ѓ¤ё╬х ¤ё╬и ╬╝╬┐¤Ђ¤є╬« ¤Є╬х╬╣¤Ђ╬┐╬║╬»╬й╬и¤ё╬▒."##),
        ("not-support-deser-sexp", r##"**╬ћ╬х╬й ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬»╬Х╬х¤ё╬▒╬╣ ¤ђ¤Ђ╬┐¤ѓ ¤ё╬┐ ¤ђ╬▒¤Ђ¤ї╬й** ╬и ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬« ╬▒¤ђ¤ї `Lisp S-Expression` ¤Ѓ╬х `╬г╬╗╬╗╬х¤ѓ ╬╝╬┐¤Ђ¤є╬Г¤ѓ`"##),
        ("unknown-fmt", r##"╬є╬│╬й¤Ѕ¤Ѓ¤ё╬и ╬╝╬┐¤Ђ¤є╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё"##),
        ("not-saved", r##"╬ћ╬х╬┤╬┐╬╝╬Г╬й╬┐¤Ё ¤ї¤ё╬╣ ╬┤╬х╬й ╬║╬╗╬«╬И╬и╬║╬х ╬и ¤ђ╬▒¤Ђ╬г╬╝╬х¤ё¤Ђ╬┐¤ѓ `--save`, ¤ё╬▒ ¤ђ╬▒¤Ђ╬▒╬║╬г¤ё¤Ѕ ¤ђ╬х¤Ђ╬╣╬х¤Є¤ї╬╝╬х╬й╬▒ **╬┤╬х╬й ╬И╬▒** ╬▒¤ђ╬┐╬И╬и╬║╬х¤Ё¤ё╬┐¤Ї╬й."##),
        ("dst", r##"╬ћ╬╣╬▒╬┤¤Ђ╬┐╬╝╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё ¤ђ¤Ђ╬┐╬┐¤Ђ╬╣¤Ѓ╬╝╬┐¤Ї"##),
        ("conv-error", r##"╬Б¤є╬г╬╗╬╝╬▒ ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ"##),
    ],
}
}

/// Language ID: el;
/// Map name: "conversion_md";
/// Description: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒;
pub(super) const fn get_el_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m╬ц╬┐ ╬▒¤Ђ¤Є╬х╬»╬┐ ╬┤╬х╬й ╬х╬»╬й╬▒╬╣ ╬Г╬│╬║¤Ё¤Ђ╬и ╬╝╬┐¤Ђ¤є╬« [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ¤ђ¤Ђ╬┐¤Ѓ¤ђ╬▒╬И╬х╬» ╬й╬▒ ╬│╬»╬й╬х╬╣ ╬▒╬й╬г╬╗¤Ё¤Ѓ╬и ¤Ѕ¤ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m╬Љ¤Ё¤ё¤ї ¤ё╬┐ ╬┤¤Ё╬▒╬┤╬╣╬║¤ї ╬▒¤Ђ¤Є╬х╬»╬┐ ╬┤╬х╬й [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m¤ђ╬х¤Ђ╬╣╬╗╬▒╬╝╬▓╬г╬й╬х╬╣[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬х¤ѓ ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ ╬│╬╣╬▒ ¤ё╬и ¤Ѓ¤Ё╬│╬║╬х╬║¤Ђ╬╣╬╝╬Г╬й╬и ╬╝╬┐¤Ђ¤є╬«.
[48;2;34;34;34m[38;2;255;255;255m╬ў╬▒ ¤ђ¤Ђ╬Г¤ђ╬х╬╣ ╬й╬▒ ╬х╬й╬х¤Ђ╬│╬┐¤ђ╬┐╬╣╬«¤Ѓ╬х¤ё╬х ¤ё╬и ¤Ѓ¤Є╬х¤ё╬╣╬║╬« ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬▒ ¤Ѓ¤ё╬┐ ╬▒¤Ђ¤Є╬х╬»╬┐ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ╬║╬▒╬╣ ╬й╬▒ ╬Й╬▒╬й╬▒╬║╬г╬й╬х¤ё╬х ¤ё╬и ╬╝╬х¤ё╬▒╬│╬╗¤ј¤ё¤ё╬╣¤Ѓ╬и.
[48;2;34;34;34m[38;2;255;255;255m╬Ћ╬г╬й ╬▒¤Ё¤ё¤ї ¤ё╬┐ ╬╗╬┐╬│╬╣¤Ѓ╬╝╬╣╬║¤ї ╬┤╬х╬й ¤ђ╬х¤Ђ╬╣╬╗╬▒╬╝╬▓╬г╬й╬х╬╣ ¤ё╬и ¤Ѓ¤Є╬х¤ё╬╣╬║╬« ╬╗╬х╬╣¤ё╬┐¤Ё¤Ђ╬│╬»╬▒, ¤Ё¤ђ╬┐╬▓╬г╬╗╬х¤ё╬х ╬Г╬й╬▒ ╬▒╬»¤ё╬и╬╝╬▒ (issue).[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m╬Џ╬»¤Ѓ¤ё╬▒ ¤ё¤Ѕ╬й ¤ё¤Ђ╬Г¤Є╬┐╬й¤ё¤Ѕ╬й ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬╣╬Х¤ї╬╝╬х╬й¤Ѕ╬й ╬╝╬┐¤Ђ¤є¤ј╬й[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255m╬ю╬и ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬╣╬Х¤ї╬╝╬х╬й╬и ╬╝╬┐¤Ђ¤є╬« ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m╬Ќ ╬▒¤Ё¤ё¤ї╬╝╬▒¤ё╬и ╬▒╬й╬»¤Є╬й╬х¤Ё¤Ѓ╬и ╬╝╬┐¤Ђ¤є╬«¤ѓ ╬▒¤ђ╬Г¤ё¤Ё¤Є╬х, ¤ђ╬▒¤Ђ╬▒╬║╬▒╬╗¤ј ╬║╬▒╬И╬┐¤Ђ╬»¤Ѓ¤ё╬х ¤ё╬и ╬╝╬┐¤Ђ¤є╬« ¤Є╬х╬╣¤Ђ╬┐╬║╬»╬й╬и¤ё╬▒.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m╬ћ╬х╬й ¤Ё¤ђ╬┐¤Ѓ¤ё╬и¤Ђ╬»╬Х╬х¤ё╬▒╬╣ ¤ђ¤Ђ╬┐¤ѓ ¤ё╬┐ ¤ђ╬▒¤Ђ¤ї╬й[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ╬и ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬« ╬▒¤ђ¤ї [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ¤Ѓ╬х [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m╬г╬╗╬╗╬х¤ѓ ╬╝╬┐¤Ђ¤є╬Г¤ѓ[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m╬є╬│╬й¤Ѕ¤Ѓ¤ё╬и ╬╝╬┐¤Ђ¤є╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255m╬ћ╬х╬┤╬┐╬╝╬Г╬й╬┐¤Ё ¤ї¤ё╬╣ ╬┤╬х╬й ╬║╬╗╬«╬И╬и╬║╬х ╬и ¤ђ╬▒¤Ђ╬г╬╝╬х¤ё¤Ђ╬┐¤ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ¤ё╬▒ ¤ђ╬▒¤Ђ╬▒╬║╬г¤ё¤Ѕ ¤ђ╬х¤Ђ╬╣╬х¤Є¤ї╬╝╬х╬й╬▒ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m╬┤╬х╬й ╬И╬▒[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ╬▒¤ђ╬┐╬И╬и╬║╬х¤Ё¤ё╬┐¤Ї╬й.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m╬ћ╬╣╬▒╬┤¤Ђ╬┐╬╝╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё ¤ђ¤Ђ╬┐╬┐¤Ђ╬╣¤Ѓ╬╝╬┐¤Ї[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255m╬Б¤є╬г╬╗╬╝╬▒ ╬╝╬х¤ё╬▒¤ё¤Ђ╬┐¤ђ╬«¤ѓ[0m"##),
    ],
}
}

/// Language ID: el;
/// Map name: "get";
/// Description: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "╬ю╬┐¤Ђ¤є╬« ¤ђ¤Ђ╬┐╬┐¤Ђ╬╣¤Ѓ╬╝╬┐¤Ї");
/// ```
pub(super) const fn get_el_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"╬ю╬┐¤Ђ¤є╬« ¤ђ¤Ђ╬┐╬┐¤Ђ╬╣¤Ѓ╬╝╬┐¤Ї"##),
        ("src-fmt", r##"╬ю╬┐¤Ђ¤є╬« ¤ђ╬и╬│╬▒╬»╬┐¤Ё ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё"##),
    ],
}
}

/// Language ID: el;
/// Map name: "set";
/// Description: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "╬ю╬и ╬Г╬│╬║¤Ё¤Ђ╬и ╬┤╬╣╬▒╬┤¤Ђ╬┐╬╝╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё");
/// ```
pub(super) const fn get_el_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"╬ћ╬х╬┤╬┐╬╝╬Г╬й╬┐¤Ё ¤ї¤ё╬╣ ╬┤╬х╬й ╬║╬╗╬«╬И╬и╬║╬х ╬и ¤ђ╬▒¤Ђ╬г╬╝╬х¤ё¤Ђ╬┐¤ѓ `--save`, ╬┐╬╣ ¤ё¤Ђ╬┐¤ђ╬┐¤ђ╬┐╬╣╬и╬╝╬Г╬й╬х¤ѓ ¤ђ╬╗╬и¤Ђ╬┐¤є╬┐¤Ђ╬»╬х¤ѓ **╬┤╬х╬й ╬И╬▒** ╬▒¤ђ╬┐╬И╬и╬║╬х¤Ё¤ё╬┐¤Ї╬й."##),
        ("new-value", r##"╬Ю╬Г╬▒ ¤ё╬╣╬╝╬« (value)"##),
        ("invalid-path", r##"╬ю╬и ╬Г╬│╬║¤Ё¤Ђ╬и ╬┤╬╣╬▒╬┤¤Ђ╬┐╬╝╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё"##),
    ],
}
}

/// Language ID: el;
/// Map name: "set_md";
/// Description: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒;
pub(super) const fn get_el_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255m╬ћ╬х╬┤╬┐╬╝╬Г╬й╬┐¤Ё ¤ї¤ё╬╣ ╬┤╬х╬й ╬║╬╗╬«╬И╬и╬║╬х ╬и ¤ђ╬▒¤Ђ╬г╬╝╬х¤ё¤Ђ╬┐¤ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ╬┐╬╣ ¤ё¤Ђ╬┐¤ђ╬┐¤ђ╬┐╬╣╬и╬╝╬Г╬й╬х¤ѓ ¤ђ╬╗╬и¤Ђ╬┐¤є╬┐¤Ђ╬»╬х¤ѓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m╬┤╬х╬й ╬И╬▒[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ╬▒¤ђ╬┐╬И╬и╬║╬х¤Ё¤ё╬┐¤Ї╬й.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m╬Ю╬Г╬▒ ¤ё╬╣╬╝╬« (value)[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m╬ю╬и ╬Г╬│╬║¤Ё¤Ђ╬и ╬┤╬╣╬▒╬┤¤Ђ╬┐╬╝╬« ╬▒¤Ђ¤Є╬х╬»╬┐¤Ё[0m"##),
    ],
}
}

/// el: ╬Ћ╬╗╬╗╬и╬й╬╣╬║╬г, ╬Ћ╬╗╬╗╬и╬й╬╣╬║¤ї, ╬Ћ╬╗╬╗╬г╬┤╬▒
pub(super) const fn get_el_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_el_map_conversion),
        ("get", get_el_map_get),
        ("set_md", get_el_map_set_md),
        ("set", get_el_map_set),
        ("conversion_md", get_el_map_conversion_md),
    ],
}
}

/// Language ID: en;
/// Map name: "conversion";
/// Description: English, Latin, United States;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Failed to automatically detect the format. Please specify manually.");
/// ```
pub(super) const fn get_en_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"The file is not a valid `json 1.0` format, trying to parse as `json5`..."##),
        ("not-included", r##"This binary **does not include** the conversion functionality for the relevant format.
You need to enable the relevant feature in your `Cargo.toml` and recompile.
If this software does not include the corresponding functionality, please submit an issue."##),
        ("currently-supported", r##"Currently supported formats list:"##),
        ("unsupported", r##"Unsupported format conversion"##),
        ("auto-detection-failed", r##"Failed to automatically detect the format. Please specify manually."##),
        ("not-support-deser-sexp", r##"**Not supported yet**: converting from `Lisp S-Expression` to `other formats`"##),
        ("unknown-fmt", r##"Unknown file format"##),
        ("not-saved", r##"The following content **will not** be saved because `--save` was not called."##),
        ("dst", r##"Destination file path"##),
        ("conv-error", r##"Conversion error"##),
    ],
}
}

/// Language ID: en;
/// Map name: "conversion_md";
/// Description: English, Latin, United States;
pub(super) const fn get_en_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mThe file is not a valid [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m format, trying to parse as [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mThis binary [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mdoes not include[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m the conversion functionality for the relevant format.
[48;2;34;34;34m[38;2;255;255;255mYou need to enable the relevant feature in your [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m and recompile.
[48;2;34;34;34m[38;2;255;255;255mIf this software does not include the corresponding functionality, please submit an issue.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mCurrently supported formats list:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mUnsupported format conversion[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mFailed to automatically detect the format. Please specify manually.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mNot supported yet[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: converting from [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m to [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mother formats[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUnknown file format[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mThe following content [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mwill not[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m be saved because [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m was not called.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestination file path[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mConversion error[0m"##),
    ],
}
}

/// Language ID: en;
/// Map name: "get";
/// Description: English, Latin, United States;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destination format");
/// ```
pub(super) const fn get_en_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destination format"##),
        ("src-fmt", r##"Source file format"##),
    ],
}
}

/// Language ID: en;
/// Map name: "set";
/// Description: English, Latin, United States;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Invalid file path.");
/// ```
pub(super) const fn get_en_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"Invalid file path."##),
        ("new-value", r##"New value"##),
        ("unsave-warn", r##"The modified content **will not** be saved because `--sv` was not called."##),
        ("type", r##"Type"##),
    ],
}
}

/// Language ID: en;
/// Map name: "set_md";
/// Description: English, Latin, United States;
pub(super) const fn get_en_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mInvalid file path.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNew value[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mThe modified content [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mwill not[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m be saved because [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m was not called.[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mType[0m"##),
    ],
}
}

/// en: English, Latin, United States
pub(super) const fn get_en_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_en_map_conversion),
        ("get", get_en_map_get),
        ("set_md", get_en_map_set_md),
        ("set", get_en_map_set),
        ("conversion_md", get_en_map_conversion_md),
    ],
}
}

/// Language ID: eo;
/// Map name: "conversion";
/// Description: esperanto, Latn, Mondo;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Malsukcesis a┼Гtomate detekti la formaton.Bonvolu specifi permane.");
/// ```
pub(super) const fn get_eo_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"La dosiero ne estas valida formato 'JSON 1.0`, provante analizi kiel `json5` ..."##),
        ("not-included", r##"─ѕi tiu binara ** ne inkluzivas ** la konvertan funkciecon por la koncernata formato.
Vi devas ebligi la koncernan funkcion en via `Cargo.toml` kaj rekompiri.
Se ─Ѕi tiu programaro ne inkluzivas la respondan funkciecon, bonvolu sendi problemon."##),
        ("currently-supported", r##"Aktuale subtenataj formataj listoj:"##),
        ("unsupported", r##"Nepruvitan formatan konverti─Юon"##),
        ("auto-detection-failed", r##"Malsukcesis a┼Гtomate detekti la formaton.Bonvolu specifi permane."##),
        ("not-support-deser-sexp", r##"** ankora┼Г ne subtenata **: konverti de `lisp s-esprimo` al` aliaj formatoj`"##),
        ("unknown-fmt", r##"nekonatan dosierformaton"##),
        ("not-saved", r##"La sekva enhavo ** ne estos konservita ─Ѕar `--save` ne estis nomita."##),
        ("dst", r##"Destina Dosiera Vojo"##),
        ("conv-error", r##"Konverta Eraro"##),
    ],
}
}

/// Language ID: eo;
/// Map name: "conversion_md";
/// Description: esperanto, Latn, Mondo;
pub(super) const fn get_eo_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mLa dosiero ne estas valida formato 'JSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m, provante analizi kiel [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m─ѕi tiu binara ** ne inkluzivas ** la konvertan funkciecon por la koncernata formato.
[48;2;34;34;34m[38;2;255;255;255mVi devas ebligi la koncernan funkcion en via [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m kaj rekompiri.
[48;2;34;34;34m[38;2;255;255;255mSe ─Ѕi tiu programaro ne inkluzivas la respondan funkciecon, bonvolu sendi problemon.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAktuale subtenataj formataj listoj:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNepruvitan formatan konverti─Юon[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mMalsukcesis a┼Гtomate detekti la formaton.Bonvolu specifi permane.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ankora┼Г ne subtenata [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: konverti de [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-esprimo[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m al[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m aliaj formatoj[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mnekonatan dosierformaton[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mLa sekva enhavo ** ne estos konservita ─Ѕar [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ne estis nomita.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestina Dosiera Vojo[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonverta Eraro[0m"##),
    ],
}
}

/// Language ID: eo;
/// Map name: "set";
/// Description: esperanto, Latn, Mondo;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Nevalidan dosieran vojon.");
/// ```
pub(super) const fn get_eo_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"La modifita enhavo ** ne estos konservita ─Ѕar `--sv` ne estis vokita."##),
        ("new-value", r##"Nova valoro"##),
        ("invalid-path", r##"Nevalidan dosieran vojon."##),
    ],
}
}

/// Language ID: eo;
/// Map name: "set_md";
/// Description: esperanto, Latn, Mondo;
pub(super) const fn get_eo_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mLa modifita enhavo ** ne estos konservita ─Ѕar [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ne estis vokita.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNova valoro[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNevalidan dosieran vojon.[0m"##),
    ],
}
}

/// Language ID: eo;
/// Map name: "get";
/// Description: esperanto, Latn, Mondo;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Celloka formato");
/// ```
pub(super) const fn get_eo_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Celloka formato"##),
        ("src-fmt", r##"Fonta dosierformato"##),
    ],
}
}

/// eo: esperanto, Latn, Mondo
pub(super) const fn get_eo_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_eo_map_conversion),
        ("get", get_eo_map_get),
        ("set_md", get_eo_map_set_md),
        ("set", get_eo_map_set),
        ("conversion_md", get_eo_map_conversion_md),
    ],
}
}

/// Language ID: es;
/// Map name: "conversion";
/// Description: espa├▒ol, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "La detecci├│n autom├Аtica de formato fall├│, por favor especifique manualmente.");
/// ```
pub(super) const fn get_es_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"El archivo no es un formato JSON 1.0 v├Аlido, intentando analizar como `json5`..."##),
        ("not-included", r##"Este archivo binario no contiene funciones de conversi├│n para este formato.
Debe habilitar la funci├│n correspondiente en su archivo `Cargo.toml` y volver a compilar.
Si este software no contiene esta funci├│n, presente un problema (issue)."##),
        ("currently-supported", r##"Lista actual de formatos soportados"##),
        ("unsupported", r##"Conversi├│n de formato no soportada"##),
        ("auto-detection-failed", r##"La detecci├│n autom├Аtica de formato fall├│, por favor especifique manualmente."##),
        ("not-support-deser-sexp", r##"**Actualmente no compatible** convertir `Lisp S-Expression` a `otros formatos`"##),
        ("unknown-fmt", r##"Formato de archivo desconocido"##),
        ("not-saved", r##"Dado que no se llam├│ a la opci├│n `--save`, el siguiente contenido **no ser├А** guardado."##),
        ("dst", r##"Ruta del archivo de destino"##),
        ("conv-error", r##"Error de conversi├│n"##),
    ],
}
}

/// Language ID: es;
/// Map name: "conversion_md";
/// Description: espa├▒ol, latino, Espa├▒a;
pub(super) const fn get_es_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mEl archivo no es un formato JSON 1.0 v├Аlido, intentando analizar como [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mEste archivo binario no contiene funciones de conversi├│n para este formato.
[48;2;34;34;34m[38;2;255;255;255mDebe habilitar la funci├│n correspondiente en su archivo [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m y volver a compilar.
[48;2;34;34;34m[38;2;255;255;255mSi este software no contiene esta funci├│n, presente un problema (issue).[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista actual de formatos soportados[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConversi├│n de formato no soportada[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mLa detecci├│n autom├Аtica de formato fall├│, por favor especifique manualmente.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mActualmente no compatible[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m convertir [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255motros formatos[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormato de archivo desconocido[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mDado que no se llam├│ a la opci├│n [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, el siguiente contenido [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mno ser├А[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m guardado.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mRuta del archivo de destino[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mError de conversi├│n[0m"##),
    ],
}
}

/// Language ID: es;
/// Map name: "get";
/// Description: espa├▒ol, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Formato de archivo de destino");
/// ```
pub(super) const fn get_es_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Formato de archivo de destino"##),
        ("src-fmt", r##"Formato de archivo fuente"##),
    ],
}
}

/// Language ID: es;
/// Map name: "set";
/// Description: espa├▒ol, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ruta de archivo no v├Аlida");
/// ```
pub(super) const fn get_es_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Dado que no se llam├│ a la opci├│n `--save`, la informaci├│n modificada **no ser├А** guardada."##),
        ("new-value", r##"Nuevo valor"##),
        ("invalid-path", r##"Ruta de archivo no v├Аlida"##),
    ],
}
}

/// Language ID: es;
/// Map name: "set_md";
/// Description: espa├▒ol, latino, Espa├▒a;
pub(super) const fn get_es_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDado que no se llam├│ a la opci├│n [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, la informaci├│n modificada [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mno ser├А[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m guardada.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNuevo valor[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mRuta de archivo no v├Аlida[0m"##),
    ],
}
}

/// es: espa├▒ol, latino, Espa├▒a
pub(super) const fn get_es_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_es_map_conversion),
        ("get", get_es_map_get),
        ("set_md", get_es_map_set_md),
        ("set", get_es_map_set),
        ("conversion_md", get_es_map_conversion_md),
    ],
}
}

/// Language ID: et;
/// Map name: "conversion";
/// Description: eesti, ladina, Eesti;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Vormingu automaatselt tuvastamine eba├хnnestus.Palun t├цpsustage k├цsitsi.");
/// ```
pub(super) const fn get_et_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fail ei ole kehtiv `JSON 1.0` vorming, ├╝ritades s├хeluda kui `json5`..."##),
        ("not-included", r##"See binaarne ** ei h├хlma ** vastava vormingu teisendamise funktsionaalsust.
Peate lubama oma `Cargo.toml` ja uuesti kompileerimise asjakohase funktsiooni.
Kui see tarkvara ei sisalda vastavat funktsionaalsust, esitage palun probleem."##),
        ("currently-supported", r##"Praegu toetatud vormingute loend:"##),
        ("unsupported", r##"Vormingu toetamata muundamine"##),
        ("auto-detection-failed", r##"Vormingu automaatselt tuvastamine eba├хnnestus.Palun t├цpsustage k├цsitsi."##),
        ("not-support-deser-sexp", r##"** pole veel toetatud **: teisendamine `Lisp S-Expression`` muudeks vorminguteks"##),
        ("unknown-fmt", r##"Tundmatu failivorming"##),
        ("not-saved", r##"J├цrgmist sisu ** ei salvestata **, kuna `--save` ei kutsutud."##),
        ("dst", r##"sihtfaili tee"##),
        ("conv-error", r##"teisendamise viga"##),
    ],
}
}

/// Language ID: et;
/// Map name: "conversion_md";
/// Description: eesti, ladina, Eesti;
pub(super) const fn get_et_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFail ei ole kehtiv [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m vorming, ├╝ritades s├хeluda kui [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mSee binaarne ** ei h├хlma ** vastava vormingu teisendamise funktsionaalsust.
[48;2;34;34;34m[38;2;255;255;255mPeate lubama oma [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ja uuesti kompileerimise asjakohase funktsiooni.
[48;2;34;34;34m[38;2;255;255;255mKui see tarkvara ei sisalda vastavat funktsionaalsust, esitage palun probleem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mPraegu toetatud vormingute loend:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mVormingu toetamata muundamine[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mVormingu automaatselt tuvastamine eba├хnnestus.Palun t├цpsustage k├цsitsi.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** pole veel toetatud [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: teisendamine [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression`` muudeks vorminguteks[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mTundmatu failivorming[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mJ├цrgmist sisu ** ei salvestata [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, kuna [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ei kutsutud.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255msihtfaili tee[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mteisendamise viga[0m"##),
    ],
}
}

/// Language ID: et;
/// Map name: "set";
/// Description: eesti, ladina, Eesti;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Vale failitee.");
/// ```
pub(super) const fn get_et_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Muudetud sisu ** ei salvestata **, kuna `--sv` ei kutsutud."##),
        ("new-value", r##"Uus v├ц├цrtus"##),
        ("invalid-path", r##"Vale failitee."##),
    ],
}
}

/// Language ID: et;
/// Map name: "set_md";
/// Description: eesti, ladina, Eesti;
pub(super) const fn get_et_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mMuudetud sisu ** ei salvestata [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, kuna [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ei kutsutud.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mUus v├ц├цrtus[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mVale failitee.[0m"##),
    ],
}
}

/// Language ID: et;
/// Map name: "get";
/// Description: eesti, ladina, Eesti;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Sihtvorming");
/// ```
pub(super) const fn get_et_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Sihtvorming"##),
        ("src-fmt", r##"L├цhtefaili vorming"##),
    ],
}
}

/// et: eesti, ladina, Eesti
pub(super) const fn get_et_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_et_map_conversion),
        ("get", get_et_map_get),
        ("set_md", get_et_map_set_md),
        ("set", get_et_map_set),
        ("conversion_md", get_et_map_conversion_md),
    ],
}
}

/// Language ID: eu;
/// Map name: "conversion";
/// Description: euskara, latinoa, Espainia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Ezin izan da formatua automatikoki hautematen.Mesedez, zehaztu eskuz.");
/// ```
pub(super) const fn get_eu_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fitxategia ez da baliozko `Json 1.0` formatua, `json5` ... bezala analizatu nahian"##),
        ("not-included", r##"Binary ** honek ez du ** dagokion formatuaren bihurketa funtzionalitatea barne hartzen.
Ezaugarri garrantzitsua zure `Cargo.toml` eta birplanteatuan gaitu behar duzu.
Software honek dagokion funtzionaltasuna jasotzen ez badu, bidali arazo bat."##),
        ("currently-supported", r##"Onartutako formatuen zerrenda:"##),
        ("unsupported", r##"Onartu gabeko formatu bihurketa"##),
        ("auto-detection-failed", r##"Ezin izan da formatua automatikoki hautematen.Mesedez, zehaztu eskuz."##),
        ("not-support-deser-sexp", r##"** ez da onartzen oraindik **: "Lisp s-espresiotik" beste formatu batzuetara bihurtzea"##),
        ("unknown-fmt", r##"Fitxategi formatu ezezaguna"##),
        ("not-saved", r##"Hurrengo edukia ** ez da gordeko ** `--save`  deitzen ez delako."##),
        ("dst", r##"Helmuga fitxategiaren bidea"##),
        ("conv-error", r##"Bihurketa errorea"##),
    ],
}
}

/// Language ID: eu;
/// Map name: "conversion_md";
/// Description: euskara, latinoa, Espainia;
pub(super) const fn get_eu_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFitxategia ez da baliozko [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m formatua, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ... bezala analizatu nahian[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary ** honek ez du ** dagokion formatuaren bihurketa funtzionalitatea barne hartzen.
[48;2;34;34;34m[38;2;255;255;255mEzaugarri garrantzitsua zure [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m eta birplanteatuan gaitu behar duzu.
[48;2;34;34;34m[38;2;255;255;255mSoftware honek dagokion funtzionaltasuna jasotzen ez badu, bidali arazo bat.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mOnartutako formatuen zerrenda:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mOnartu gabeko formatu bihurketa[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mEzin izan da formatua automatikoki hautematen.Mesedez, zehaztu eskuz.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ez da onartzen oraindik [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: "Lisp s-espresiotik" beste formatu batzuetara bihurtzea[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFitxategi formatu ezezaguna[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mHurrengo edukia ** ez da gordeko ** [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m  deitzen ez delako.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mHelmuga fitxategiaren bidea[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mBihurketa errorea[0m"##),
    ],
}
}

/// Language ID: eu;
/// Map name: "set";
/// Description: euskara, latinoa, Espainia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Fitxategi bide baliogabea.");
/// ```
pub(super) const fn get_eu_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Aldatutako edukia ** ez da gordeko * - --sv` ez delako deitzen."##),
        ("new-value", r##"Balio berria"##),
        ("invalid-path", r##"Fitxategi bide baliogabea."##),
    ],
}
}

/// Language ID: eu;
/// Map name: "set_md";
/// Description: euskara, latinoa, Espainia;
pub(super) const fn get_eu_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mAldatutako edukia ** ez da gordeko * - --sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ez delako deitzen.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mBalio berria[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mFitxategi bide baliogabea.[0m"##),
    ],
}
}

/// Language ID: eu;
/// Map name: "get";
/// Description: euskara, latinoa, Espainia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Helmuga formatua");
/// ```
pub(super) const fn get_eu_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Helmuga formatua"##),
        ("src-fmt", r##"Iturburu fitxategiaren formatua"##),
    ],
}
}

/// eu: euskara, latinoa, Espainia
pub(super) const fn get_eu_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_eu_map_conversion),
        ("get", get_eu_map_get),
        ("set_md", get_eu_map_set_md),
        ("set", get_eu_map_set),
        ("conversion_md", get_eu_map_conversion_md),
    ],
}
}

/// Language ID: fa;
/// Map name: "conversion";
/// Description: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "пе┘Є пи┘ѕп▒ п«┘ѕп»┌ЕпДп▒ ┘ѓпД┘ёпе п▒пД пфп┤п«█їпх п»пДп».┘ёпи┘ЂпД пе┘Є пх┘ѕп▒пф п»п│пф█ї ┘Ёп┤п«пх ┌Е┘є█їп».");
/// ```
pub(super) const fn get_fa_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"┘Йп▒┘ѕ┘єп»┘Є █ї┌Е ┘Ђп▒┘Ёпф ┘Ёп╣пфпеп▒ `json 1.0` ┘є█їп│пф пї ┘ѕ п│п╣█ї п»п▒ пфпгп▓█ї┘Є пе┘Є п╣┘є┘ѕпД┘є `json5` ..."##),
        ("not-included", r##"пД█ї┘є пепД█ї┘єп▒█ї ** п┤пД┘Ё┘ё ** п╣┘Ё┘ё┌Еп▒п» пфпеп»█ї┘ё пеп▒пД█ї ┘ѓпД┘ёпе ┘Ёп▒пе┘ѕпи┘Є ┘є█їп│пф.
п┤┘ЁпД пепД█їп» ┘ѕ█ї┌ў┌»█ї ┘Ёп▒пе┘ѕпи┘Є п▒пД п»п▒ `Cargo.toml` ┘ѕ recompile п«┘ѕп» ┘Ђп╣пД┘ё ┌Е┘є█їп».
пД┌»п▒ пД█ї┘є ┘єп▒┘Ё пД┘Ђп▓пДп▒ п╣┘Ё┘ё┌Еп▒п» ┘Ёп▒пе┘ѕпи┘Є п▒пД п┤пД┘Ё┘ё ┘є┘Ё█ї п┤┘ѕп» пї ┘ёпи┘ЂпД┘І █ї┌Е ┘Ёп│пд┘ё┘Є п▒пД пДп▒п│пД┘ё ┌Е┘є█їп»."##),
        ("currently-supported", r##"п»п▒ пГпД┘ё пГпДпХп▒ ┘ё█їп│пф ┘Ђп▒┘Ёпф ┘ЄпД█ї ┘Йп┤пф█їпепД┘є█ї п┤п»┘Є:"##),
        ("unsupported", r##"пфпеп»█ї┘ё ┘Ђп▒┘Ёпф ┘Йп┤пф█їпепД┘є█ї ┘єп┤п»┘Є"##),
        ("auto-detection-failed", r##"пе┘Є пи┘ѕп▒ п«┘ѕп»┌ЕпДп▒ ┘ѓпД┘ёпе п▒пД пфп┤п«█їпх п»пДп».┘ёпи┘ЂпД пе┘Є пх┘ѕп▒пф п»п│пф█ї ┘Ёп┤п«пх ┌Е┘є█їп»."##),
        ("not-support-deser-sexp", r##"** ┘Є┘є┘ѕп▓ ┘Йп┤пф█їпепД┘є█ї ┘єп┤п»┘Є пДп│пф **: пфпеп»█ї┘ё пДп▓ `Lisp S-Expression` пе┘Є ┬Ф┘Ђп▒┘Ёпф ┘ЄпД█ї п»█ї┌»п▒┬╗"##),
        ("unknown-fmt", r##"┘ѓпД┘ёпе ┘Йп▒┘ѕ┘єп»┘Є ┘єпДп┤┘єпДп«пф┘Є"##),
        ("not-saved", r##"┘ЁпГпф┘ѕпД█ї п▓█їп▒ ** ** п░п«█їп▒┘Є ┘є┘Ё█ї п┤┘ѕп» п▓█їп▒пД `--save` ┘Ђп▒пДп«┘ѕпД┘є█ї ┘єп┤п»┘Є пДп│пф."##),
        ("dst", r##"┘Ёп│█їп▒ ┘Йп▒┘ѕ┘єп»┘Є ┘Ё┘ѓпхп»"##),
        ("conv-error", r##"п«пипД█ї пфпеп»█ї┘ё"##),
    ],
}
}

/// Language ID: fa;
/// Map name: "conversion_md";
/// Description: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є;
pub(super) const fn get_fa_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m┘Йп▒┘ѕ┘єп»┘Є █ї┌Е ┘Ђп▒┘Ёпф ┘Ёп╣пфпеп▒ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┘є█їп│пф пї ┘ѕ п│п╣█ї п»п▒ пфпгп▓█ї┘Є пе┘Є п╣┘є┘ѕпД┘є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mпД█ї┘є пепД█ї┘єп▒█ї ** п┤пД┘Ё┘ё ** п╣┘Ё┘ё┌Еп▒п» пфпеп»█ї┘ё пеп▒пД█ї ┘ѓпД┘ёпе ┘Ёп▒пе┘ѕпи┘Є ┘є█їп│пф.
[48;2;34;34;34m[38;2;255;255;255mп┤┘ЁпД пепД█їп» ┘ѕ█ї┌ў┌»█ї ┘Ёп▒пе┘ѕпи┘Є п▒пД п»п▒ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┘ѕ recompile п«┘ѕп» ┘Ђп╣пД┘ё ┌Е┘є█їп».
[48;2;34;34;34m[38;2;255;255;255mпД┌»п▒ пД█ї┘є ┘єп▒┘Ё пД┘Ђп▓пДп▒ п╣┘Ё┘ё┌Еп▒п» ┘Ёп▒пе┘ѕпи┘Є п▒пД п┤пД┘Ё┘ё ┘є┘Ё█ї п┤┘ѕп» пї ┘ёпи┘ЂпД┘І █ї┌Е ┘Ёп│пд┘ё┘Є п▒пД пДп▒п│пД┘ё ┌Е┘є█їп».[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mп»п▒ пГпД┘ё пГпДпХп▒ ┘ё█їп│пф ┘Ђп▒┘Ёпф ┘ЄпД█ї ┘Йп┤пф█їпепД┘є█ї п┤п»┘Є:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mпфпеп»█ї┘ё ┘Ђп▒┘Ёпф ┘Йп┤пф█їпепД┘є█ї ┘єп┤п»┘Є[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mпе┘Є пи┘ѕп▒ п«┘ѕп»┌ЕпДп▒ ┘ѓпД┘ёпе п▒пД пфп┤п«█їпх п»пДп».┘ёпи┘ЂпД пе┘Є пх┘ѕп▒пф п»п│пф█ї ┘Ёп┤п«пх ┌Е┘є█їп».[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ┘Є┘є┘ѕп▓ ┘Йп┤пф█їпепД┘є█ї ┘єп┤п»┘Є пДп│пф [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: пфпеп»█ї┘ё пДп▓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m пе┘Є ┬Ф┘Ђп▒┘Ёпф ┘ЄпД█ї п»█ї┌»п▒┬╗[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m┘ѓпД┘ёпе ┘Йп▒┘ѕ┘єп»┘Є ┘єпДп┤┘єпДп«пф┘Є[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЁпГпф┘ѕпД█ї п▓█їп▒ ** ** п░п«█їп▒┘Є ┘є┘Ё█ї п┤┘ѕп» п▓█їп▒пД [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┘Ђп▒пДп«┘ѕпД┘є█ї ┘єп┤п»┘Є пДп│пф.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ёп│█їп▒ ┘Йп▒┘ѕ┘єп»┘Є ┘Ё┘ѓпхп»[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mп«пипД█ї пфпеп»█ї┘ё[0m"##),
    ],
}
}

/// Language ID: fa;
/// Map name: "set";
/// Description: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "┘Ёп│█їп▒ ┘Йп▒┘ѕ┘єп»┘Є ┘єпД┘Ёп╣пфпеп▒ пДп│пф.");
/// ```
pub(super) const fn get_fa_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"┘ЁпГпф┘ѕпД█ї пДпх┘ёпДпГ п┤п»┘Є ** ** п░п«█їп▒┘Є ┘є┘Ё█ї п┤┘ѕп» п▓█їп▒пД `-SV" п«┘ѕпД┘єп»┘Є ┘єп┤п»┘Є пДп│пф."##),
        ("new-value", r##"┘Ё┘ѓп»пДп▒ пгп»█їп»"##),
        ("invalid-path", r##"┘Ёп│█їп▒ ┘Йп▒┘ѕ┘єп»┘Є ┘єпД┘Ёп╣пфпеп▒ пДп│пф."##),
    ],
}
}

/// Language ID: fa;
/// Map name: "set_md";
/// Description: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є;
pub(super) const fn get_fa_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЁпГпф┘ѕпД█ї пДпх┘ёпДпГ п┤п»┘Є ** ** п░п«█їп▒┘Є ┘є┘Ё█ї п┤┘ѕп» п▓█їп▒пД [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-SV" п«┘ѕпД┘єп»┘Є ┘єп┤п»┘Є пДп│пф.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ё┘ѓп»пДп▒ пгп»█їп»[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ёп│█їп▒ ┘Йп▒┘ѕ┘єп»┘Є ┘єпД┘Ёп╣пфпеп▒ пДп│пф.[0m"##),
    ],
}
}

/// Language ID: fa;
/// Map name: "get";
/// Description: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "┘ѓпД┘ёпе ┘Ё┘ѓпхп»");
/// ```
pub(super) const fn get_fa_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"┘ѓпД┘ёпе ┘Ё┘ѓпхп»"##),
        ("src-fmt", r##"┘ѓпД┘ёпе ┘Йп▒┘ѕ┘єп»┘Є ┘Ё┘єпеп╣"##),
    ],
}
}

/// fa: ┘ЂпДп▒п│█ї, п╣п▒пе█ї, пД█їп▒пД┘є
pub(super) const fn get_fa_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_fa_map_conversion),
        ("get", get_fa_map_get),
        ("set_md", get_fa_map_set_md),
        ("set", get_fa_map_set),
        ("conversion_md", get_fa_map_conversion_md),
    ],
}
}

/// Language ID: fi;
/// Map name: "conversion";
/// Description: suomi, latinalainen, Suomi;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Muodon automaattisesti havaitseminen ep├цonnistui.M├ц├цrit├ц manuaalisesti.");
/// ```
pub(super) const fn get_fi_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Tiedosto ei ole kelvollinen `JSON 1.0` -muoto, yritt├цen j├цsent├ц├ц nimell├ц `JSON5`..."##),
        ("not-included", r##"T├цm├ц binaari ** ei sis├цll├ц ** asiaankuuluvan muodon muuntamistoimintoja.
Sinun on otettava k├цytt├Х├Хn asiaankuuluva ominaisuus `Cargo.toml` -sivustollasi ja k├ц├цnnett├цv├ц uudelleen.
Jos t├цm├ц ohjelmisto ei sis├цll├ц vastaavia toimintoja, l├цhet├ц ongelma."##),
        ("currently-supported", r##"T├цll├ц hetkell├ц tuetut muodot -luettelo:"##),
        ("unsupported", r##"tukemattoman muodon muuntaminen"##),
        ("auto-detection-failed", r##"Muodon automaattisesti havaitseminen ep├цonnistui.M├ц├цrit├ц manuaalisesti."##),
        ("not-support-deser-sexp", r##"** ei ole viel├ц tuettu **: muuntaminen `Lisp S-Expression` -j├цrjestelm├цst├ц `muihin muotoihin`"##),
        ("unknown-fmt", r##"tuntematon tiedostomuoto"##),
        ("not-saved", r##"Seuraavaa sis├цlt├Х├ц ** ei ** tallenneta, koska `--save` ei kutsuttu."##),
        ("dst", r##"kohdetiedostopolku"##),
        ("conv-error", r##"muuntamisvirhe"##),
    ],
}
}

/// Language ID: fi;
/// Map name: "conversion_md";
/// Description: suomi, latinalainen, Suomi;
pub(super) const fn get_fi_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mTiedosto ei ole kelvollinen [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -muoto, yritt├цen j├цsent├ц├ц nimell├ц [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mT├цm├ц binaari ** ei sis├цll├ц ** asiaankuuluvan muodon muuntamistoimintoja.
[48;2;34;34;34m[38;2;255;255;255mSinun on otettava k├цytt├Х├Хn asiaankuuluva ominaisuus [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -sivustollasi ja k├ц├цnnett├цv├ц uudelleen.
[48;2;34;34;34m[38;2;255;255;255mJos t├цm├ц ohjelmisto ei sis├цll├ц vastaavia toimintoja, l├цhet├ц ongelma.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mT├цll├ц hetkell├ц tuetut muodot -luettelo:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mtukemattoman muodon muuntaminen[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mMuodon automaattisesti havaitseminen ep├цonnistui.M├ц├цrit├ц manuaalisesti.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ei ole viel├ц tuettu [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: muuntaminen [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m -j├цrjestelm├цst├ц [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mmuihin muotoihin[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mtuntematon tiedostomuoto[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mSeuraavaa sis├цlt├Х├ц ** ei ** tallenneta, koska [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ei kutsuttu.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mkohdetiedostopolku[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mmuuntamisvirhe[0m"##),
    ],
}
}

/// Language ID: fi;
/// Map name: "set";
/// Description: suomi, latinalainen, Suomi;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "virheellinen tiedostopolku.");
/// ```
pub(super) const fn get_fi_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Muokattua sis├цlt├Х├ц ** ei ** tallennetta, koska `--sv` ei kutsuttu."##),
        ("new-value", r##"uusi arvo"##),
        ("invalid-path", r##"virheellinen tiedostopolku."##),
    ],
}
}

/// Language ID: fi;
/// Map name: "set_md";
/// Description: suomi, latinalainen, Suomi;
pub(super) const fn get_fi_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mMuokattua sis├цlt├Х├ц ** ei ** tallennetta, koska [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ei kutsuttu.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255muusi arvo[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mvirheellinen tiedostopolku.[0m"##),
    ],
}
}

/// Language ID: fi;
/// Map name: "get";
/// Description: suomi, latinalainen, Suomi;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Kohdemuoto");
/// ```
pub(super) const fn get_fi_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Kohdemuoto"##),
        ("src-fmt", r##"L├цhdetiedostomuoto"##),
    ],
}
}

/// fi: suomi, latinalainen, Suomi
pub(super) const fn get_fi_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_fi_map_conversion),
        ("get", get_fi_map_get),
        ("set_md", get_fi_map_set_md),
        ("set", get_fi_map_set),
        ("conversion_md", get_fi_map_conversion_md),
    ],
}
}

/// Language ID: fil;
/// Map name: "conversion";
/// Description: Filipino, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nabigo upang awtomatikong makita ang format.Mangyaring tukuyin nang manu -mano.");
/// ```
pub(super) const fn get_fil_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Ang file ay hindi isang wastong format na `json 1.0`, sinusubukan na i -parse bilang `json5` ..."##),
        ("not-included", r##"Ang binary ** ay hindi kasama ang ** ang pag -andar ng conversion para sa may -katuturang format.
Kailangan mong paganahin ang may -katuturang tampok sa iyong `Cargo.toml` at muling pagsasaayos.
Kung ang software na ito ay hindi kasama ang kaukulang pag -andar, mangyaring magsumite ng isang isyu."##),
        ("currently-supported", r##"Kasalukuyang suportado ang listahan ng mga format:"##),
        ("unsupported", r##"Hindi suportadong format ng conversion"##),
        ("auto-detection-failed", r##"Nabigo upang awtomatikong makita ang format.Mangyaring tukuyin nang manu -mano."##),
        ("not-support-deser-sexp", r##"** hindi pa suportado **: pag-convert mula sa `lisp s-expression` sa` iba pang mga format`"##),
        ("unknown-fmt", r##"hindi kilalang format ng file"##),
        ("not-saved", r##"Ang sumusunod na nilalaman ** ay hindi ** mai-save dahil ang `--save` ay hindi tinawag."##),
        ("dst", r##"patutunguhan na landas ng file"##),
        ("conv-error", r##"error sa conversion"##),
    ],
}
}

/// Language ID: fil;
/// Map name: "conversion_md";
/// Description: Filipino, Latin, Pilipinas;
pub(super) const fn get_fil_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mAng file ay hindi isang wastong format na [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, sinusubukan na i -parse bilang [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mAng binary ** ay hindi kasama ang ** ang pag -andar ng conversion para sa may -katuturang format.
[48;2;34;34;34m[38;2;255;255;255mKailangan mong paganahin ang may -katuturang tampok sa iyong [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m at muling pagsasaayos.
[48;2;34;34;34m[38;2;255;255;255mKung ang software na ito ay hindi kasama ang kaukulang pag -andar, mangyaring magsumite ng isang isyu.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mKasalukuyang suportado ang listahan ng mga format:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mHindi suportadong format ng conversion[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNabigo upang awtomatikong makita ang format.Mangyaring tukuyin nang manu -mano.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** hindi pa suportado [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: pag-convert mula sa [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m sa[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m iba pang mga format[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mhindi kilalang format ng file[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mAng sumusunod na nilalaman ** ay hindi ** mai-save dahil ang [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ay hindi tinawag.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mpatutunguhan na landas ng file[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255merror sa conversion[0m"##),
    ],
}
}

/// Language ID: fil;
/// Map name: "set";
/// Description: Filipino, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "hindi wastong landas ng file.");
/// ```
pub(super) const fn get_fil_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Ang binagong nilalaman ** ay hindi ** mai-save dahil ang `--sv` ay hindi tinawag."##),
        ("new-value", r##"Bagong halaga"##),
        ("invalid-path", r##"hindi wastong landas ng file."##),
    ],
}
}

/// Language ID: fil;
/// Map name: "set_md";
/// Description: Filipino, Latin, Pilipinas;
pub(super) const fn get_fil_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mAng binagong nilalaman ** ay hindi ** mai-save dahil ang [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ay hindi tinawag.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mBagong halaga[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mhindi wastong landas ng file.[0m"##),
    ],
}
}

/// Language ID: fil;
/// Map name: "get";
/// Description: Filipino, Latin, Pilipinas;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format ng patutunguhan");
/// ```
pub(super) const fn get_fil_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format ng patutunguhan"##),
        ("src-fmt", r##"Format ng mapagkukunan ng mapagkukunan"##),
    ],
}
}

/// fil: Filipino, Latin, Pilipinas
pub(super) const fn get_fil_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_fil_map_conversion),
        ("get", get_fil_map_get),
        ("set_md", get_fil_map_set_md),
        ("set", get_fil_map_set),
        ("conversion_md", get_fil_map_conversion_md),
    ],
}
}

/// Language ID: fr;
/// Map name: "conversion";
/// Description: fran├Дais, latin, France;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "La d├Еtection automatique de format a ├Еchou├Е. Veuillez sp├Еcifier manuellement le format.");
/// ```
pub(super) const fn get_fr_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Le fichier n'est pas au format `json 1.0` valide, tentative de conversion en `json5`..."##),
        ("not-included", r##"Ce fichier binaire ne contient pas de fonctionnalit├Еs de conversion de format associ├Еes.
Vous devez activer les fonctionnalit├Еs correspondantes dans votre `Cargo.toml`, puis recompiler votre projet.
Si ce logiciel ne prend pas en charge cette fonctionnalit├Е, veuillez signaler un probl├еme."##),
        ("currently-supported", r##"Liste des formats pris en charge actuellement"##),
        ("unsupported", r##"Conversion de format non prise en charge"##),
        ("auto-detection-failed", r##"La d├Еtection automatique de format a ├Еchou├Е. Veuillez sp├Еcifier manuellement le format."##),
        ("not-support-deser-sexp", r##"**Non pris en charge pour le moment** : Conversion de `Lisp S-Expression` en `autres formats`"##),
        ("unknown-fmt", r##"Format de fichier inconnu"##),
        ("not-saved", r##"Comme `--save` n'a pas ├Еt├Е appel├Е, les contenus suivants **ne seront pas** enregistr├Еs."##),
        ("dst", r##"Chemin du fichier de destination"##),
        ("conv-error", r##"Erreur de conversion"##),
    ],
}
}

/// Language ID: fr;
/// Map name: "conversion_md";
/// Description: fran├Дais, latin, France;
pub(super) const fn get_fr_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mLe fichier n'est pas au format [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m valide, tentative de conversion en [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mCe fichier binaire ne contient pas de fonctionnalit├Еs de conversion de format associ├Еes.
[48;2;34;34;34m[38;2;255;255;255mVous devez activer les fonctionnalit├Еs correspondantes dans votre [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, puis recompiler votre projet.
[48;2;34;34;34m[38;2;255;255;255mSi ce logiciel ne prend pas en charge cette fonctionnalit├Е, veuillez signaler un probl├еme.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mListe des formats pris en charge actuellement[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConversion de format non prise en charge[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mLa d├Еtection automatique de format a ├Еchou├Е. Veuillez sp├Еcifier manuellement le format.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mNon pris en charge pour le moment[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m : Conversion de [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m en [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mautres formats[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormat de fichier inconnu[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mComme [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m n'a pas ├Еt├Е appel├Е, les contenus suivants [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mne seront pas[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m enregistr├Еs.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mChemin du fichier de destination[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mErreur de conversion[0m"##),
    ],
}
}

/// Language ID: fr;
/// Map name: "get";
/// Description: fran├Дais, latin, France;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format de destination");
/// ```
pub(super) const fn get_fr_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format de destination"##),
        ("src-fmt", r##"Format du fichier source"##),
    ],
}
}

/// Language ID: fr;
/// Map name: "set";
/// Description: fran├Дais, latin, France;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Chemin de fichier invalide");
/// ```
pub(super) const fn get_fr_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Comme `--save` n'a pas ├Еt├Е appel├Е, les modifications apport├Еes **ne seront pas** enregistr├Еes."##),
        ("new-value", r##"Nouvelle valeur"##),
        ("invalid-path", r##"Chemin de fichier invalide"##),
    ],
}
}

/// Language ID: fr;
/// Map name: "set_md";
/// Description: fran├Дais, latin, France;
pub(super) const fn get_fr_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mComme [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m n'a pas ├Еt├Е appel├Е, les modifications apport├Еes [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mne seront pas[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m enregistr├Еes.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNouvelle valeur[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mChemin de fichier invalide[0m"##),
    ],
}
}

/// fr: fran├Дais, latin, France
pub(super) const fn get_fr_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_fr_map_conversion),
        ("get", get_fr_map_get),
        ("set_md", get_fr_map_set_md),
        ("set", get_fr_map_set),
        ("conversion_md", get_fr_map_conversion_md),
    ],
}
}

/// Language ID: fy;
/// Map name: "conversion";
/// Description: Frysk, Latyn, Nederl├бn;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Mislearre om automatysk it formaat te detektearjen.Spesifisearje asjebleaft asjebleaft.");
/// ```
pub(super) const fn get_fy_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"It best├бn is gjin jildich `JSON 1.0` Opmaak, besykje te parse as `json5` ..."##),
        ("not-included", r##"Dizze bin├фre ** omfettet net ** de konverzje-funksjonaliteit foar it oanbelangjende opmaak.
Jo moatte de oanbelangjende funksje ynskeakelje yn jo `Cargo.toml` en opnij unrepelje.
As dizze software de oerienkommende funksjonaliteit net befettet, dan yntsjinje dan in probleem."##),
        ("currently-supported", r##"Op it stuit stipe formatenlist:"##),
        ("unsupported", r##"Net-stipe formaat konverzje"##),
        ("auto-detection-failed", r##"Mislearre om automatysk it formaat te detektearjen.Spesifisearje asjebleaft asjebleaft."##),
        ("not-support-deser-sexp", r##"** Noch net stipe **: konvertearje fan 'Lisp S-Expression' oan 'oare formaten'"##),
        ("unknown-fmt", r##"Unbekend best├бnsformaat"##),
        ("not-saved", r##"De folgjende ynh├бld ** Sil net ** wurde opslein, om't `--save 'net wurde neamd."##),
        ("dst", r##"Best├бnbest├бnspaad"##),
        ("conv-error", r##"Conversion Error"##),
    ],
}
}

/// Language ID: fy;
/// Map name: "conversion_md";
/// Description: Frysk, Latyn, Nederl├бn;
pub(super) const fn get_fy_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mIt best├бn is gjin jildich [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Opmaak, besykje te parse as [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDizze bin├фre ** omfettet net ** de konverzje-funksjonaliteit foar it oanbelangjende opmaak.
[48;2;34;34;34m[38;2;255;255;255mJo moatte de oanbelangjende funksje ynskeakelje yn jo [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m en opnij unrepelje.
[48;2;34;34;34m[38;2;255;255;255mAs dizze software de oerienkommende funksjonaliteit net befettet, dan yntsjinje dan in probleem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mOp it stuit stipe formatenlist:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNet-stipe formaat konverzje[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mMislearre om automatysk it formaat te detektearjen.Spesifisearje asjebleaft asjebleaft.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Noch net stipe [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: konvertearje fan 'Lisp S-Expression' oan 'oare formaten'[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUnbekend best├бnsformaat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mDe folgjende ynh├бld ** Sil net ** wurde opslein, om't [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save 'net wurde neamd.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mBest├бnbest├бnspaad[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mConversion Error[0m"##),
    ],
}
}

/// Language ID: fy;
/// Map name: "set";
/// Description: Frysk, Latyn, Nederl├бn;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Unjildich best├бnspaad.");
/// ```
pub(super) const fn get_fy_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"The Wizige Tweid ** Sil net ** wurde opslein, om't `--v` net neamd waard."##),
        ("new-value", r##"Nije wearde"##),
        ("invalid-path", r##"Unjildich best├бnspaad."##),
    ],
}
}

/// Language ID: fy;
/// Map name: "set_md";
/// Description: Frysk, Latyn, Nederl├бn;
pub(super) const fn get_fy_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mThe Wizige Tweid ** Sil net ** wurde opslein, om't [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--v[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m net neamd waard.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNije wearde[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mUnjildich best├бnspaad.[0m"##),
    ],
}
}

/// Language ID: fy;
/// Map name: "get";
/// Description: Frysk, Latyn, Nederl├бn;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Bestimmingformaat");
/// ```
pub(super) const fn get_fy_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Bestimmingformaat"##),
        ("src-fmt", r##"Boarne-best├бnformaat"##),
    ],
}
}

/// fy: Frysk, Latyn, Nederl├бn
pub(super) const fn get_fy_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_fy_map_conversion),
        ("get", get_fy_map_get),
        ("set_md", get_fy_map_set_md),
        ("set", get_fy_map_set),
        ("conversion_md", get_fy_map_conversion_md),
    ],
}
}

/// Language ID: ga;
/// Map name: "conversion";
/// Description: Gaeilge, Laidineach, ├Ѕire;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Theip ar an bhform├Аid a bhrath go huathoibr├Гoch.Sonraigh de l├Аimh le do thoil.");
/// ```
pub(super) const fn get_ga_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"N├Г form├Аid bail├Г `JSON 1.0` at├А sa chomhad, ag iarraidh a phars├Аil mar `json5` ..."##),
        ("not-included", r##"N├Г chuims├Гonn an d├Еn├Аrtha seo ** an fheidhmi├║lacht tiontaithe don fhorm├Аid ├Аbhartha.
N├Г m├│r duit an ghn├Е ├Аbhartha a chumas├║ i do `Cargo.toml` agus a athchruth├║.
Mura gcuims├Гonn na bogearra├Г seo an fheidhmi├║lacht chomhfhreagrach, cuir isteach saincheist le do thoil."##),
        ("currently-supported", r##"Liosta form├Аid├Г tacaithe faoi l├Аthair:"##),
        ("unsupported", r##"Comhsh├│ form├Аide gan taca├Гocht"##),
        ("auto-detection-failed", r##"Theip ar an bhform├Аid a bhrath go huathoibr├Гoch.Sonraigh de l├Аimh le do thoil."##),
        ("not-support-deser-sexp", r##"** Gan taca├Гocht f├│s **: ag athr├║ ├│ `lisp s-expression` go` form├Аid├Г eile `"##),
        ("unknown-fmt", r##"Form├Аid comhaid anaithnid"##),
        ("not-saved", r##"N├Г sh├Аbh├Аlfar an t-├Аbhar seo a leanas ** toisc n├Аr glaodh `--save`."##),
        ("dst", r##"cos├Аn comhad ceann scr├Гbe"##),
        ("conv-error", r##"earr├Аid tiontaithe"##),
    ],
}
}

/// Language ID: ga;
/// Map name: "conversion_md";
/// Description: Gaeilge, Laidineach, ├Ѕire;
pub(super) const fn get_ga_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mN├Г form├Аid bail├Г [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m at├А sa chomhad, ag iarraidh a phars├Аil mar [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mN├Г chuims├Гonn an d├Еn├Аrtha seo ** an fheidhmi├║lacht tiontaithe don fhorm├Аid ├Аbhartha.
[48;2;34;34;34m[38;2;255;255;255mN├Г m├│r duit an ghn├Е ├Аbhartha a chumas├║ i do [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m agus a athchruth├║.
[48;2;34;34;34m[38;2;255;255;255mMura gcuims├Гonn na bogearra├Г seo an fheidhmi├║lacht chomhfhreagrach, cuir isteach saincheist le do thoil.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLiosta form├Аid├Г tacaithe faoi l├Аthair:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mComhsh├│ form├Аide gan taca├Гocht[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mTheip ar an bhform├Аid a bhrath go huathoibr├Гoch.Sonraigh de l├Аimh le do thoil.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Gan taca├Гocht f├│s [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ag athr├║ ├│ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m go[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m form├Аid├Г eile [48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mForm├Аid comhaid anaithnid[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mN├Г sh├Аbh├Аlfar an t-├Аbhar seo a leanas ** toisc n├Аr glaodh [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mcos├Аn comhad ceann scr├Гbe[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mearr├Аid tiontaithe[0m"##),
    ],
}
}

/// Language ID: ga;
/// Map name: "set";
/// Description: Gaeilge, Laidineach, ├Ѕire;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Cos├Аn comhaid neamhbhail├Г.");
/// ```
pub(super) const fn get_ga_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"N├Г dh├Еanfar an t-├Аbhar modhnaithe ** a sh├Аbh├Аil ** toisc n├Аr glaodh `--sv`."##),
        ("new-value", r##"Luach nua"##),
        ("invalid-path", r##"Cos├Аn comhaid neamhbhail├Г."##),
    ],
}
}

/// Language ID: ga;
/// Map name: "set_md";
/// Description: Gaeilge, Laidineach, ├Ѕire;
pub(super) const fn get_ga_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mN├Г dh├Еanfar an t-├Аbhar modhnaithe ** a sh├Аbh├Аil ** toisc n├Аr glaodh [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mLuach nua[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mCos├Аn comhaid neamhbhail├Г.[0m"##),
    ],
}
}

/// Language ID: ga;
/// Map name: "get";
/// Description: Gaeilge, Laidineach, ├Ѕire;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Form├Аid scr├Гbe");
/// ```
pub(super) const fn get_ga_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Form├Аid scr├Гbe"##),
        ("src-fmt", r##"Form├Аid comhaid foinse"##),
    ],
}
}

/// ga: Gaeilge, Laidineach, ├Ѕire
pub(super) const fn get_ga_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ga_map_conversion),
        ("get", get_ga_map_get),
        ("set_md", get_ga_map_set_md),
        ("set", get_ga_map_set),
        ("conversion_md", get_ga_map_conversion_md),
    ],
}
}

/// Language ID: gd;
/// Map name: "conversion";
/// Description: G├аidhlig, Laideann, An R├гoghachd Aonaichte;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Dh'fh├аillig an cruth a lorg gu f├еin-ghluasadach.S├▓nraich le l├аimh.");
/// ```
pub(super) const fn get_gd_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (4, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"Chan eil am binary *** seo a 'toirt a-steach ** an comas atharrachaidh airson an cruth iomchaidh.
Feumaidh tu an fheart buntainneach a chomasachadh anns an `Cargo.toml` agus rempost.
Mura h-eil am bathar-bog seo a 'toirt a-steach an gn├гomh-gn├гomhachd fhreagarrach, cuiridh e c├╣is a-steach."##),
        ("auto-detection-failed", r##"Dh'fh├аillig an cruth a lorg gu f├еin-ghluasadach.S├▓nraich le l├аimh."##),
        ("not-support-deser-sexp", r##"** Gun taic fhathast ach **. Ag atharrachadh bho `Lisp S-Consail` ri` cruthan eile"##),
        ("dst", r##"Slighe faidhle ceann-uidhe"##),
        ("invalid-json1.0", r##"Chan e cruth dligheach a th 'anns an fhaidhle, a' feuchainn ri cruth a chuir air adhart mar `JSON5` ..."##),
        ("currently-supported", r##"Liosta Cruthan taice an-dr├аsta:"##),
        ("not-saved", r##"Cha t├еid an susbaint a leanas *** * *** a sh├аbhaladh oir cha deach `--save` fhaicinn."##),
        ("unknown-fmt", r##"cruth faidhle neo-aithnichte"##),
        ("conv-error", r##"mearachd atharrachaidh"##),
    ],
}
}

/// Language ID: gd;
/// Map name: "conversion_md";
/// Description: G├аidhlig, Laideann, An R├гoghachd Aonaichte;
pub(super) const fn get_gd_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (4, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mChan eil am binary *** seo a 'toirt a-steach ** an comas atharrachaidh airson an cruth iomchaidh.
[48;2;34;34;34m[38;2;255;255;255mFeumaidh tu an fheart buntainneach a chomasachadh anns an [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m agus rempost.
[48;2;34;34;34m[38;2;255;255;255mMura h-eil am bathar-bog seo a 'toirt a-steach an gn├гomh-gn├гomhachd fhreagarrach, cuiridh e c├╣is a-steach.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mDh'fh├аillig an cruth a lorg gu f├еin-ghluasadach.S├▓nraich le l├аimh.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Gun taic fhathast ach [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m. Ag atharrachadh bho [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Consail[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ri[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m cruthan eile[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mSlighe faidhle ceann-uidhe[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mChan e cruth dligheach a th 'anns an fhaidhle, a' feuchainn ri cruth a chuir air adhart mar [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLiosta Cruthan taice an-dr├аsta:[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mCha t├еid an susbaint a leanas *** * *** a sh├аbhaladh oir cha deach [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m fhaicinn.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mcruth faidhle neo-aithnichte[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mmearachd atharrachaidh[0m"##),
    ],
}
}

/// Language ID: gd;
/// Map name: "set";
/// Description: G├аidhlig, Laideann, An R├гoghachd Aonaichte;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Slighe faidhle neo-dhligheach.");
/// ```
pub(super) const fn get_gd_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Cha t├еid an susbaint atharraichte ** *** a sh├аbhaladh oir cha deach `--sv` a ghairm."##),
        ("new-value", r##"Luach ├╣r"##),
        ("invalid-path", r##"Slighe faidhle neo-dhligheach."##),
    ],
}
}

/// Language ID: gd;
/// Map name: "set_md";
/// Description: G├аidhlig, Laideann, An R├гoghachd Aonaichte;
pub(super) const fn get_gd_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mCha t├еid an susbaint atharraichte ** *** a sh├аbhaladh oir cha deach [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m a ghairm.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mLuach ├╣r[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mSlighe faidhle neo-dhligheach.[0m"##),
    ],
}
}

/// Language ID: gd;
/// Map name: "get";
/// Description: G├аidhlig, Laideann, An R├гoghachd Aonaichte;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Cruth ceann-uidhe");
/// ```
pub(super) const fn get_gd_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Cruth ceann-uidhe"##),
        ("src-fmt", r##"Cruth faidhle st├▓r"##),
    ],
}
}

/// gd: G├аidhlig, Laideann, An R├гoghachd Aonaichte
pub(super) const fn get_gd_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_gd_map_conversion),
        ("get", get_gd_map_get),
        ("set_md", get_gd_map_set_md),
        ("set", get_gd_map_set),
        ("conversion_md", get_gd_map_conversion_md),
    ],
}
}

/// Language ID: gl;
/// Map name: "conversion";
/// Description: galego, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "non puido detectar automaticamente o formato.Especifique manualmente.");
/// ```
pub(super) const fn get_gl_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"O ficheiro non ├Е un formato v├Аlido `json 1.0`, intentando analizar como `json5` ..."##),
        ("not-included", r##"Este binario ** non incl├║e ** a funcionalidade de conversi├│n para o formato pertinente.
Debe habilitar a caracter├Гstica relevante no seu `Cargo.toml` e recompilar.
Se este software non incl├║e a funcionalidade correspondente, env├Гe un problema."##),
        ("currently-supported", r##"Lista de formatos compatibles actualmente:"##),
        ("unsupported", r##"Conversi├│n de formato non compatible"##),
        ("auto-detection-failed", r##"non puido detectar automaticamente o formato.Especifique manualmente."##),
        ("not-support-deser-sexp", r##"** a├Гnda non soportado **: convertendo de `lisp s-expression` a` outros formatos ""##),
        ("unknown-fmt", r##"formato de ficheiro desco├▒ecido"##),
        ("not-saved", r##"Non se gardar├А o seguinte contido ** porque non se chamou `--save`."##),
        ("dst", r##"ruta do ficheiro de destino"##),
        ("conv-error", r##"erro de conversi├│n"##),
    ],
}
}

/// Language ID: gl;
/// Map name: "conversion_md";
/// Description: galego, latino, Espa├▒a;
pub(super) const fn get_gl_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mO ficheiro non ├Е un formato v├Аlido [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, intentando analizar como [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mEste binario ** non incl├║e ** a funcionalidade de conversi├│n para o formato pertinente.
[48;2;34;34;34m[38;2;255;255;255mDebe habilitar a caracter├Гstica relevante no seu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m e recompilar.
[48;2;34;34;34m[38;2;255;255;255mSe este software non incl├║e a funcionalidade correspondente, env├Гe un problema.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista de formatos compatibles actualmente:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConversi├│n de formato non compatible[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mnon puido detectar automaticamente o formato.Especifique manualmente.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** a├Гnda non soportado [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: convertendo de [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m a[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m outros formatos "[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mformato de ficheiro desco├▒ecido[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNon se gardar├А o seguinte contido ** porque non se chamou [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mruta do ficheiro de destino[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255merro de conversi├│n[0m"##),
    ],
}
}

/// Language ID: gl;
/// Map name: "set";
/// Description: galego, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ruta de ficheiro non v├Аlida.");
/// ```
pub(super) const fn get_gl_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"O contido modificado ** non se gardar├А ** porque non se chamou `--sv`."##),
        ("new-value", r##"novo valor"##),
        ("invalid-path", r##"ruta de ficheiro non v├Аlida."##),
    ],
}
}

/// Language ID: gl;
/// Map name: "set_md";
/// Description: galego, latino, Espa├▒a;
pub(super) const fn get_gl_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mO contido modificado ** non se gardar├А ** porque non se chamou [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnovo valor[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mruta de ficheiro non v├Аlida.[0m"##),
    ],
}
}

/// Language ID: gl;
/// Map name: "get";
/// Description: galego, latino, Espa├▒a;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Formato de destino");
/// ```
pub(super) const fn get_gl_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Formato de destino"##),
        ("src-fmt", r##"Formato de ficheiro de orixe"##),
    ],
}
}

/// gl: galego, latino, Espa├▒a
pub(super) const fn get_gl_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_gl_map_conversion),
        ("get", get_gl_map_get),
        ("set_md", get_gl_map_set_md),
        ("set", get_gl_map_set),
        ("conversion_md", get_gl_map_conversion_md),
    ],
}
}

/// Language ID: gu;
/// Map name: "conversion";
/// Description: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯфФЯФІЯф░\u{acd}Яф«\u{ac7}ЯфЪЯфе\u{ac7} ЯфєЯффЯф«\u{ac7}Яф│\u{ac7} ЯфХЯФІЯфДЯфхЯфЙЯф«ЯфЙ\u{a82} ЯфеЯф┐Яфи\u{acd}ЯфФЯф│.ЯфЋ\u{ac3}ЯффЯфЙ ЯфЋЯф░ЯФђЯфе\u{ac7} Яф«\u{ac7}Яфе\u{acd}Яф»\u{ac1}ЯфЁЯф▓ЯФђ ЯфИ\u{acd}ЯффЯфи\u{acd}ЯфЪ ЯфЋЯф░ЯФІ.");
/// ```
pub(super) const fn get_gu_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"ЯфФЯфЙЯфЄЯф▓ Яф«ЯфЙЯфеЯФЇЯф» ЯфеЯфЦЯФђ `json 1.0` ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ, `json5` ЯфцЯф░ЯФђЯфЋЯФЄ ЯфхЯф┐ЯфХЯФЇЯф▓ЯФЄЯфиЯфБ ЯфЋЯф░ЯфхЯфЙЯфеЯФІ ЯффЯФЇЯф░Яф»ЯфЙЯфИ ЯфЋЯф░ЯФђ Яф░Яф╣ЯФЇЯф»ЯФІ ЯфЏЯФЄ ..."##),
        ("not-included", r##"Яфє ЯфдЯФЇЯфхЯф┐ЯфИЯфѓЯфЌЯФђ ** ЯфИЯфѓЯфгЯфѓЯфДЯф┐Яфц ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ Яф«ЯфЙЯфЪЯФЄ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░ ЯфЋЯфЙЯф░ЯФЇЯф»ЯфЋЯФЇЯфиЯф«ЯфцЯфЙ ** ЯфХЯфЙЯф«ЯФЄЯф▓ ЯфеЯфЦЯФђ.
ЯфцЯф«ЯфЙЯф░ЯФЄ ЯфцЯф«ЯфЙЯф░ЯфЙ `ЯфЋЯфЙЯф░ЯФЇЯфЌЯФІ.ЯфЪ om Яф«Яф▓ ЯфЁЯфеЯФЄ ЯфФЯф░ЯФђЯфЦЯФђ ЯфЋЯф«ЯФЇЯффЯфЙЯфЄЯф▓Яф«ЯфЙЯфѓ ЯфИЯфѓЯфгЯфѓЯфДЯф┐Яфц ЯфИЯФЂЯфхЯф┐ЯфДЯфЙЯфеЯФЄ ЯфИЯфЋЯФЇЯфиЯф« ЯфЋЯф░ЯфхЯфЙЯфеЯФђ ЯфюЯф░ЯФѓЯф░ ЯфЏЯФЄ.
ЯфюЯФІ Яфє ЯфИ software ЯфФЯФЇЯфЪЯфхЯФЄЯф░ЯфеЯФЄ ЯфЁЯфеЯФЂЯф░ЯФѓЯфф ЯфхЯф┐ЯфДЯФЄЯф» ЯфХЯфЙЯф«ЯФЄЯф▓ ЯфеЯфЦЯФђ, ЯфцЯФІ ЯфЋЯФЃЯффЯфЙ ЯфЋЯф░ЯФђЯфеЯФЄ ЯфЋЯФІЯфѕ Яф«ЯФЂЯфдЯФЇЯфдЯФІ ЯфИЯфгЯф«Яф┐ЯфЪ ЯфЋЯф░ЯФІ."##),
        ("currently-supported", r##"Яф╣ЯфЙЯф▓Яф«ЯфЙЯфѓ ЯфИЯффЯФІЯф░ЯФЇЯфЪЯФЄЯфА ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪЯФЇЯфИ ЯфИЯФѓЯфџЯф┐:"##),
        ("unsupported", r##"ЯфЁЯфИЯф«Яф░ЯФЇЯфЦЯф┐Яфц ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░"##),
        ("auto-detection-failed", r##"ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪЯфеЯФЄ ЯфєЯффЯф«ЯФЄЯф│ЯФЄ ЯфХЯФІЯфДЯфхЯфЙЯф«ЯфЙЯфѓ ЯфеЯф┐ЯфиЯФЇЯфФЯф│.ЯфЋЯФЃЯффЯфЙ ЯфЋЯф░ЯФђЯфеЯФЄ Яф«ЯФЄЯфеЯФЇЯф»ЯФЂЯфЁЯф▓ЯФђ ЯфИЯФЇЯффЯфиЯФЇЯфЪ ЯфЋЯф░ЯФІ."##),
        ("not-support-deser-sexp", r##"** Яф╣ЯфюЯФђ ЯфИЯФЂЯфДЯФђ ЯфИЯффЯФІЯф░ЯФЇЯфЪЯФЄЯфА ЯфеЯфЦЯФђ **: `Яф▓Яф┐ЯфИЯФЇЯфф ЯфЈЯфИ-ЯфЈЯфЋЯФЇЯфИЯффЯФЇЯф░ЯФЄЯфИЯфе` ЯфЦЯФђ` ЯфЁЯфеЯФЇЯф» ЯфгЯфѓЯфДЯфЙЯф░ЯфБЯФІЯф«ЯфЙЯфѓ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░Яф┐Яфц ЯфЋЯф░ЯфхЯФЂЯфѓ"##),
        ("unknown-fmt", r##"ЯфЁЯфюЯФЇ unknown ЯфЙЯфц ЯфФЯфЙЯфЄЯф▓ ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ"##),
        ("not-saved", r##"ЯфеЯФђЯфџЯФЄЯфеЯФђ ЯфИЯфЙЯф«ЯфЌЯФЇЯф░ЯФђ ЯфИЯфЙЯфџЯфхЯфхЯфЙЯф«ЯфЙЯфѓ ЯфєЯфхЯфХЯФЄ ЯфеЯф╣ЯФђЯфѓ ЯфЋЯфЙЯф░ЯфБ ЯфЋЯФЄ `--save` ЯфЋЯф╣ЯФЄЯфхЯфЙЯф«ЯфЙЯфѓ ЯфєЯфхЯфцЯФЂЯфѓ Яфе Яф╣ЯфцЯФЂЯфѓ."##),
        ("dst", r##"ЯфЌЯфѓЯфцЯфхЯФЇЯф» ЯфФЯфЙЯфЄЯф▓ ЯффЯфЙЯфЦ"##),
        ("conv-error", r##"Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░ ЯфГЯФѓЯф▓"##),
    ],
}
}

/// Language ID: gu;
/// Map name: "conversion_md";
/// Description: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц;
pub(super) const fn get_gu_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯфФЯфЙЯфЄЯф▓ Яф«ЯфЙЯфеЯФЇЯф» ЯфеЯфЦЯФђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯфцЯф░ЯФђЯфЋЯФЄ ЯфхЯф┐ЯфХЯФЇЯф▓ЯФЄЯфиЯфБ ЯфЋЯф░ЯфхЯфЙЯфеЯФІ ЯффЯФЇЯф░Яф»ЯфЙЯфИ ЯфЋЯф░ЯФђ Яф░Яф╣ЯФЇЯф»ЯФІ ЯфЏЯФЄ ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯфє ЯфдЯФЇЯфхЯф┐ЯфИЯфѓЯфЌЯФђ ** ЯфИЯфѓЯфгЯфѓЯфДЯф┐Яфц ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ Яф«ЯфЙЯфЪЯФЄ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░ ЯфЋЯфЙЯф░ЯФЇЯф»ЯфЋЯФЇЯфиЯф«ЯфцЯфЙ ** ЯфХЯфЙЯф«ЯФЄЯф▓ ЯфеЯфЦЯФђ.
[48;2;34;34;34m[38;2;255;255;255mЯфцЯф«ЯфЙЯф░ЯФЄ ЯфцЯф«ЯфЙЯф░ЯфЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯфЋЯфЙЯф░ЯФЇЯфЌЯФІ.ЯфЪ om Яф«Яф▓ ЯфЁЯфеЯФЄ ЯфФЯф░ЯФђЯфЦЯФђ ЯфЋЯф«ЯФЇЯффЯфЙЯфЄЯф▓Яф«ЯфЙЯфѓ ЯфИЯфѓЯфгЯфѓЯфДЯф┐Яфц ЯфИЯФЂЯфхЯф┐ЯфДЯфЙЯфеЯФЄ ЯфИЯфЋЯФЇЯфиЯф« ЯфЋЯф░ЯфхЯфЙЯфеЯФђ ЯфюЯф░ЯФѓЯф░ ЯфЏЯФЄ.
[48;2;34;34;34m[38;2;0;255;255mЯфюЯФІ Яфє ЯфИ software ЯфФЯФЇЯфЪЯфхЯФЄЯф░ЯфеЯФЄ ЯфЁЯфеЯФЂЯф░ЯФѓЯфф ЯфхЯф┐ЯфДЯФЄЯф» ЯфХЯфЙЯф«ЯФЄЯф▓ ЯфеЯфЦЯФђ, ЯфцЯФІ ЯфЋЯФЃЯффЯфЙ ЯфЋЯф░ЯФђЯфеЯФЄ ЯфЋЯФІЯфѕ Яф«ЯФЂЯфдЯФЇЯфдЯФІ ЯфИЯфгЯф«Яф┐ЯфЪ ЯфЋЯф░ЯФІ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯф╣ЯфЙЯф▓Яф«ЯфЙЯфѓ ЯфИЯффЯФІЯф░ЯФЇЯфЪЯФЄЯфА ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪЯФЇЯфИ ЯфИЯФѓЯфџЯф┐:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯфЁЯфИЯф«Яф░ЯФЇЯфЦЯф┐Яфц ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪЯфеЯФЄ ЯфєЯффЯф«ЯФЄЯф│ЯФЄ ЯфХЯФІЯфДЯфхЯфЙЯф«ЯфЙЯфѓ ЯфеЯф┐ЯфиЯФЇЯфФЯф│.ЯфЋЯФЃЯффЯфЙ ЯфЋЯф░ЯФђЯфеЯФЄ Яф«ЯФЄЯфеЯФЇЯф»ЯФЂЯфЁЯф▓ЯФђ ЯфИЯФЇЯффЯфиЯФЇЯфЪ ЯфЋЯф░ЯФІ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Яф╣ЯфюЯФђ ЯфИЯФЂЯфДЯФђ ЯфИЯффЯФІЯф░ЯФЇЯфЪЯФЄЯфА ЯфеЯфЦЯФђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯф▓Яф┐ЯфИЯФЇЯфф ЯфЈЯфИ-ЯфЈЯфЋЯФЇЯфИЯффЯФЇЯф░ЯФЄЯфИЯфе[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ЯфЦЯФђ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЯфЁЯфеЯФЇЯф» ЯфгЯфѓЯфДЯфЙЯф░ЯфБЯФІЯф«ЯфЙЯфѓ Яф░ЯФѓЯффЯфЙЯфѓЯфцЯф░Яф┐Яфц ЯфЋЯф░ЯфхЯФЂЯфѓ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯфЁЯфюЯФЇ unknown ЯфЙЯфц ЯфФЯфЙЯфЄЯф▓ ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mЯфеЯФђЯфџЯФЄЯфеЯФђ ЯфИЯфЙЯф«ЯфЌЯФЇЯф░ЯФђ ЯфИЯфЙЯфџЯфхЯфхЯфЙЯф«ЯфЙЯфѓ ЯфєЯфхЯфХЯФЄ ЯфеЯф╣ЯФђЯфѓ ЯфЋЯфЙЯф░ЯфБ ЯфЋЯФЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯфЋЯф╣ЯФЄЯфхЯфЙЯф«ЯфЙЯфѓ ЯфєЯфхЯфцЯФЂЯфѓ Яфе Яф╣ЯфцЯФЂЯфѓ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯфЌЯфѓЯфцЯфхЯФЇЯф» ЯфФЯфЙЯфЄЯф▓ ЯффЯфЙЯфЦ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯф░ЯФѓЯффЯфЙЯфѓЯфцЯф░ ЯфГЯФѓЯф▓[0m"##),
    ],
}
}

/// Language ID: gu;
/// Map name: "set";
/// Description: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯфЁЯф«ЯфЙЯфе\u{acd}Яф» ЯфФЯфЙЯфЄЯф▓ ЯффЯфЙЯфЦ.");
/// ```
pub(super) const fn get_gu_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯфИЯФЂЯфДЯфЙЯф░ЯФЄЯф▓ЯФђ ЯфИЯфЙЯф«ЯфЌЯФЇЯф░ЯФђ ** ** ЯфИЯфЙЯфџЯфхЯфХЯФЄ ЯфеЯф╣ЯФђЯфѓ ЯфЋЯфЙЯф░ЯфБ ЯфЋЯФЄ `--ЯфЈЯфИЯфхЯФђ` ЯфЋЯф╣ЯФЄЯфхЯфЙЯфцЯфЙ Яфе Яф╣ЯфцЯфЙ."##),
        ("new-value", r##"ЯфеЯфхЯФЂЯфѓ Яф«ЯФѓЯф▓ЯФЇЯф»"##),
        ("invalid-path", r##"ЯфЁЯф«ЯфЙЯфеЯФЇЯф» ЯфФЯфЙЯфЄЯф▓ ЯффЯфЙЯфЦ."##),
    ],
}
}

/// Language ID: gu;
/// Map name: "set_md";
/// Description: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц;
pub(super) const fn get_gu_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯфИЯФЂЯфДЯфЙЯф░ЯФЄЯф▓ЯФђ ЯфИЯфЙЯф«ЯфЌЯФЇЯф░ЯФђ ** ** ЯфИЯфЙЯфџЯфхЯфХЯФЄ ЯфеЯф╣ЯФђЯфѓ ЯфЋЯфЙЯф░ЯфБ ЯфЋЯФЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--ЯфЈЯфИЯфхЯФђ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯфЋЯф╣ЯФЄЯфхЯфЙЯфцЯфЙ Яфе Яф╣ЯфцЯфЙ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯфеЯфхЯФЂЯфѓ Яф«ЯФѓЯф▓ЯФЇЯф»[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯфЁЯф«ЯфЙЯфеЯФЇЯф» ЯфФЯфЙЯфЄЯф▓ ЯффЯфЙЯфЦ.[0m"##),
    ],
}
}

/// Language ID: gu;
/// Map name: "get";
/// Description: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯфЌ\u{a82}ЯфцЯфх\u{acd}Яф» -ЯфФЯФІЯф░\u{acd}Яф«\u{ac7}ЯфЪ");
/// ```
pub(super) const fn get_gu_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯфЌЯфѓЯфцЯфхЯФЇЯф» -ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ"##),
        ("src-fmt", r##"ЯфИЯФЇЯфцЯФЇЯф░ЯФІЯфц ЯфФЯфЙЯфЄЯф▓ ЯфФЯФІЯф░ЯФЇЯф«ЯФЄЯфЪ"##),
    ],
}
}

/// gu: ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфЌЯФЂЯфюЯф░ЯфЙЯфцЯФђ, ЯфГЯфЙЯф░Яфц
pub(super) const fn get_gu_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_gu_map_conversion),
        ("get", get_gu_map_get),
        ("set_md", get_gu_map_set_md),
        ("set", get_gu_map_set),
        ("conversion_md", get_gu_map_conversion_md),
    ],
}
}

/// Language ID: ha;
/// Map name: "conversion";
/// Description: Hausa, Latin, Nijeriya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Ba a yi nasarar gano tsarin ba.Da fatan za a saka hannu da hannu.");
/// ```
pub(super) const fn get_ha_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** Ba a tallafawa ba tukuna **: Canza daga 'FursP S-magana' zuwa 'sauran nau'i`"##),
        ("unknown-fmt", r##"Tsarin fayil ╔Ќin da ba a sani ba"##),
        ("currently-supported", r##"A halin yanzu ana tallafawa jerin abubuwan tsari:"##),
        ("auto-detection-failed", r##"Ba a yi nasarar gano tsarin ba.Da fatan za a saka hannu da hannu."##),
        ("not-included", r##"Wannan binary ** bai ha╔Ќa da aikin canjin ba don tsarin da ya dace.
Kuna buкЎatar kunna fasalin da ya dace a cikin 'Cargo.toml` da kuma sake sakewa.
Idan wannan software ╔Ќin ba ya ha╔Ќa da ayyukan da ya dace, don Allah a gabatar da batun."##),
        ("conv-error", r##"Kuskure"##),
        ("dst", r##"Hanyar fayil mai zuwa"##),
        ("unsupported", r##"Canje-canje na tsari"##),
        ("invalid-json1.0", r##"Fayil ba ingantacce bane 'Tsarin 1.0`, кЎoкЎarin yin parese a matsayin' json5` ..."##),
    ],
}
}

/// Language ID: ha;
/// Map name: "conversion_md";
/// Description: Hausa, Latin, Nijeriya;
pub(super) const fn get_ha_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Ba a tallafawa ba tukuna [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Canza daga 'FursP S-magana' zuwa 'sauran nau'i[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mTsarin fayil ╔Ќin da ba a sani ba[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mA halin yanzu ana tallafawa jerin abubuwan tsari:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mBa a yi nasarar gano tsarin ba.Da fatan za a saka hannu da hannu.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mWannan binary ** bai ha╔Ќa da aikin canjin ba don tsarin da ya dace.
[48;2;34;34;34m[38;2;255;255;255mKuna buкЎatar kunna fasalin da ya dace a cikin 'Cargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m da kuma sake sakewa.
[48;2;34;34;34m[38;2;0;255;255mIdan wannan software ╔Ќin ba ya ha╔Ќa da ayyukan da ya dace, don Allah a gabatar da batun.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKuskure[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mHanyar fayil mai zuwa[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mCanje-canje na tsari[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFayil ba ingantacce bane 'Tsarin 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m, кЎoкЎarin yin parese a matsayin' json5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
    ],
}
}

/// Language ID: ha;
/// Map name: "set";
/// Description: Hausa, Latin, Nijeriya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Hanyar fayil ╔Ќin da ba ta dace ba.");
/// ```
pub(super) const fn get_ha_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"A canza abun ciki ** ba ** don samun ceto saboda `- - ba a kira shi ba."##),
        ("new-value", r##"Sabon darajar"##),
        ("invalid-path", r##"Hanyar fayil ╔Ќin da ba ta dace ba."##),
    ],
}
}

/// Language ID: ha;
/// Map name: "set_md";
/// Description: Hausa, Latin, Nijeriya;
pub(super) const fn get_ha_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mA canza abun ciki ** ba ** don samun ceto saboda [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- - ba a kira shi ba.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mSabon darajar[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mHanyar fayil ╔Ќin da ba ta dace ba.[0m"##),
    ],
}
}

/// Language ID: ha;
/// Map name: "get";
/// Description: Hausa, Latin, Nijeriya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Tsarin manufa");
/// ```
pub(super) const fn get_ha_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Tsarin manufa"##),
        ("src-fmt", r##"Tsarin fayil na tushe"##),
    ],
}
}

/// ha: Hausa, Latin, Nijeriya
pub(super) const fn get_ha_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ha_map_conversion),
        ("get", get_ha_map_get),
        ("set_md", get_ha_map_set_md),
        ("set", get_ha_map_set),
        ("conversion_md", get_ha_map_conversion_md),
    ],
}
}

/// Language ID: haw;
/// Map name: "conversion";
/// Description: ╩╗┼їlelo Hawai╩╗i, Latn, ╩╗Amelika Hui P┼Ф ╩╗Ia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "invalid-json1.0");
///
/// assert_eq!(msg, "╩╗a╩╗ole he faile i kahi o ka `JSON 1.0`");
/// ```
pub(super) const fn get_haw_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"╩╗a╩╗ole he faile i kahi o ka `JSON 1.0`"##),
        ("not-support-deser-sexp", r##"╩╗a╩╗ole k─Ђko╩╗o╩╗ia╩╗o *** **: E ho╩╗ohuli ana mai ka 'Lisp S-Express"##),
        ("not-included", r##"╩╗A╩╗ole pili k─Њia binary **╩╗a╩╗ole e ho╩╗opili ** i ka hana ho╩╗ololi no ke╩╗ano k┼Фpono.
Pono╩╗oe e hiki i ka hi╩╗ohi╩╗ona k┼Фpono i k─Ђu 'Cargo.Mtl` a uku hou.
In─Ђ╩╗a╩╗ole pili k─Њia polokalamu i ka hana pili i ka hana, e╩╗olu╩╗olu e h─Ђ╩╗awi i kahi pilikia."##),
    ],
}
}

/// Language ID: haw;
/// Map name: "conversion_md";
/// Description: ╩╗┼їlelo Hawai╩╗i, Latn, ╩╗Amelika Hui P┼Ф ╩╗Ia;
pub(super) const fn get_haw_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m╩╗a╩╗ole he faile i kahi o ka [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m╩╗a╩╗ole k─Ђko╩╗o╩╗ia╩╗o *** [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: E ho╩╗ohuli ana mai ka 'Lisp S-Express[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m╩╗A╩╗ole pili k─Њia binary [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m╩╗a╩╗ole e ho╩╗opili ** i ka hana ho╩╗ololi no ke╩╗ano k┼Фpono.
[48;2;34;34;34m[38;2;249;38;114mPono╩╗oe e hiki i ka hi╩╗ohi╩╗ona k┼Фpono i k─Ђu 'Cargo.Mtl[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m a uku hou.
[48;2;34;34;34m[38;2;0;255;255mIn─Ђ╩╗a╩╗ole pili k─Њia polokalamu i ka hana pili i ka hana, e╩╗olu╩╗olu e h─Ђ╩╗awi i kahi pilikia.[0m"##),
    ],
}
}

/// Language ID: haw;
/// Map name: "set";
/// Description: ╩╗┼їlelo Hawai╩╗i, Latn, ╩╗Amelika Hui P┼Ф ╩╗Ia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "new-value");
///
/// assert_eq!(msg, "waiwai hou");
/// ```
pub(super) const fn get_haw_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("new-value", r##"waiwai hou"##),
    ],
}
}

/// Language ID: haw;
/// Map name: "set_md";
/// Description: ╩╗┼їlelo Hawai╩╗i, Latn, ╩╗Amelika Hui P┼Ф ╩╗Ia;
pub(super) const fn get_haw_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mwaiwai hou[0m"##),
    ],
}
}

/// haw: ╩╗┼їlelo Hawai╩╗i, Latn, ╩╗Amelika Hui P┼Ф ╩╗Ia
pub(super) const fn get_haw_map() -> SubLocaleMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("set_md", get_haw_map_set_md),
        ("set", get_haw_map_set),
        ("conversion_md", get_haw_map_conversion_md),
        ("conversion", get_haw_map_conversion),
    ],
}
}

/// Language ID: he;
/// Map name: "conversion";
/// Description: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ОаОЏОЕОю ОЉОљОЎОфОЋОе ОљОЋОўОЋОъОўОЎ ОЕОю ОћОцОЋОеОъОў.ОљОаОљ ОдОЎОЎОЪ ОЎОЊОаОЎОф.");
/// ```
pub(super) const fn get_he_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"ОћОДОЋОЉОЦ ОљОЎОаОЋ ОцОЋОеОъОў 'JSON 1.0' ОфОДОБ, ОъОаОАОћ ОюОаОфОЌ ОЏ- `JSON5` ..."##),
        ("not-included", r##"ОЉОЎОаОљОеОЎ ОќОћ ** ОљОЎОаОЋ ОЏОЋОюОю ** ОцОЋОаОДОдОЎОЋОаОюОЎОЋОф ОћОћОъОеОћ ОюОцОЋОеОъОў ОћОеОюОЋОЋОаОўОЎ.
ОљОфОћ ОдОеОЎОџ ОюОљОцОЕОе ОљОф ОћОфОЏОЋОаОћ ОћОеОюОЋОЋОаОўОЎОф ОЉ'ОъОўОбОЪ 'ОЕОюОџ ОЋОюОЌОќОЋОе ОъОЌОЊОЕ.
ОљОЮ ОфОЋОЏОаОћ ОќОЋ ОљОЎОаОћ ОЏОЋОюОюОф ОљОф ОћОцОЋОаОДОдОЎОЋОаОюОЎОЋОф ОћОъОфОљОЎОъОћ, ОљОаОљ ОћОњОЕ ОЉОбОЎОћ."##),
        ("currently-supported", r##"ОеОЕОЎОъОф ОцОЋОеОъОўОЎОЮ ОаОфОъОЏОф ОЏОеОњОб:"##),
        ("unsupported", r##"ОћОъОеОф ОцОЋОеОъОў ОюОљ ОаОфОъОџ"##),
        ("auto-detection-failed", r##"ОаОЏОЕОю ОЉОљОЎОфОЋОе ОљОЋОўОЋОъОўОЎ ОЕОю ОћОцОЋОеОъОў.ОљОаОљ ОдОЎОЎОЪ ОЎОЊОаОЎОф."##),
        ("not-support-deser-sexp", r##"** ОўОеОЮ ОаОфОъОџ **: ОћОъОеОћ Оъ "lisp s-expression" Ою `ОцОЋОеОъОўОЎОЮ ОљОЌОеОЎОЮ""##),
        ("unknown-fmt", r##"ОцОЋОеОъОў ОДОЋОЉОЦ ОюОљ ОЎОЊОЋОб"##),
        ("not-saved", r##"ОћОфОЋОЏОЪ ОћОЉОљ ** ОюОљ ОЎОЎОЕОъОе ** ОъОЏОЎОЋОЋОЪ ОЕ- `--save` ОюОљ ОаОДОеОљ."##),
        ("dst", r##"ОаОфОЎОЉ ОДОЋОЉОЦ ОћОЎОбОЊ"##),
        ("conv-error", r##"ОЕОњОЎОљОф ОћОъОеОћ"##),
    ],
}
}

/// Language ID: he;
/// Map name: "conversion_md";
/// Description: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю;
pub(super) const fn get_he_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mОћОДОЋОЉОЦ ОљОЎОаОЋ ОцОЋОеОъОў 'JSON 1.0' ОфОДОБ, ОъОаОАОћ ОюОаОфОЌ ОЏ- [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mОЉОЎОаОљОеОЎ ОќОћ ** ОљОЎОаОЋ ОЏОЋОюОю ** ОцОЋОаОДОдОЎОЋОаОюОЎОЋОф ОћОћОъОеОћ ОюОцОЋОеОъОў ОћОеОюОЋОЋОаОўОЎ.
[48;2;34;34;34m[38;2;255;255;255mОљОфОћ ОдОеОЎОџ ОюОљОцОЕОе ОљОф ОћОфОЏОЋОаОћ ОћОеОюОЋОЋОаОўОЎОф ОЉ'ОъОўОбОЪ 'ОЕОюОџ ОЋОюОЌОќОЋОе ОъОЌОЊОЕ.
[48;2;34;34;34m[38;2;255;255;255mОљОЮ ОфОЋОЏОаОћ ОќОЋ ОљОЎОаОћ ОЏОЋОюОюОф ОљОф ОћОцОЋОаОДОдОЎОЋОаОюОЎОЋОф ОћОъОфОљОЎОъОћ, ОљОаОљ ОћОњОЕ ОЉОбОЎОћ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mОеОЕОЎОъОф ОцОЋОеОъОўОЎОЮ ОаОфОъОЏОф ОЏОеОњОб:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mОћОъОеОф ОцОЋОеОъОў ОюОљ ОаОфОъОџ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mОаОЏОЕОю ОЉОљОЎОфОЋОе ОљОЋОўОЋОъОўОЎ ОЕОю ОћОцОЋОеОъОў.ОљОаОљ ОдОЎОЎОЪ ОЎОЊОаОЎОф.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ОўОеОЮ ОаОфОъОџ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ОћОъОеОћ Оъ "lisp s-expression" Ою [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mОцОЋОеОъОўОЎОЮ ОљОЌОеОЎОЮ"[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mОцОЋОеОъОў ОДОЋОЉОЦ ОюОљ ОЎОЊОЋОб[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mОћОфОЋОЏОЪ ОћОЉОљ ** ОюОљ ОЎОЎОЕОъОе ** ОъОЏОЎОЋОЋОЪ ОЕ- [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ОюОљ ОаОДОеОљ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mОаОфОЎОЉ ОДОЋОЉОЦ ОћОЎОбОЊ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mОЕОњОЎОљОф ОћОъОеОћ[0m"##),
    ],
}
}

/// Language ID: he;
/// Map name: "set";
/// Description: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ОаОфОЎОЉ ОДОЋОЉОЦ ОюОљ ОЌОЋОДОЎ.");
/// ```
pub(super) const fn get_he_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ОћОфОЋОЏОЪ ОЕОћОЕОфОаОћ ** ОюОљ ОЎОЎОЕОъОе ** ОъОЏОЎОЋОЋОЪ ОЕ- `--sv` ОюОљ ОаОДОеОљ."##),
        ("new-value", r##"ОбОеОџ ОЌОЊОЕ"##),
        ("invalid-path", r##"ОаОфОЎОЉ ОДОЋОЉОЦ ОюОљ ОЌОЋОДОЎ."##),
    ],
}
}

/// Language ID: he;
/// Map name: "set_md";
/// Description: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю;
pub(super) const fn get_he_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mОћОфОЋОЏОЪ ОЕОћОЕОфОаОћ ** ОюОљ ОЎОЎОЕОъОе ** ОъОЏОЎОЋОЋОЪ ОЕ- [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ОюОљ ОаОДОеОљ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mОбОеОџ ОЌОЊОЕ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mОаОфОЎОЉ ОДОЋОЉОЦ ОюОљ ОЌОЋОДОЎ.[0m"##),
    ],
}
}

/// Language ID: he;
/// Map name: "get";
/// Description: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ОцОЋОеОъОў ОЎОбОЊ");
/// ```
pub(super) const fn get_he_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ОцОЋОеОъОў ОЎОбОЊ"##),
        ("src-fmt", r##"ОцОЋОеОъОў ОДОЋОЉОЦ ОъОДОЋОе"##),
    ],
}
}

/// he: ОбОЉОеОЎОф, ОбОЉОеОЎ, ОЎОЕОеОљОю
pub(super) const fn get_he_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_he_map_conversion),
        ("get", get_he_map_get),
        ("set_md", get_he_map_set_md),
        ("set", get_he_map_set),
        ("conversion_md", get_he_map_conversion_md),
    ],
}
}

/// Language ID: hi;
/// Map name: "conversion";
/// Description: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯцИ\u{94d}ЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░\u{942}Яцф ЯцИ\u{947} ЯцФ\u{93c}ЯЦЅЯц░\u{94d}Яц«\u{947}ЯцЪ ЯцЋЯцЙ ЯцфЯццЯцЙ ЯцеЯц╣ЯЦђ\u{902} ЯцџЯц▓ЯцЙЯЦц ЯцЋ\u{943}ЯцфЯц»ЯцЙ Яц«\u{948}Яце\u{94d}Яц»\u{941}ЯцЁЯц▓ЯЦђ Яц«\u{947}\u{902} ЯцеЯц┐Яц░\u{94d}ЯцдЯц┐Яци\u{94d}ЯцЪ ЯцЋЯц░\u{947}\u{902}ЯЦц");
/// ```
pub(super) const fn get_hi_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"ЯцФЯц╝ЯцЙЯцЄЯц▓ `json 1.0` ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцЁЯц«ЯцЙЯцеЯЦЇЯц» Яц╣ЯЦѕ, `json5` ЯцЋЯЦЄ Яц░ЯЦѓЯцф Яц«ЯЦЄЯцѓ ЯцхЯц┐ЯцХЯЦЇЯц▓ЯЦЄЯциЯцБ ЯцЋЯцЙ ЯцфЯЦЇЯц░Яц»ЯцЙЯцИ ЯцЋЯц░ Яц░Яц╣ЯЦЄ Яц╣ЯЦѕЯцѓ..."##),
        ("not-included", r##"ЯцЄЯцИ ЯцгЯцЙЯцЄЯцеЯц░ЯЦђ Яц«ЯЦЄЯцѓ ЯцЁЯцеЯЦЂЯцџЯЦЇЯцЏЯЦЄЯцд ЯцЋЯЦЄ Яц▓Яц┐ЯцЈ Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцХЯцЙЯц«Яц┐Яц▓ ЯцеЯц╣ЯЦђЯцѓ Яц╣ЯЦѕЯЦц
ЯцєЯцфЯцЋЯЦІ ЯцЁЯцфЯцеЯЦЄ `Cargo.toml` Яц«ЯЦЄЯцѓ ЯцЅЯцџЯц┐Яцц ЯцИЯЦЂЯцхЯц┐ЯцДЯцЙ ЯцЋЯЦІ ЯцИЯцЋЯЦЇЯциЯц« ЯцЋЯц░ЯцеЯцЙ ЯцћЯц░ ЯцфЯЦЂЯцеЯц░ЯЦЇЯцИЯцѓЯцџЯцЙЯц▓Яц┐Яцц ЯцЋЯц░ЯцеЯцЙ Яц╣ЯЦІЯцЌЯцЙЯЦц
Яц»ЯцдЯц┐ ЯцЄЯцИ ЯцИЯЦЅЯцФЯЦЇЯцЪЯцхЯЦЄЯц»Яц░ Яц«ЯЦЄЯцѓ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцХЯцЙЯц«Яц┐Яц▓ ЯцеЯц╣ЯЦђЯцѓ Яц╣ЯЦѕ, ЯццЯЦІ ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ Яц«ЯЦЂЯцдЯЦЇЯцдЯцЙ ЯцИЯцгЯц«Яц┐ЯцЪ ЯцЋЯц░ЯЦЄЯцѓЯЦц"##),
        ("currently-supported", r##"ЯцхЯц░ЯЦЇЯццЯц«ЯцЙЯце Яц«ЯЦЄЯцѓ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцИЯЦѓЯцџЯЦђ:"##),
        ("unsupported", r##"ЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцЋЯцеЯцхЯц░ЯЦЇЯцЪ"##),
        ("auto-detection-failed", r##"ЯцИЯЦЇЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░ЯЦѓЯцф ЯцИЯЦЄ ЯцФЯц╝ЯЦЅЯц░ЯЦЇЯц«ЯЦЄЯцЪ ЯцЋЯцЙ ЯцфЯццЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцџЯц▓ЯцЙЯЦц ЯцЋЯЦЃЯцфЯц»ЯцЙ Яц«ЯЦѕЯцеЯЦЇЯц»ЯЦЂЯцЁЯц▓ЯЦђ Яц«ЯЦЄЯцѓ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЋЯц░ЯЦЄЯцѓЯЦц"##),
        ("not-support-deser-sexp", r##"**ЯцЁЯцГЯЦђ ЯццЯцЋ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцеЯц╣ЯЦђЯцѓ**: `Lisp S-Expression` ЯцИЯЦЄ `ЯцЁЯцеЯЦЇЯц» ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯЦІЯцѓ` Яц«ЯЦЄЯцѓ Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯц░ЯцеЯцЙЯЦц"##),
        ("unknown-fmt", r##"ЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯц╝ЯцЙЯцЄЯц▓ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф"##),
        ("not-saved", r##"`--save` ЯцЋЯЦІ ЯцгЯЦЂЯц▓ЯцЙЯц»ЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцЌЯц»ЯцЙ ЯцЦЯцЙ, ЯцЁЯцц: ЯцеЯц┐Яц«ЯЦЇЯцеЯц▓Яц┐ЯцќЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ **ЯцгЯцџЯцЙЯцѕ ЯцеЯц╣ЯЦђЯцѓ ЯцюЯцЙЯцЈЯцЌЯЦђ**ЯЦц"##),
        ("dst", r##"ЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ"##),
        ("conv-error", r##"Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯц┐"##),
    ],
}
}

/// Language ID: hi;
/// Map name: "conversion_md";
/// Description: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
pub(super) const fn get_hi_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯцФЯц╝ЯцЙЯцЄЯц▓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцЁЯц«ЯцЙЯцеЯЦЇЯц» Яц╣ЯЦѕ, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцЋЯЦЄ Яц░ЯЦѓЯцф Яц«ЯЦЄЯцѓ ЯцхЯц┐ЯцХЯЦЇЯц▓ЯЦЄЯциЯцБ ЯцЋЯцЙ ЯцфЯЦЇЯц░Яц»ЯцЙЯцИ ЯцЋЯц░ Яц░Яц╣ЯЦЄ Яц╣ЯЦѕЯцѓ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЄЯцИ ЯцгЯцЙЯцЄЯцеЯц░ЯЦђ Яц«ЯЦЄЯцѓ ЯцЁЯцеЯЦЂЯцџЯЦЇЯцЏЯЦЄЯцд ЯцЋЯЦЄ Яц▓Яц┐ЯцЈ Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцХЯцЙЯц«Яц┐Яц▓ ЯцеЯц╣ЯЦђЯцѓ Яц╣ЯЦѕЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯцєЯцфЯцЋЯЦІ ЯцЁЯцфЯцеЯЦЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Яц«ЯЦЄЯцѓ ЯцЅЯцџЯц┐Яцц ЯцИЯЦЂЯцхЯц┐ЯцДЯцЙ ЯцЋЯЦІ ЯцИЯцЋЯЦЇЯциЯц« ЯцЋЯц░ЯцеЯцЙ ЯцћЯц░ ЯцфЯЦЂЯцеЯц░ЯЦЇЯцИЯцѓЯцџЯцЙЯц▓Яц┐Яцц ЯцЋЯц░ЯцеЯцЙ Яц╣ЯЦІЯцЌЯцЙЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯц»ЯцдЯц┐ ЯцЄЯцИ ЯцИЯЦЅЯцФЯЦЇЯцЪЯцхЯЦЄЯц»Яц░ Яц«ЯЦЄЯцѓ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцХЯцЙЯц«Яц┐Яц▓ ЯцеЯц╣ЯЦђЯцѓ Яц╣ЯЦѕ, ЯццЯЦІ ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ Яц«ЯЦЂЯцдЯЦЇЯцдЯцЙ ЯцИЯцгЯц«Яц┐ЯцЪ ЯцЋЯц░ЯЦЄЯцѓЯЦц[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯцхЯц░ЯЦЇЯццЯц«ЯцЙЯце Яц«ЯЦЄЯцѓ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцИЯЦѓЯцџЯЦђ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцЋЯцеЯцхЯц░ЯЦЇЯцЪ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯцИЯЦЇЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░ЯЦѓЯцф ЯцИЯЦЄ ЯцФЯц╝ЯЦЅЯц░ЯЦЇЯц«ЯЦЄЯцЪ ЯцЋЯцЙ ЯцфЯццЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцџЯц▓ЯцЙЯЦц ЯцЋЯЦЃЯцфЯц»ЯцЙ Яц«ЯЦѕЯцеЯЦЇЯц»ЯЦЂЯцЁЯц▓ЯЦђ Яц«ЯЦЄЯцѓ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЋЯц░ЯЦЄЯцѓЯЦц[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯцЁЯцГЯЦђ ЯццЯцЋ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцеЯц╣ЯЦђЯцѓ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцИЯЦЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯцЁЯцеЯЦЇЯц» ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯЦІЯцѓ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Яц«ЯЦЄЯцѓ Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯц░ЯцеЯцЙЯЦц[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯц╝ЯцЙЯцЄЯц▓ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцЋЯЦІ ЯцгЯЦЂЯц▓ЯцЙЯц»ЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцЌЯц»ЯцЙ ЯцЦЯцЙ, ЯцЁЯцц: ЯцеЯц┐Яц«ЯЦЇЯцеЯц▓Яц┐ЯцќЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯцгЯцџЯцЙЯцѕ ЯцеЯц╣ЯЦђЯцѓ ЯцюЯцЙЯцЈЯцЌЯЦђ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mЯЦц[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯц┐[0m"##),
    ],
}
}

/// Language ID: hi;
/// Map name: "set";
/// Description: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯцЁЯц«ЯцЙЯце\u{94d}Яц» ЯцФ\u{93c}ЯцЙЯцЄЯц▓ ЯцфЯцЦЯЦц");
/// ```
pub(super) const fn get_hi_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"`--sv` ЯцЋЯЦІ ЯцгЯЦЂЯц▓ЯцЙЯц»ЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцЌЯц»ЯцЙ ЯцЦЯцЙ, ЯцЁЯцц: ЯцИЯцѓЯцХЯЦІЯцДЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ **ЯцгЯцџЯцЙЯцѕ ЯцеЯц╣ЯЦђЯцѓ ЯцюЯцЙЯцЈЯцЌЯЦђ**ЯЦц"##),
        ("new-value", r##"ЯцеЯцѕ Яц«ЯЦѓЯц▓ЯЦЇЯц»"##),
        ("invalid-path", r##"ЯцЁЯц«ЯцЙЯцеЯЦЇЯц» ЯцФЯц╝ЯцЙЯцЄЯц▓ ЯцфЯцЦЯЦц"##),
    ],
}
}

/// Language ID: hi;
/// Map name: "set_md";
/// Description: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
pub(super) const fn get_hi_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцЋЯЦІ ЯцгЯЦЂЯц▓ЯцЙЯц»ЯцЙ ЯцеЯц╣ЯЦђЯцѓ ЯцЌЯц»ЯцЙ ЯцЦЯцЙ, ЯцЁЯцц: ЯцИЯцѓЯцХЯЦІЯцДЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mЯцгЯцџЯцЙЯцѕ ЯцеЯц╣ЯЦђЯцѓ ЯцюЯцЙЯцЈЯцЌЯЦђ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mЯЦц[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯцеЯцѕ Яц«ЯЦѓЯц▓ЯЦЇЯц»[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯц«ЯцЙЯцеЯЦЇЯц» ЯцФЯц╝ЯцЙЯцЄЯц▓ ЯцфЯцЦЯЦц[0m"##),
    ],
}
}

/// Language ID: hi;
/// Map name: "get";
/// Description: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯцЌ\u{902}ЯццЯцх\u{94d}Яц» Яцф\u{94d}Яц░ЯцЙЯц░\u{942}Яцф");
/// ```
pub(super) const fn get_hi_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцфЯЦЇЯц░ЯцЙЯц░ЯЦѓЯцф"##),
        ("src-fmt", r##"ЯцИЯЦЇЯц░ЯЦІЯцц ЯцИЯцѓЯцџЯц┐ЯцЋЯцЙ ЯцфЯЦЇЯц░ЯцЙЯц░ЯЦѓЯцф"##),
    ],
}
}

/// hi: Яц╣Яц┐ЯцеЯЦЇЯцдЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц
pub(super) const fn get_hi_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_hi_map_conversion),
        ("get", get_hi_map_get),
        ("set_md", get_hi_map_set_md),
        ("set", get_hi_map_set),
        ("conversion_md", get_hi_map_conversion_md),
    ],
}
}

/// Language ID: hr;
/// Map name: "conversion";
/// Description: hrvatski, latinica, Hrvatska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "nije uspio automatski otkriti format.Molimo odredite ru─Їno.");
/// ```
pub(super) const fn get_hr_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Datoteka nije valjani `json 1.0` format, poku┼Аavaju─Єi ra┼А─Їlaniti kao `json5` ..."##),
        ("not-included", r##"Ovaj binarni ** ne uklju─Їuje ** funkcionalnost pretvorbe za relevantni format.
Morate omogu─Єiti relevantnu zna─Їajku u svom `Cargo.toml` i prekomponi.
Ako ovaj softver ne uklju─Їuje odgovaraju─Єu funkcionalnost, po┼Аaljite problem."##),
        ("currently-supported", r##"Trenutno podr┼Йani popis formata:"##),
        ("unsupported", r##"Nepodr┼Йana konverzija formata"##),
        ("auto-detection-failed", r##"nije uspio automatski otkriti format.Molimo odredite ru─Їno."##),
        ("not-support-deser-sexp", r##"** Jo┼А nije podr┼Йano **: Pretvaranje iz `lisp s-ekspresije` u` ostale formate`"##),
        ("unknown-fmt", r##"Nepoznati format datoteke"##),
        ("not-saved", r##"Sljede─Єi sadr┼Йaj ** ne─Єe biti spreman jer `--save` nije pozvan."##),
        ("dst", r##"Put odredi┼Аne datoteke"##),
        ("conv-error", r##"Pogre┼Аka pretvorbe"##),
    ],
}
}

/// Language ID: hr;
/// Map name: "conversion_md";
/// Description: hrvatski, latinica, Hrvatska;
pub(super) const fn get_hr_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDatoteka nije valjani [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m format, poku┼Аavaju─Єi ra┼А─Їlaniti kao [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mOvaj binarni ** ne uklju─Їuje ** funkcionalnost pretvorbe za relevantni format.
[48;2;34;34;34m[38;2;255;255;255mMorate omogu─Єiti relevantnu zna─Їajku u svom [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m i prekomponi.
[48;2;34;34;34m[38;2;255;255;255mAko ovaj softver ne uklju─Їuje odgovaraju─Єu funkcionalnost, po┼Аaljite problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mTrenutno podr┼Йani popis formata:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNepodr┼Йana konverzija formata[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mnije uspio automatski otkriti format.Molimo odredite ru─Їno.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Jo┼А nije podr┼Йano [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Pretvaranje iz [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-ekspresije[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m u[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ostale formate[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNepoznati format datoteke[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mSljede─Єi sadr┼Йaj ** ne─Єe biti spreman jer [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nije pozvan.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mPut odredi┼Аne datoteke[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mPogre┼Аka pretvorbe[0m"##),
    ],
}
}

/// Language ID: hr;
/// Map name: "set";
/// Description: hrvatski, latinica, Hrvatska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neva┼Йe─Єi put datoteke.");
/// ```
pub(super) const fn get_hr_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Modificirani sadr┼Йaj ** ne─Єe biti spreman jer `--sv` nije pozvan."##),
        ("new-value", r##"Nova vrijednost"##),
        ("invalid-path", r##"Neva┼Йe─Єi put datoteke."##),
    ],
}
}

/// Language ID: hr;
/// Map name: "set_md";
/// Description: hrvatski, latinica, Hrvatska;
pub(super) const fn get_hr_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mModificirani sadr┼Йaj ** ne─Єe biti spreman jer [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nije pozvan.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNova vrijednost[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeva┼Йe─Єi put datoteke.[0m"##),
    ],
}
}

/// Language ID: hr;
/// Map name: "get";
/// Description: hrvatski, latinica, Hrvatska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Odredi┼Аni format");
/// ```
pub(super) const fn get_hr_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Odredi┼Аni format"##),
        ("src-fmt", r##"Format izvorne datoteke"##),
    ],
}
}

/// hr: hrvatski, latinica, Hrvatska
pub(super) const fn get_hr_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_hr_map_conversion),
        ("get", get_hr_map_get),
        ("set_md", get_hr_map_set_md),
        ("set", get_hr_map_set),
        ("conversion_md", get_hr_map_conversion_md),
    ],
}
}

/// Language ID: ht;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "echwe pou pou otomatikman detekte f├▓ma an.Tanpri presize many├еlman.");
/// ```
pub(super) const fn get_ht_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Dosye a se pa yon valab `JSON 1.0` f├▓ma, ap eseye analize k├▓m `JSON5` ..."##),
        ("not-included", r##"Sa a bin├е ** pa gen ladan ** fonksyonalite a konv├еsyon pou f├▓ma a ki enp├▓tan.
Ou bezwen p├еm├еt karakteristik ki enp├▓tan nan `Cargo.toml 'ou ak recompile.
Si lojisy├еl sa a pa enkli fonksyonalite ki koresponn lan, tanpri soum├еt yon pwobl├еm."##),
        ("currently-supported", r##"Lis F├▓ma Kounye a Sip├▓te:"##),
        ("unsupported", r##"konv├еsyon f├▓ma ki pa sip├▓te"##),
        ("auto-detection-failed", r##"echwe pou pou otomatikman detekte f├▓ma an.Tanpri presize many├еlman."##),
        ("not-support-deser-sexp", r##"** pa sip├▓te ank├▓ **: konv├еti soti nan `Lisp s-ekspresyon` a` l├▓t f├▓ma`"##),
        ("unknown-fmt", r##"f├▓ma dosye enkoni"##),
        ("not-saved", r##"Kontni sa yo ** pa pral ** dwe sove paske `--save` pa te rele."##),
        ("dst", r##"chemen dosye destinasyon"##),
        ("conv-error", r##"er├е konv├еsyon"##),
    ],
}
}

/// Language ID: ht;
/// Map name: "conversion_md";
pub(super) const fn get_ht_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDosye a se pa yon valab [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m f├▓ma, ap eseye analize k├▓m [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mSa a bin├е ** pa gen ladan ** fonksyonalite a konv├еsyon pou f├▓ma a ki enp├▓tan.
[48;2;34;34;34m[38;2;255;255;255mOu bezwen p├еm├еt karakteristik ki enp├▓tan nan [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml 'ou ak recompile.
[48;2;34;34;34m[38;2;0;255;255mSi lojisy├еl sa a pa enkli fonksyonalite ki koresponn lan, tanpri soum├еt yon pwobl├еm.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLis F├▓ma Kounye a Sip├▓te:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mkonv├еsyon f├▓ma ki pa sip├▓te[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mechwe pou pou otomatikman detekte f├▓ma an.Tanpri presize many├еlman.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** pa sip├▓te ank├▓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: konv├еti soti nan [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp s-ekspresyon[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m a[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m l├▓t f├▓ma[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mf├▓ma dosye enkoni[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mKontni sa yo ** pa pral ** dwe sove paske [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m pa te rele.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mchemen dosye destinasyon[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mer├е konv├еsyon[0m"##),
    ],
}
}

/// Language ID: ht;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "chemen dosye valab.");
/// ```
pub(super) const fn get_ht_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"kontni an modifye ** pa pral ** dwe sove paske `--v" pa te rele."##),
        ("new-value", r##"Nouvo val├е"##),
        ("invalid-path", r##"chemen dosye valab."##),
    ],
}
}

/// Language ID: ht;
/// Map name: "set_md";
pub(super) const fn get_ht_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mkontni an modifye ** pa pral ** dwe sove paske [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--v" pa te rele.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNouvo val├е[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mchemen dosye valab.[0m"##),
    ],
}
}

/// Language ID: ht;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "F├▓ma destinasyon");
/// ```
pub(super) const fn get_ht_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"F├▓ma destinasyon"##),
        ("src-fmt", r##"F├▓ma dosye sous"##),
    ],
}
}

/// ht: ht-Latn-HT
pub(super) const fn get_ht_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ht_map_conversion),
        ("get", get_ht_map_get),
        ("set_md", get_ht_map_set_md),
        ("set", get_ht_map_set),
        ("conversion_md", get_ht_map_conversion_md),
    ],
}
}

/// Language ID: hu;
/// Map name: "conversion";
/// Description: magyar, Latin, Magyarorsz├Аg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "nem siker├╝lt automatikusan ├Еszlelni a form├Аtumot.K├Еrj├╝k, adja meg manu├Аlisan.");
/// ```
pub(super) const fn get_hu_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"A f├Аjl nem ├Еrv├Еnyes РђъJSON 1.0РђЮ form├Аtum, amely megpr├│b├Аlja elemezni `JSON5 '..."##),
        ("not-included", r##"Ez a bin├Аris ** nem tartalmazza a ** konverzi├│s funkcionalit├Аst a vonatkoz├│ form├Аtumhoz.
Enged├Еlyeznie kell a РђъCargo.tomlРђЮ relev├Аns funkci├│j├Аt, ├Еs ├║jra kell k├Еsz├Гtenie.
Ha ez a szoftver nem tartalmazza a megfelel┼Љ funkci├│t, k├Еrj├╝k, ny├║jtson be egy probl├Еm├Аt."##),
        ("currently-supported", r##"Jelenleg t├Аmogatott form├Аtumok list├Аja:"##),
        ("unsupported", r##"Nem t├Аmogatott form├Аtumkonverzi├│"##),
        ("auto-detection-failed", r##"nem siker├╝lt automatikusan ├Еszlelni a form├Аtumot.K├Еrj├╝k, adja meg manu├Аlisan."##),
        ("not-support-deser-sexp", r##"** M├Еg nem t├Аmogatott **: A РђъLISP S-ExpressionРђЮ -r┼Љl Рђъm├Аs form├АtumokraРђЮ konvert├Аl├Аs"##),
        ("unknown-fmt", r##"Ismeretlen f├Аjl form├Аtum"##),
        ("not-saved", r##"A k├Хvetkez┼Љ tartalom ** nem fog menteni, mert a `--save` nem h├Гvt├Аk meg."##),
        ("dst", r##"c├Еlf├Аjl el├Еr├Еsi ├║tja"##),
        ("conv-error", r##"Konverzi├│s hiba"##),
    ],
}
}

/// Language ID: hu;
/// Map name: "conversion_md";
/// Description: magyar, Latin, Magyarorsz├Аg;
pub(super) const fn get_hu_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mA f├Аjl nem ├Еrv├Еnyes РђъJSON 1.0РђЮ form├Аtum, amely megpr├│b├Аlja elemezni [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5 '...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mEz a bin├Аris ** nem tartalmazza a ** konverzi├│s funkcionalit├Аst a vonatkoz├│ form├Аtumhoz.
[48;2;34;34;34m[38;2;255;255;255mEnged├Еlyeznie kell a РђъCargo.tomlРђЮ relev├Аns funkci├│j├Аt, ├Еs ├║jra kell k├Еsz├Гtenie.
[48;2;34;34;34m[38;2;255;255;255mHa ez a szoftver nem tartalmazza a megfelel┼Љ funkci├│t, k├Еrj├╝k, ny├║jtson be egy probl├Еm├Аt.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mJelenleg t├Аmogatott form├Аtumok list├Аja:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNem t├Аmogatott form├Аtumkonverzi├│[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mnem siker├╝lt automatikusan ├Еszlelni a form├Аtumot.K├Еrj├╝k, adja meg manu├Аlisan.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** M├Еg nem t├Аmogatott [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: A РђъLISP S-ExpressionРђЮ -r┼Љl Рђъm├Аs form├АtumokraРђЮ konvert├Аl├Аs[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mIsmeretlen f├Аjl form├Аtum[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mA k├Хvetkez┼Љ tartalom ** nem fog menteni, mert a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nem h├Гvt├Аk meg.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mc├Еlf├Аjl el├Еr├Еsi ├║tja[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonverzi├│s hiba[0m"##),
    ],
}
}

/// Language ID: hu;
/// Map name: "set";
/// Description: magyar, Latin, Magyarorsz├Аg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "├Ѕrv├Еnytelen f├Аjl el├Еr├Еsi ├║tja.");
/// ```
pub(super) const fn get_hu_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"A m├│dos├Гtott tartalom ** nem fog menteni, mert a `--sv` nem h├Гvt├Аk meg."##),
        ("new-value", r##"├║j ├Еrt├Еk"##),
        ("invalid-path", r##"├Ѕrv├Еnytelen f├Аjl el├Еr├Еsi ├║tja."##),
    ],
}
}

/// Language ID: hu;
/// Map name: "set_md";
/// Description: magyar, Latin, Magyarorsz├Аg;
pub(super) const fn get_hu_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mA m├│dos├Гtott tartalom ** nem fog menteni, mert a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nem h├Гvt├Аk meg.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m├║j ├Еrt├Еk[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m├Ѕrv├Еnytelen f├Аjl el├Еr├Еsi ├║tja.[0m"##),
    ],
}
}

/// Language ID: hu;
/// Map name: "get";
/// Description: magyar, Latin, Magyarorsz├Аg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "C├Еlform├Аtum");
/// ```
pub(super) const fn get_hu_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"C├Еlform├Аtum"##),
        ("src-fmt", r##"Forr├Аsf├Аjl form├Аtum"##),
    ],
}
}

/// hu: magyar, Latin, Magyarorsz├Аg
pub(super) const fn get_hu_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_hu_map_conversion),
        ("get", get_hu_map_get),
        ("set_md", get_hu_map_set_md),
        ("set", get_hu_map_set),
        ("conversion_md", get_hu_map_conversion_md),
    ],
}
}

/// Language ID: hy;
/// Map name: "conversion";
/// Description: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "НЅН░НАН╗НИН▓НЙНЦоЂ НФНХоёНХНАНбНЦођНАНбНАођ Н░НАНхН┐НХНАНбНЦођНЦНг Н▒НЦоѓНАН╣НАоЃНе:нйНХНцођНИоѓН┤ НЦНХоё НХНиНЦНг Н▒НЦН╝оёНИНЙ:");
/// ```
pub(super) const fn get_hy_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** н┤НЦН╝НЦоѓНй Н╣НФ НАН║НАН░НИНЙНЙНИоѓН┤ **. ┬ФLisp S-Express┬╗ - НФоЂ НАНхНг Н▒НЦоѓНАН╣НАоЃНЦођ"##),
        ("unknown-fmt", r##"н▒НХН░НАНхН┐ оєНАНхНгНФ Н▒НЦоѓНАН╣НАоЃ"##),
        ("currently-supported", r##"НєНЦођН»НАНхНИоѓН┤Нй оЁНфНАНХНцНАН»НЙНАН« Н▒НЦоѓНАН╣НАоЃНЦођНФ оЂНИоѓоЂНАН»Не."##),
        ("auto-detection-failed", r##"НЅН░НАН╗НИН▓НЙНЦоЂ НФНХоёНХНАНбНЦођНАНбНАођ Н░НАНхН┐НХНАНбНЦођНЦНг Н▒НЦоѓНАН╣НАоЃНе:нйНХНцођНИоѓН┤ НЦНХоё НХНиНЦНг Н▒НЦН╝оёНИНЙ:"##),
        ("not-included", r##"н▒НхНй НЦођН»НИоѓНАН»НАНХ ** Н╣НФ НХНЦођНАН╝НИоѓН┤ ** Н░НАН┤НАН║НАН┐НАНйНГНАНХ Н▒НЦоѓНАН╣НАоЃНФ оЃНИНГНАођН»Н┤НАНХ оєНИоѓНХН»оЂНФНИНХНАНгНИоѓНЕНхНИоѓНХНе:
н┤НИоѓоё Н║НЦН┐оё НД Н░НХНАођНАНЙНИођНИоѓНЕНхНИоѓНХ НИоѓНХНЦНХНАоё Н░НАН┤НАН║НАН┐НАНйНГНАНХ Н░НАН┐Н»НИоѓНЕНхНИоѓНХНе Н▒НЦођ ┬ФCargo.toml┬╗ НЦоѓ НЙНЦођНАН░НАНиНЙНАођН»НЦоё:
нхНЕНЦ НАНхНй Н«ођНАНБНФођНе Н╣НФ Н║НАођНИоѓНХНАН»НИоѓН┤ Н░НАН┤НАН║НАН┐НАНйНГНАНХ НБНИођН«НАН╝НИоѓНхНЕ, НГНХНцођНИоѓН┤ НЦНХоё НХНЦођН»НАНхНАоЂНХНЦНг Н┤НФ НГНХНцНФођ:"##),
        ("conv-error", r##"НЊНИНГНАН»НЦођН║Н┤НАНХ НйНГНАНг"##),
        ("dst", r##"НєН║НАН┐НАН»НАНхНФНХ оєНАНхНгНФ НИоѓН▓НФНХ"##),
        ("unsupported", r##"НЅоЁНБН┐НАНБНИођН«НЙНАН« Н▒НЦоѓНАН╣НАоЃНФ оЃНИНГНАођН»НИоѓН┤"##),
        ("invalid-json1.0", r##"НќНАНхНгНе НЙНАНЙНЦођ Н╣НД ┬ФJSON 1.0` Н▒НЦоѓНАН╣НАоЃНе, оЃНИођН▒НЦНгНИНЙ НЙНЦођНгНИоѓН«НЦНг┬Ф JSON5 ┬╗..."##),
    ],
}
}

/// Language ID: hy;
/// Map name: "conversion_md";
/// Description: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ;
pub(super) const fn get_hy_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** н┤НЦН╝НЦоѓНй Н╣НФ НАН║НАН░НИНЙНЙНИоѓН┤ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m. ┬ФLisp S-Express┬╗ - НФоЂ НАНхНг Н▒НЦоѓНАН╣НАоЃНЦођ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mн▒НХН░НАНхН┐ оєНАНхНгНФ Н▒НЦоѓНАН╣НАоЃ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mНєНЦођН»НАНхНИоѓН┤Нй оЁНфНАНХНцНАН»НЙНАН« Н▒НЦоѓНАН╣НАоЃНЦођНФ оЂНИоѓоЂНАН»Не.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mНЅН░НАН╗НИН▓НЙНЦоЂ НФНХоёНХНАНбНЦођНАНбНАођ Н░НАНхН┐НХНАНбНЦођНЦНг Н▒НЦоѓНАН╣НАоЃНе:нйНХНцођНИоѓН┤ НЦНХоё НХНиНЦНг Н▒НЦН╝оёНИНЙ:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mн▒НхНй НЦођН»НИоѓНАН»НАНХ ** Н╣НФ НХНЦођНАН╝НИоѓН┤ ** Н░НАН┤НАН║НАН┐НАНйНГНАНХ Н▒НЦоѓНАН╣НАоЃНФ оЃНИНГНАођН»Н┤НАНХ оєНИоѓНХН»оЂНФНИНХНАНгНИоѓНЕНхНИоѓНХНе:
[48;2;34;34;34m[38;2;255;255;255mн┤НИоѓоё Н║НЦН┐оё НД Н░НХНАођНАНЙНИођНИоѓНЕНхНИоѓНХ НИоѓНХНЦНХНАоё Н░НАН┤НАН║НАН┐НАНйНГНАНХ Н░НАН┐Н»НИоѓНЕНхНИоѓНХНе Н▒НЦођ ┬ФCargo.toml┬╗ НЦоѓ НЙНЦођНАН░НАНиНЙНАођН»НЦоё:
[48;2;34;34;34m[38;2;255;255;255mнхНЕНЦ НАНхНй Н«ођНАНБНФођНе Н╣НФ Н║НАођНИоѓНХНАН»НИоѓН┤ Н░НАН┤НАН║НАН┐НАНйНГНАНХ НБНИођН«НАН╝НИоѓНхНЕ, НГНХНцођНИоѓН┤ НЦНХоё НХНЦођН»НАНхНАоЂНХНЦНг Н┤НФ НГНХНцНФођ:[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mНЊНИНГНАН»НЦођН║Н┤НАНХ НйНГНАНг[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mНєН║НАН┐НАН»НАНхНФНХ оєНАНхНгНФ НИоѓН▓НФНХ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mНЅоЁНБН┐НАНБНИођН«НЙНАН« Н▒НЦоѓНАН╣НАоЃНФ оЃНИНГНАођН»НИоѓН┤[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mНќНАНхНгНе НЙНАНЙНЦођ Н╣НД ┬ФJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Н▒НЦоѓНАН╣НАоЃНе, оЃНИођН▒НЦНгНИНЙ НЙНЦођНгНИоѓН«НЦНг┬Ф JSON5 ┬╗...[0m"##),
    ],
}
}

/// Language ID: hy;
/// Map name: "set";
/// Description: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "н▒НХНЙНАНЙНЦођ оєНАНхНгНФ НИоѓН▓НФНХ:");
/// ```
pub(super) const fn get_hy_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"НЊНИоЃНИНГНЙНАН« НбНИНЙНАНХНцНАН»НИоѓНЕНхНИоѓНХНе ** Н╣НФ Н║НАН░НЙНФ, оёНАНХНФ НИођ ┬Ф--sv┬╗ - Не Н╣НФ Н»НИН╣НЙНИоѓН┤:"##),
        ("new-value", r##"НєНИођ НАођНфНЦоё"##),
        ("invalid-path", r##"н▒НХНЙНАНЙНЦођ оєНАНхНгНФ НИоѓН▓НФНХ:"##),
    ],
}
}

/// Language ID: hy;
/// Map name: "set_md";
/// Description: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ;
pub(super) const fn get_hy_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mНЊНИоЃНИНГНЙНАН« НбНИНЙНАНХНцНАН»НИоѓНЕНхНИоѓНХНе ** Н╣НФ Н║НАН░НЙНФ, оёНАНХНФ НИођ ┬Ф--sv┬╗ - Не Н╣НФ Н»НИН╣НЙНИоѓН┤:[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mНєНИођ НАођНфНЦоё[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mн▒НХНЙНАНЙНЦођ оєНАНхНгНФ НИоѓН▓НФНХ:[0m"##),
    ],
}
}

/// Language ID: hy;
/// Map name: "get";
/// Description: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "НєН║НАН┐НАН»Не Н▒НЦоѓНАН╣НАоЃ");
/// ```
pub(super) const fn get_hy_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"НєН║НАН┐НАН»Не Н▒НЦоѓНАН╣НАоЃ"##),
        ("src-fmt", r##"н▒Н▓НбНхНИоѓођНФ оєНАНхНгНФ Н▒НЦоѓНАН╣НАоЃНе"##),
    ],
}
}

/// hy: Н░НАНхНЦођНЦНХ, Н░НАНхН»НАН»НАНХ, НђНАНхНАНйН┐НАНХ
pub(super) const fn get_hy_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_hy_map_conversion),
        ("get", get_hy_map_get),
        ("set_md", get_hy_map_set_md),
        ("set", get_hy_map_set),
        ("conversion_md", get_hy_map_conversion_md),
    ],
}
}

/// Language ID: id;
/// Map name: "conversion";
/// Description: Indonesia, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Gagal mendeteksi format secara otomatis.Harap tentukan secara manual.");
/// ```
pub(super) const fn get_id_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"file bukan format `json 1.0` yang valid, mencoba mengurai sebagai `json5` ..."##),
        ("not-included", r##"Biner ** ini tidak termasuk ** fungsionalitas konversi untuk format yang relevan.
Anda perlu mengaktifkan fitur yang relevan di `kargo.toml` dan kompilasi ulang.
Jika perangkat lunak ini tidak termasuk fungsionalitas yang sesuai, silakan kirimkan masalah."##),
        ("currently-supported", r##"Daftar Format yang Didukung Saat Ini:"##),
        ("unsupported", r##"konversi format yang tidak didukung"##),
        ("auto-detection-failed", r##"Gagal mendeteksi format secara otomatis.Harap tentukan secara manual."##),
        ("not-support-deser-sexp", r##"** Belum didukung **: Mengonversi dari `Lisp S-Expression` ke` format lain`"##),
        ("unknown-fmt", r##"format file yang tidak diketahui"##),
        ("not-saved", r##"konten berikut ** tidak akan ** disimpan karena `--save` tidak dipanggil."##),
        ("dst", r##"jalur file tujuan"##),
        ("conv-error", r##"kesalahan konversi"##),
    ],
}
}

/// Language ID: id;
/// Map name: "conversion_md";
/// Description: Indonesia, Latin, Indonesia;
pub(super) const fn get_id_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mfile bukan format [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m yang valid, mencoba mengurai sebagai [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBiner ** ini tidak termasuk ** fungsionalitas konversi untuk format yang relevan.
[48;2;34;34;34m[38;2;255;255;255mAnda perlu mengaktifkan fitur yang relevan di [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mkargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m dan kompilasi ulang.
[48;2;34;34;34m[38;2;255;255;255mJika perangkat lunak ini tidak termasuk fungsionalitas yang sesuai, silakan kirimkan masalah.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mDaftar Format yang Didukung Saat Ini:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mkonversi format yang tidak didukung[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mGagal mendeteksi format secara otomatis.Harap tentukan secara manual.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Belum didukung [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Mengonversi dari [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ke[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m format lain[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mformat file yang tidak diketahui[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mkonten berikut ** tidak akan ** disimpan karena [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m tidak dipanggil.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mjalur file tujuan[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mkesalahan konversi[0m"##),
    ],
}
}

/// Language ID: id;
/// Map name: "set";
/// Description: Indonesia, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "path file tidak valid.");
/// ```
pub(super) const fn get_id_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"konten yang dimodifikasi ** tidak akan ** disimpan karena `--sv` tidak dipanggil."##),
        ("new-value", r##"nilai baru"##),
        ("invalid-path", r##"path file tidak valid."##),
    ],
}
}

/// Language ID: id;
/// Map name: "set_md";
/// Description: Indonesia, Latin, Indonesia;
pub(super) const fn get_id_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mkonten yang dimodifikasi ** tidak akan ** disimpan karena [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m tidak dipanggil.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnilai baru[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mpath file tidak valid.[0m"##),
    ],
}
}

/// Language ID: id;
/// Map name: "get";
/// Description: Indonesia, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format tujuan");
/// ```
pub(super) const fn get_id_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format tujuan"##),
        ("src-fmt", r##"Format file sumber"##),
    ],
}
}

/// id: Indonesia, Latin, Indonesia
pub(super) const fn get_id_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_id_map_conversion),
        ("get", get_id_map_get),
        ("set_md", get_id_map_set_md),
        ("set", get_id_map_set),
        ("conversion_md", get_id_map_conversion_md),
    ],
}
}

/// Language ID: ig;
/// Map name: "conversion";
/// Description: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Agbalaghр╗І aka р╗Іchр╗Їpр╗Цta usoro ahр╗Ц.Biko jiri aka dee ya.");
/// ```
pub(super) const fn get_ig_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"Ntughari njehie"##),
        ("not-support-deser-sexp", r##"**Not supported yet**: converting from `Lisp S-Expression` to `other formats`"##),
        ("dst", r##"Abinced faр╗Іlр╗Ц"##),
        ("unsupported", r##"Ntughari Usoro akwadoghр╗І"##),
        ("auto-detection-failed", r##"Agbalaghр╗І aka р╗Іchр╗Їpр╗Цta usoro ahр╗Ц.Biko jiri aka dee ya."##),
        ("currently-supported", r##"Ederede ndepр╗Цta aha:"##),
        ("not-included", r##"р╗їnр╗Цр╗Їgр╗Ц abр╗Цр╗Ї a na-etinyeghр╗І ** n 'arр╗Цmр╗Їrр╗Ц ntр╗Цgharр╗І maka usoro dр╗І mkpa.
Ikwesiri ime ka njirimara dр╗І mkpa na gр╗І 'Cargo.toml' na recompile.
р╗ї bр╗Цrр╗Ц na ngwanrр╗Ї a agunyeghр╗І arр╗Цmр╗Їrр╗Ц kwekр╗Їrр╗Ї na ya, biko nyefee okwu."##),
        ("unknown-fmt", r##"Usoro faр╗Іlр╗Ц a na-amaghр╗І"##),
    ],
}
}

/// Language ID: ig;
/// Map name: "conversion_md";
/// Description: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa;
pub(super) const fn get_ig_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mNtughari njehie[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mNot supported yet[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: converting from [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m to [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mother formats[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mAbinced faр╗Іlр╗Ц[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNtughari Usoro akwadoghр╗І[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mAgbalaghр╗І aka р╗Іchр╗Їpр╗Цta usoro ahр╗Ц.Biko jiri aka dee ya.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mEderede ndepр╗Цta aha:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mр╗їnр╗Цр╗Їgр╗Ц abр╗Цр╗Ї a na-etinyeghр╗І ** n 'arр╗Цmр╗Їrр╗Ц ntр╗Цgharр╗І maka usoro dр╗І mkpa.
[48;2;34;34;34m[38;2;255;255;255mIkwesiri ime ka njirimara dр╗І mkpa na gр╗І 'Cargo.toml' na recompile.
[48;2;34;34;34m[38;2;255;255;255mр╗ї bр╗Цrр╗Ц na ngwanrр╗Ї a agunyeghр╗І arр╗Цmр╗Їrр╗Ц kwekр╗Їrр╗Ї na ya, biko nyefee okwu.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUsoro faр╗Іlр╗Ц a na-amaghр╗І[0m"##),
    ],
}
}

/// Language ID: ig;
/// Map name: "set";
/// Description: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Forthzр╗Ї faр╗Іlр╗Ц ezighi ezi.");
/// ```
pub(super) const fn get_ig_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Agaghр╗І echekwa р╗Їdр╗Іnaya ***** Azoputaghi n'ihi na aghi."##),
        ("new-value", r##"Uru р╗Їhр╗Цrр╗Ц"##),
        ("invalid-path", r##"Forthzр╗Ї faр╗Іlр╗Ц ezighi ezi."##),
    ],
}
}

/// Language ID: ig;
/// Map name: "set_md";
/// Description: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa;
pub(super) const fn get_ig_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mAgaghр╗І echekwa р╗Їdр╗Іnaya ***** Azoputaghi n'ihi na aghi.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mUru р╗Їhр╗Цrр╗Ц[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mForthzр╗Ї faр╗Іlр╗Ц ezighi ezi.[0m"##),
    ],
}
}

/// Language ID: ig;
/// Map name: "get";
/// Description: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Usoro р╗І ga-aga");
/// ```
pub(super) const fn get_ig_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Usoro р╗І ga-aga"##),
        ("src-fmt", r##"Usoro faili faр╗Іlр╗Ц"##),
    ],
}
}

/// ig: Igbo, Latin, Naр╗Іjр╗Іrр╗Іa
pub(super) const fn get_ig_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ig_map_conversion),
        ("get", get_ig_map_get),
        ("set_md", get_ig_map_set_md),
        ("set", get_ig_map_set),
        ("conversion_md", get_ig_map_conversion_md),
    ],
}
}

/// Language ID: is;
/// Map name: "conversion";
/// Description: ├Гslenska, latneskt, ├Їsland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "t├│kst ekki a├░ greina sni├░i├░ sj├Аlfkrafa.Vinsamlegast tilgreindu handvirkt.");
/// ```
pub(super) const fn get_is_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Skr├Аin er ekki gilt `json 1.0` sni├░, a├░ reyna a├░ flokka sem `json5` ..."##),
        ("not-included", r##"├ъessi tv├Хfaldur ** felur ekki ├Г s├Еr ** umbreytingarvirkni fyrir vi├░komandi sni├░.
├ъ├║ ver├░ur a├░ virkja vi├░eigandi eiginleika ├Г `Cargo.Toml` og Rethopile.
Ef ├Йessi hugb├║na├░ur felur ekki ├Г s├Еr samsvarandi virkni, vinsamlegast sendu m├Аl."##),
        ("currently-supported", r##"N├║ er studdur sni├░slisti:"##),
        ("unsupported", r##"├Њstudd umbreyting ├А sni├░i"##),
        ("auto-detection-failed", r##"t├│kst ekki a├░ greina sni├░i├░ sj├Аlfkrafa.Vinsamlegast tilgreindu handvirkt."##),
        ("not-support-deser-sexp", r##"** Ekki studd enn **: umbreyta ├║r `lisp s-expression` ├Г` ├Хnnur sni├░`"##),
        ("unknown-fmt", r##"├Њ├Йekkt skr├Аarsni├░"##),
        ("not-saved", r##"Eftirfarandi efni ** ver├░ur ekki ** vista├░ vegna ├Йess a├░ `--save` var ekki kalla├░."##),
        ("dst", r##"Destination File Path"##),
        ("conv-error", r##"umbreytingarvilla"##),
    ],
}
}

/// Language ID: is;
/// Map name: "conversion_md";
/// Description: ├Гslenska, latneskt, ├Їsland;
pub(super) const fn get_is_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mSkr├Аin er ekki gilt [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m sni├░, a├░ reyna a├░ flokka sem [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m├ъessi tv├Хfaldur ** felur ekki ├Г s├Еr ** umbreytingarvirkni fyrir vi├░komandi sni├░.
[48;2;34;34;34m[38;2;255;255;255m├ъ├║ ver├░ur a├░ virkja vi├░eigandi eiginleika ├Г [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m og Rethopile.
[48;2;34;34;34m[38;2;255;255;255mEf ├Йessi hugb├║na├░ur felur ekki ├Г s├Еr samsvarandi virkni, vinsamlegast sendu m├Аl.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mN├║ er studdur sni├░slisti:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255m├Њstudd umbreyting ├А sni├░i[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mt├│kst ekki a├░ greina sni├░i├░ sj├Аlfkrafa.Vinsamlegast tilgreindu handvirkt.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Ekki studd enn [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: umbreyta ├║r [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ├Г[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ├Хnnur sni├░[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m├Њ├Йekkt skr├Аarsni├░[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mEftirfarandi efni ** ver├░ur ekki ** vista├░ vegna ├Йess a├░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m var ekki kalla├░.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestination File Path[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mumbreytingarvilla[0m"##),
    ],
}
}

/// Language ID: is;
/// Map name: "set";
/// Description: ├Гslenska, latneskt, ├Їsland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "├Њgild skr├Аarsl├│├░.");
/// ```
pub(super) const fn get_is_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Breytt efni ** ver├░ur ekki ** vista├░ vegna ├Йess a├░ `--sv` var ekki kalla├░."##),
        ("new-value", r##"n├йtt gildi"##),
        ("invalid-path", r##"├Њgild skr├Аarsl├│├░."##),
    ],
}
}

/// Language ID: is;
/// Map name: "set_md";
/// Description: ├Гslenska, latneskt, ├Їsland;
pub(super) const fn get_is_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mBreytt efni ** ver├░ur ekki ** vista├░ vegna ├Йess a├░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m var ekki kalla├░.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mn├йtt gildi[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m├Њgild skr├Аarsl├│├░.[0m"##),
    ],
}
}

/// Language ID: is;
/// Map name: "get";
/// Description: ├Гslenska, latneskt, ├Їsland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "├Ђfangasta├░");
/// ```
pub(super) const fn get_is_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"├Ђfangasta├░"##),
        ("src-fmt", r##"Upprunalega skr├Аarsni├░"##),
    ],
}
}

/// is: ├Гslenska, latneskt, ├Їsland
pub(super) const fn get_is_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_is_map_conversion),
        ("get", get_is_map_get),
        ("set_md", get_is_map_set_md),
        ("set", get_is_map_set),
        ("conversion_md", get_is_map_conversion_md),
    ],
}
}

/// Language ID: it;
/// Map name: "conversion";
/// Description: italiano, latino, Italia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Impossibile rilevare automaticamente il formato.Si prega di specificare manualmente.");
/// ```
pub(super) const fn get_it_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Il file non ├е un formato `json 1.0` valido, cercando di analizzare come `json5` ..."##),
        ("not-included", r##"Questo binario ** non include ** la funzionalit├а di conversione per il formato pertinente.
├ѕ necessario abilitare la funzione pertinente nel tuo `Cargo.toml` e ricompilare.
Se questo software non include la funzionalit├а corrispondente, si prega di inviare un problema."##),
        ("currently-supported", r##"Elenco dei formati attualmente supportati:"##),
        ("unsupported", r##"conversione del formato non supportato"##),
        ("auto-detection-failed", r##"Impossibile rilevare automaticamente il formato.Si prega di specificare manualmente."##),
        ("not-support-deser-sexp", r##"** Non ancora supportato **: conversione da `lisp s-espression` in` altri formati`"##),
        ("unknown-fmt", r##"formato di file sconosciuto"##),
        ("not-saved", r##"Il seguente contenuto ** non verr├а risparmiato perch├Е `--save` non ├е stato chiamato."##),
        ("dst", r##"percorso del file di destinazione"##),
        ("conv-error", r##"Errore di conversione"##),
    ],
}
}

/// Language ID: it;
/// Map name: "conversion_md";
/// Description: italiano, latino, Italia;
pub(super) const fn get_it_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mIl file non ├е un formato [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m valido, cercando di analizzare come [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mQuesto binario ** non include ** la funzionalit├а di conversione per il formato pertinente.
[48;2;34;34;34m[38;2;255;255;255m├ѕ necessario abilitare la funzione pertinente nel tuo [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m e ricompilare.
[48;2;34;34;34m[38;2;255;255;255mSe questo software non include la funzionalit├а corrispondente, si prega di inviare un problema.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mElenco dei formati attualmente supportati:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mconversione del formato non supportato[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mImpossibile rilevare automaticamente il formato.Si prega di specificare manualmente.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Non ancora supportato [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: conversione da [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-espression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m in[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m altri formati[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mformato di file sconosciuto[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mIl seguente contenuto ** non verr├а risparmiato perch├Е [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m non ├е stato chiamato.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mpercorso del file di destinazione[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mErrore di conversione[0m"##),
    ],
}
}

/// Language ID: it;
/// Map name: "set";
/// Description: italiano, latino, Italia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Percorso del file non valido.");
/// ```
pub(super) const fn get_it_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Il contenuto modificato ** non verr├а salvato ** perch├Е `--sv` non ├е stato chiamato."##),
        ("new-value", r##"Nuovo valore"##),
        ("invalid-path", r##"Percorso del file non valido."##),
    ],
}
}

/// Language ID: it;
/// Map name: "set_md";
/// Description: italiano, latino, Italia;
pub(super) const fn get_it_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mIl contenuto modificato ** non verr├а salvato ** perch├Е [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m non ├е stato chiamato.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNuovo valore[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mPercorso del file non valido.[0m"##),
    ],
}
}

/// Language ID: it;
/// Map name: "get";
/// Description: italiano, latino, Italia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Formato di destinazione");
/// ```
pub(super) const fn get_it_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Formato di destinazione"##),
        ("src-fmt", r##"Formato del file di origine"##),
    ],
}
}

/// it: italiano, latino, Italia
pub(super) const fn get_it_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_it_map_conversion),
        ("get", get_it_map_get),
        ("set_md", get_it_map_set_md),
        ("set", get_it_map_set),
        ("conversion_md", get_it_map_conversion_md),
    ],
}
}

/// Language ID: ja;
/// Map name: "conversion";
/// Description: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "УЄфтІЋсЃЋсѓЕсЃ╝сЃъсЃЃсЃѕТцютЄ║сЂїтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪсђѓТЅІтІЋсЂДТїЄт«џсЂЌсЂдсЂЈсЂасЂЋсЂёсђѓ");
/// ```
pub(super) const fn get_ja_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"сЃЋсѓАсѓцсЃФсЂї `json 1.0` тйбт╝ЈсЂДсЂ»сЂѓсѓісЂЙсЂЏсѓЊсђѓ`json5`тйбт╝ЈсЂесЂЌсЂдУДБТъљсѓњУЕдсЂ┐сЂдсЂёсЂЙсЂЎ..."##),
        ("not-included", r##"сЂЊсЂ«сЃљсѓцсЃісЃфсЂФсЂ»сђЂжќбжђБсЂЎсѓІтйбт╝ЈсЂ«тцЅТЈЏТЕЪУЃйсЂї**тљФсЂЙсѓїсЂдсЂёсЂЙсЂЏсѓЊ**сђѓ
жќбжђБсЂЎсѓІТЕЪУЃйсѓњ `Cargo.toml` сЂДТюЅті╣сЂФсЂЌсђЂтєЇсѓ│сЃ│сЃЉсѓцсЃФсЂЎсѓІт┐ЁУдЂсЂїсЂѓсѓісЂЙсЂЎсђѓ
сЂЊсЂ«сѓйсЃЋсЃѕсѓдсѓДсѓбсЂФжќбжђБТЕЪУЃйсЂїтљФсЂЙсѓїсЂдсЂёсЂфсЂёта┤тљѕсђЂтЋЈжАїсѓњта▒тЉісЂЌсЂдсЂЈсЂасЂЋсЂёсђѓ"##),
        ("currently-supported", r##"уЈЙтюесѓхсЃЮсЃ╝сЃѕсЂЋсѓїсЂдсЂёсѓІсЃЋсѓЕсЃ╝сЃъсЃЃсЃѕ"##),
        ("unsupported", r##"Тюфт»Йт┐юсЂ«тйбт╝ЈтцЅТЈЏ"##),
        ("auto-detection-failed", r##"УЄфтІЋсЃЋсѓЕсЃ╝сЃъсЃЃсЃѕТцютЄ║сЂїтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪсђѓТЅІтІЋсЂДТїЄт«џсЂЌсЂдсЂЈсЂасЂЋсЂёсђѓ"##),
        ("not-support-deser-sexp", r##"`Lisp S-Expression` сѓњС╗ќсЂ«тйбт╝ЈсЂФтцЅТЈЏсЂЎсѓІсЂЊсЂесЂ»уЈЙтюесѓхсЃЮсЃ╝сЃѕсЂЋсѓїсЂдсЂёсЂЙсЂЏсѓЊсђѓ"##),
        ("unknown-fmt", r##"СИЇТўјсЂфсЃЋсѓАсѓцсЃФтйбт╝Ј"##),
        ("not-saved", r##"`--save`сЂїтЉ╝сЂ│тЄ║сЂЋсѓїсЂфсЂІсЂБсЂЪсЂЪсѓЂсђЂС╗ЦСИІсЂ«тєЁт«╣сЂ»**С┐ЮтГўсЂЋсѓїсЂЙсЂЏсѓЊ**№╝џ"##),
        ("dst", r##"тЄ║тіЏсЃЋсѓАсѓцсЃФсЃЉсѓ╣"##),
        ("conv-error", r##"тцЅТЈЏсѓесЃЕсЃ╝"##),
    ],
}
}

/// Language ID: ja;
/// Map name: "conversion_md";
/// Description: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг;
pub(super) const fn get_ja_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mсЃЋсѓАсѓцсЃФсЂї [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m тйбт╝ЈсЂДсЂ»сЂѓсѓісЂЙсЂЏсѓЊсђѓ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mтйбт╝ЈсЂесЂЌсЂдУДБТъљсѓњУЕдсЂ┐сЂдсЂёсЂЙсЂЎ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mсЂЊсЂ«сЃљсѓцсЃісЃфсЂФсЂ»сђЂжќбжђБсЂЎсѓІтйбт╝ЈсЂ«тцЅТЈЏТЕЪУЃйсЂї[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mтљФсЂЙсѓїсЂдсЂёсЂЙсЂЏсѓЊ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mсђѓ
[48;2;34;34;34m[38;2;255;255;255mжќбжђБсЂЎсѓІТЕЪУЃйсѓњ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m сЂДТюЅті╣сЂФсЂЌсђЂтєЇсѓ│сЃ│сЃЉсѓцсЃФсЂЎсѓІт┐ЁУдЂсЂїсЂѓсѓісЂЙсЂЎсђѓ
[48;2;34;34;34m[38;2;255;255;255mсЂЊсЂ«сѓйсЃЋсЃѕсѓдсѓДсѓбсЂФжќбжђБТЕЪУЃйсЂїтљФсЂЙсѓїсЂдсЂёсЂфсЂёта┤тљѕсђЂтЋЈжАїсѓњта▒тЉісЂЌсЂдсЂЈсЂасЂЋсЂёсђѓ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mуЈЙтюесѓхсЃЮсЃ╝сЃѕсЂЋсѓїсЂдсЂёсѓІсЃЋсѓЕсЃ╝сЃъсЃЃсЃѕ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mТюфт»Йт┐юсЂ«тйбт╝ЈтцЅТЈЏ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mУЄфтІЋсЃЋсѓЕсЃ╝сЃъсЃЃсЃѕТцютЄ║сЂїтц▒ТЋЌсЂЌсЂЙсЂЌсЂЪсђѓТЅІтІЋсЂДТїЄт«џсЂЌсЂдсЂЈсЂасЂЋсЂёсђѓ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m сѓњС╗ќсЂ«тйбт╝ЈсЂФтцЅТЈЏсЂЎсѓІсЂЊсЂесЂ»уЈЙтюесѓхсЃЮсЃ╝сЃѕсЂЋсѓїсЂдсЂёсЂЙсЂЏсѓЊсђѓ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mСИЇТўјсЂфсЃЋсѓАсѓцсЃФтйбт╝Ј[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mсЂїтЉ╝сЂ│тЄ║сЂЋсѓїсЂфсЂІсЂБсЂЪсЂЪсѓЂсђЂС╗ЦСИІсЂ«тєЁт«╣сЂ»[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mС┐ЮтГўсЂЋсѓїсЂЙсЂЏсѓЊ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m№╝џ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mтЄ║тіЏсЃЋсѓАсѓцсЃФсЃЉсѓ╣[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mтцЅТЈЏсѓесЃЕсЃ╝[0m"##),
    ],
}
}

/// Language ID: ja;
/// Map name: "get";
/// Description: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "тЄ║тіЏтйбт╝Ј");
/// ```
pub(super) const fn get_ja_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"тЄ║тіЏтйбт╝Ј"##),
        ("src-fmt", r##"сѓйсЃ╝сѓ╣тйбт╝Ј"##),
    ],
}
}

/// Language ID: ja;
/// Map name: "set";
/// Description: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "уёАті╣сЂфсЃЋсѓАсѓцсЃФсЃЉсѓ╣");
/// ```
pub(super) const fn get_ja_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"уёАті╣сЂфсЃЋсѓАсѓцсЃФсЃЉсѓ╣"##),
        ("new-value", r##"Тќ░сЂЌсЂётђц"##),
        ("unsave-warn", r##"`--save`сЂїтЉ╝сЂ│тЄ║сЂЋсѓїсЂфсЂІсЂБсЂЪсЂЪсѓЂсђЂтцЅТЏ┤тєЁт«╣сЂ»**С┐ЮтГўсЂЋсѓїсЂЙсЂЏсѓЊ**сђѓ"##),
        ("type", r##"тъІ"##),
    ],
}
}

/// Language ID: ja;
/// Map name: "set_md";
/// Description: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг;
pub(super) const fn get_ja_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mуёАті╣сЂфсЃЋсѓАсѓцсЃФсЃЉсѓ╣[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mТќ░сЂЌсЂётђц[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mсЂїтЉ╝сЂ│тЄ║сЂЋсѓїсЂфсЂІсЂБсЂЪсЂЪсѓЂсђЂтцЅТЏ┤тєЁт«╣сЂ»[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mС┐ЮтГўсЂЋсѓїсЂЙсЂЏсѓЊ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255mсђѓ[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mтъІ[0m"##),
    ],
}
}

/// ja: ТЌЦТюгУфъ, ТЌЦТюгУфъсЂ«ТќЄтГЌ, ТЌЦТюг
pub(super) const fn get_ja_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ja_map_conversion),
        ("get", get_ja_map_get),
        ("set_md", get_ja_map_set_md),
        ("set", get_ja_map_set),
        ("conversion_md", get_ja_map_conversion_md),
    ],
}
}

/// Language ID: jw;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Gagal kanthi otomatis ndeteksi format kasebut.Mangga nemtokake kanthi manual.");
/// ```
pub(super) const fn get_jw_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** Ora Didhukung **: Ngonversi saka `lisp s-expression` to` Format liyane"##),
        ("unknown-fmt", r##"Formulir file sing ora dingerteni"##),
        ("currently-supported", r##"Daftar Format sing didhukung:"##),
        ("auto-detection-failed", r##"Gagal kanthi otomatis ndeteksi format kasebut.Mangga nemtokake kanthi manual."##),
        ("not-included", r##"BINARI BINARI iki ora kalebu ** fungsionalitas konversi kanggo format sing gegandhengan.
Sampeyan kudu ngaktifake fitur sing relevan ing 'kargotom sampeyan lan mbalek maneh.
Yen piranti lunak iki ora kalebu fungsi sing cocog, kirimake masalah."##),
        ("conv-error", r##"Konversi Kesalahan"##),
        ("dst", r##"Jalur file tujuan"##),
        ("unsupported", r##"konversi format sing ora didhukung"##),
        ("invalid-json1.0", r##"File dudu format dudu sing bener `Json 1.0`, nyoba parse minangka ... json5`"##),
    ],
}
}

/// Language ID: jw;
/// Map name: "conversion_md";
pub(super) const fn get_jw_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Ora Didhukung [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Ngonversi saka [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m to[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Format liyane[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormulir file sing ora dingerteni[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mDaftar Format sing didhukung:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mGagal kanthi otomatis ndeteksi format kasebut.Mangga nemtokake kanthi manual.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBINARI BINARI iki ora kalebu ** fungsionalitas konversi kanggo format sing gegandhengan.
[48;2;34;34;34m[38;2;255;255;255mSampeyan kudu ngaktifake fitur sing relevan ing 'kargotom sampeyan lan mbalek maneh.
[48;2;34;34;34m[38;2;255;255;255mYen piranti lunak iki ora kalebu fungsi sing cocog, kirimake masalah.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonversi Kesalahan[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mJalur file tujuan[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mkonversi format sing ora didhukung[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFile dudu format dudu sing bener [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, nyoba parse minangka ... json5[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
    ],
}
}

/// Language ID: jw;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Dalan file sing ora bener.");
/// ```
pub(super) const fn get_jw_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Konten sing wis diowahi ** Dadi ** disimpen amarga `--sv` ora diarani."##),
        ("new-value", r##"Nilai Anyar"##),
        ("invalid-path", r##"Dalan file sing ora bener."##),
    ],
}
}

/// Language ID: jw;
/// Map name: "set_md";
pub(super) const fn get_jw_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mKonten sing wis diowahi ** Dadi ** disimpen amarga [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ora diarani.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNilai Anyar[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mDalan file sing ora bener.[0m"##),
    ],
}
}

/// Language ID: jw;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format tujuan");
/// ```
pub(super) const fn get_jw_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format tujuan"##),
        ("src-fmt", r##"Format File Sumber"##),
    ],
}
}

/// jw: jw-Latn-ID
pub(super) const fn get_jw_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_jw_map_conversion),
        ("get", get_jw_map_get),
        ("set_md", get_jw_map_set_md),
        ("set", get_jw_map_set),
        ("conversion_md", get_jw_map_conversion_md),
    ],
}
}

/// Language ID: ka;
/// Map name: "conversion";
/// Description: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "рЃЋрЃћрЃа рЃЏрЃЮрЃ«рЃћрЃарЃ«рЃЊрЃљ рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃА рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃљрЃЊ рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃћрЃюрЃљ.рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ рЃЏрЃўрЃБрЃЌрЃўрЃЌрЃЮрЃЌ рЃ«рЃћрЃџрЃўрЃЌ.");
/// ```
pub(super) const fn get_ka_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 5),
        (5, 0),
    ],
    entries: &[
        ("conv-error", r##"рЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ"##),
        ("unknown-fmt", r##"рЃБрЃфрЃюрЃЮрЃЉрЃў рЃцрЃљрЃўрЃџрЃўрЃА рЃцрЃЮрЃарЃЏрЃљрЃбрЃў"##),
        ("auto-detection-failed", r##"рЃЋрЃћрЃа рЃЏрЃЮрЃ«рЃћрЃарЃ«рЃЊрЃљ рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃА рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃљрЃЊ рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃћрЃюрЃљ.рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ рЃЏрЃўрЃБрЃЌрЃўрЃЌрЃЮрЃЌ рЃ«рЃћрЃџрЃўрЃЌ."##),
        ("currently-supported", r##"рЃљрЃЏрЃЪрЃљрЃЏрЃљрЃЊ рЃЏрЃ«рЃљрЃарЃЊрЃљрЃГрЃћрЃарЃўрЃџрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃА рЃАрЃўрЃљ:"##),
        ("dst", r##"рЃЊрЃљрЃюрЃўрЃерЃюрЃБрЃџрЃћрЃЉрЃўрЃА рЃцрЃљрЃўрЃџрЃўрЃА рЃњрЃќрЃљ"##),
        ("unsupported", r##"рЃЊрЃљрЃБрЃАрЃљрЃЉрЃБрЃЌрЃћрЃЉрЃћрЃџрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃА рЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃљ"##),
        ("not-included", r##"рЃћрЃА рЃЮрЃарЃЮрЃЉрЃўрЃЌрЃў ** рЃљрЃа рЃерЃћрЃўрЃфрЃљрЃЋрЃА ** рЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃўрЃА рЃцрЃБрЃюрЃЦрЃфрЃўрЃЮрЃюрЃўрЃарЃћрЃЉрЃљрЃА рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃАрЃЌрЃЋрЃўрЃА.
рЃЌрЃЦрЃЋрЃћрЃю рЃБрЃюрЃЊрЃљ рЃЕрЃљрЃарЃЌрЃЮрЃЌ рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃЌрЃЦрЃЋрЃћрЃюрЃА `Cargo.toml` рЃЊрЃљ рЃљрЃюрЃљрЃќрЃдрЃљрЃБрЃарЃћрЃЉрЃљ.
рЃЌрЃБ рЃћрЃА рЃърЃарЃЮрЃњрЃарЃљрЃЏрЃљ рЃљрЃа рЃерЃћрЃўрЃфрЃљрЃЋрЃА рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃА рЃцрЃБрЃюрЃЦрЃфрЃўрЃЮрЃюрЃўрЃарЃћрЃЉрЃљрЃА, рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ, рЃгрЃљрЃарЃБрЃЊрЃњрЃўрЃюрЃЮрЃЌ рЃАрЃљрЃЎрЃўрЃЌрЃ«рЃў."##),
        ("not-saved", r##"рЃерЃћрЃЏрЃЊрЃћрЃњрЃў рЃерЃўрЃюрЃљрЃљрЃарЃАрЃў ** рЃљрЃа рЃерЃћрЃўрЃюрЃљрЃ«рЃћрЃЉрЃљ, рЃарЃљрЃЊрЃњрЃљрЃю `--save` рЃљрЃа рЃЊрЃљрЃБрЃарЃћрЃЎрЃћрЃА."##),
    ],
}
}

/// Language ID: ka;
/// Map name: "conversion_md";
/// Description: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ;
pub(super) const fn get_ka_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 5),
        (5, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mрЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃўрЃА рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mрЃБрЃфрЃюрЃЮрЃЉрЃў рЃцрЃљрЃўрЃџрЃўрЃА рЃцрЃЮрЃарЃЏрЃљрЃбрЃў[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mрЃЋрЃћрЃа рЃЏрЃЮрЃ«рЃћрЃарЃ«рЃЊрЃљ рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃА рЃљрЃЋрЃбрЃЮрЃЏрЃљрЃбрЃБрЃарЃљрЃЊ рЃњрЃљрЃЏрЃЮрЃЋрЃџрЃћрЃюрЃљ.рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ рЃЏрЃўрЃБрЃЌрЃўрЃЌрЃЮрЃЌ рЃ«рЃћрЃџрЃўрЃЌ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mрЃљрЃЏрЃЪрЃљрЃЏрЃљрЃЊ рЃЏрЃ«рЃљрЃарЃЊрЃљрЃГрЃћрЃарЃўрЃџрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃА рЃАрЃўрЃљ:[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mрЃЊрЃљрЃюрЃўрЃерЃюрЃБрЃџрЃћрЃЉрЃўрЃА рЃцрЃљрЃўрЃџрЃўрЃА рЃњрЃќрЃљ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mрЃЊрЃљрЃБрЃАрЃљрЃЉрЃБрЃЌрЃћрЃЉрЃћрЃџрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃА рЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃљ[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mрЃћрЃА рЃЮрЃарЃЮрЃЉрЃўрЃЌрЃў ** рЃљрЃа рЃерЃћрЃўрЃфрЃљрЃЋрЃА ** рЃЎрЃЮрЃюрЃЋрЃћрЃарЃбрЃљрЃфрЃўрЃўрЃА рЃцрЃБрЃюрЃЦрЃфрЃўрЃЮрЃюрЃўрЃарЃћрЃЉрЃљрЃА рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃцрЃЮрЃарЃЏрЃљрЃбрЃўрЃАрЃЌрЃЋрЃўрЃА.
[48;2;34;34;34m[38;2;255;255;255mрЃЌрЃЦрЃЋрЃћрЃю рЃБрЃюрЃЊрЃљ рЃЕрЃљрЃарЃЌрЃЮрЃЌ рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃАрЃў рЃцрЃБрЃюрЃЦрЃфрЃўрЃљ рЃЌрЃЦрЃЋрЃћрЃюрЃА [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m рЃЊрЃљ рЃљрЃюрЃљрЃќрЃдрЃљрЃБрЃарЃћрЃЉрЃљ.
[48;2;34;34;34m[38;2;255;255;255mрЃЌрЃБ рЃћрЃА рЃърЃарЃЮрЃњрЃарЃљрЃЏрЃљ рЃљрЃа рЃерЃћрЃўрЃфрЃљрЃЋрЃА рЃерЃћрЃАрЃљрЃЉрЃљрЃЏрЃўрЃА рЃцрЃБрЃюрЃЦрЃфрЃўрЃЮрЃюрЃўрЃарЃћрЃЉрЃљрЃА, рЃњрЃЌрЃ«рЃЮрЃЋрЃЌ, рЃгрЃљрЃарЃБрЃЊрЃњрЃўрЃюрЃЮрЃЌ рЃАрЃљрЃЎрЃўрЃЌрЃ«рЃў.[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mрЃерЃћрЃЏрЃЊрЃћрЃњрЃў рЃерЃўрЃюрЃљрЃљрЃарЃАрЃў ** рЃљрЃа рЃерЃћрЃўрЃюрЃљрЃ«рЃћрЃЉрЃљ, рЃарЃљрЃЊрЃњрЃљрЃю [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m рЃљрЃа рЃЊрЃљрЃБрЃарЃћрЃЎрЃћрЃА.[0m"##),
    ],
}
}

/// Language ID: ka;
/// Map name: "set";
/// Description: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "рЃљрЃарЃљрЃАрЃгрЃЮрЃарЃў рЃцрЃљрЃўрЃџрЃўрЃА рЃњрЃќрЃљ.");
/// ```
pub(super) const fn get_ka_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"рЃерЃћрЃфрЃЋрЃџрЃўрЃџрЃў рЃерЃўрЃюрЃљрЃљрЃарЃАрЃў ** рЃљрЃа рЃерЃћрЃўрЃюрЃљрЃ«рЃћрЃЉрЃљ, рЃарЃљрЃЊрЃњрЃљрЃю `РђЊ-sv` рЃљрЃа рЃЊрЃљрЃБрЃарЃћрЃЎрЃћрЃА."##),
        ("new-value", r##"рЃљрЃ«рЃљрЃџрЃў рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ"##),
        ("invalid-path", r##"рЃљрЃарЃљрЃАрЃгрЃЮрЃарЃў рЃцрЃљрЃўрЃџрЃўрЃА рЃњрЃќрЃљ."##),
    ],
}
}

/// Language ID: ka;
/// Map name: "set_md";
/// Description: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ;
pub(super) const fn get_ka_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mрЃерЃћрЃфрЃЋрЃџрЃўрЃџрЃў рЃерЃўрЃюрЃљрЃљрЃарЃАрЃў ** рЃљрЃа рЃерЃћрЃўрЃюрЃљрЃ«рЃћрЃЉрЃљ, рЃарЃљрЃЊрЃњрЃљрЃю [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mРђЊ-sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m рЃљрЃа рЃЊрЃљрЃБрЃарЃћрЃЎрЃћрЃА.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mрЃљрЃ«рЃљрЃџрЃў рЃЏрЃюрЃўрЃерЃЋрЃюрЃћрЃџрЃЮрЃЉрЃљ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mрЃљрЃарЃљрЃАрЃгрЃЮрЃарЃў рЃцрЃљрЃўрЃџрЃўрЃА рЃњрЃќрЃљ.[0m"##),
    ],
}
}

/// Language ID: ka;
/// Map name: "get";
/// Description: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "рЃЊрЃљрЃюрЃўрЃерЃюрЃБрЃџрЃћрЃЉрЃўрЃА рЃцрЃЮрЃарЃЏрЃљрЃбрЃў");
/// ```
pub(super) const fn get_ka_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"рЃЊрЃљрЃюрЃўрЃерЃюрЃБрЃџрЃћрЃЉрЃўрЃА рЃцрЃЮрЃарЃЏрЃљрЃбрЃў"##),
        ("src-fmt", r##"рЃгрЃДрЃљрЃарЃЮрЃА рЃцрЃљрЃўрЃџрЃўрЃА рЃцрЃЮрЃарЃЏрЃљрЃбрЃў"##),
    ],
}
}

/// ka: рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃЦрЃљрЃарЃЌрЃБрЃџрЃў, рЃАрЃљрЃЦрЃљрЃарЃЌрЃЋрЃћрЃџрЃЮ
pub(super) const fn get_ka_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ka_map_conversion),
        ("get", get_ka_map_get),
        ("set_md", get_ka_map_set_md),
        ("set", get_ka_map_set),
        ("conversion_md", get_ka_map_conversion_md),
    ],
}
}

/// Language ID: kk;
/// Map name: "conversion";
/// Description: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "л┐ЛќЛѕЛќл╝Лќлй л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІ Лѓм»Лђл┤лх л░лйЛІмЏЛѓл░л╣ л░л╗л╝л░л┤ЛІ.мџлЙл╗л╝лхлй л║МЕЛђЛЂлхЛѓЛќмБЛќли.");
/// ```
pub(super) const fn get_kk_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** мЏлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗л╝лхл╣л┤Лќ **: `LISP S-МЕЛђлйлхл│Лќлйлхлй` л▒л░ЛЂмЏл░ ЛёлЙЛђл╝л░ЛѓЛѓл░ЛђмЊл░ Лѓм»Лђл╗лхлйл┤ЛќЛђЛЃ"##),
        ("unknown-fmt", r##"лЉлхл╗л│ЛќЛЂЛќли Лёл░л╣л╗ л┐ЛќЛѕЛќл╝Лќлй Лѓл░мБл┤л░мБЛІли"##),
        ("currently-supported", r##"мџл░лиЛќЛђл│Лќ ЛЃл░мЏЛІЛѓЛѓл░ мЏлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗лхЛѓЛќлй ЛёлЙЛђл╝л░ЛѓЛѓл░Лђ ЛѓЛќлиЛќл╝Лќ:"##),
        ("auto-detection-failed", r##"л┐ЛќЛѕЛќл╝Лќлй л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІ Лѓм»Лђл┤лх л░лйЛІмЏЛѓл░л╣ л░л╗л╝л░л┤ЛІ.мџлЙл╗л╝лхлй л║МЕЛђЛЂлхЛѓЛќмБЛќли."##),
        ("not-included", r##"лЉм▒л╗ лхл║Лќл╗Лќл║ ** ЛѓлИЛќЛЂЛѓЛќ ЛёлЙЛђл╝л░Лѓ м»ЛѕЛќлй л║лЙлйл▓лхЛђЛЂлИЛЈл╗ЛІмЏ ЛёЛЃлйл║ЛєлИЛЈлйЛІ ** мЏл░л╝ЛѓЛІл╝л░л╣л┤ЛІ.
лАЛќлил│лх ┬ФCargo.toml┬╗ лХМЎлйлх мЏлЙлйл┤ЛІЛђмЊЛІл╗л░Лђл┤л░мЊЛІ ЛѓлИЛќЛЂЛѓЛќ л╝м»л╝л║Лќлйл┤Лќл║ЛѓЛќ мЏлЙЛЂЛЃ л║лхЛђлхл║.
лЋл│лхЛђ л▒м▒л╗ л▒л░мЊл┤л░Лђл╗л░л╝л░л╗ЛІмЏ лХл░ЛЂл░мЏЛѓл░л╝л░л┤л░ ЛѓлИЛќЛЂЛѓЛќ ЛёЛЃлйл║ЛєлИЛЈл╗л░Лђл┤ЛІ мЏл░л╝ЛѓЛІл╝л░ЛЂл░, л╝МЎЛЂлхл╗лхлйЛќ лХЛќл▒лхЛђЛќмБЛќли."##),
        ("conv-error", r##"лљл╣ЛІЛђл▒л░ЛЂЛѓл░ЛЃ мЏл░ЛѓлхЛЂЛќ"##),
        ("dst", r##"Лѓл░мЊл░л╣ЛІлйл┤л░л╗мЊл░лй Лёл░л╣л╗ лХлЙл╗ЛІ"##),
        ("unsupported", r##"мџлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗л╝лхл╣ЛѓЛќлй ЛёлЙЛђл╝л░ЛѓЛѓЛІ Лѓм»Лђл╗лхлйл┤ЛќЛђЛЃ"##),
        ("invalid-json1.0", r##"лцл░л╣л╗ л┤м▒ЛђЛІЛЂ лхл╝лхЛЂ, `JSON 1.0 л┐ЛќЛѕЛќл╝Лќ лхл╝лхЛЂ,┬Ф JSON5` ┬╗л┤лхл┐ Лѓл░л╗л┤л░л┐, Лѓл░л╗л┤л░ЛЃмЊл░ ЛѓЛІЛђЛІЛЂл┐л░л╣л┤ЛІ."##),
    ],
}
}

/// Language ID: kk;
/// Map name: "conversion_md";
/// Description: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй;
pub(super) const fn get_kk_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** мЏлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗л╝лхл╣л┤Лќ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLISP S-МЕЛђлйлхл│Лќлйлхлй[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m л▒л░ЛЂмЏл░ ЛёлЙЛђл╝л░ЛѓЛѓл░ЛђмЊл░ Лѓм»Лђл╗лхлйл┤ЛќЛђЛЃ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЉлхл╗л│ЛќЛЂЛќли Лёл░л╣л╗ л┐ЛќЛѕЛќл╝Лќлй Лѓл░мБл┤л░мБЛІли[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mмџл░лиЛќЛђл│Лќ ЛЃл░мЏЛІЛѓЛѓл░ мЏлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗лхЛѓЛќлй ЛёлЙЛђл╝л░ЛѓЛѓл░Лђ ЛѓЛќлиЛќл╝Лќ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mл┐ЛќЛѕЛќл╝Лќлй л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІ Лѓм»Лђл┤лх л░лйЛІмЏЛѓл░л╣ л░л╗л╝л░л┤ЛІ.мџлЙл╗л╝лхлй л║МЕЛђЛЂлхЛѓЛќмБЛќли.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлЉм▒л╗ лхл║Лќл╗Лќл║ ** ЛѓлИЛќЛЂЛѓЛќ ЛёлЙЛђл╝л░Лѓ м»ЛѕЛќлй л║лЙлйл▓лхЛђЛЂлИЛЈл╗ЛІмЏ ЛёЛЃлйл║ЛєлИЛЈлйЛІ ** мЏл░л╝ЛѓЛІл╝л░л╣л┤ЛІ.
[48;2;34;34;34m[38;2;255;255;255mлАЛќлил│лх ┬ФCargo.toml┬╗ лХМЎлйлх мЏлЙлйл┤ЛІЛђмЊЛІл╗л░Лђл┤л░мЊЛІ ЛѓлИЛќЛЂЛѓЛќ л╝м»л╝л║Лќлйл┤Лќл║ЛѓЛќ мЏлЙЛЂЛЃ л║лхЛђлхл║.
[48;2;34;34;34m[38;2;255;255;255mлЋл│лхЛђ л▒м▒л╗ л▒л░мЊл┤л░Лђл╗л░л╝л░л╗ЛІмЏ лХл░ЛЂл░мЏЛѓл░л╝л░л┤л░ ЛѓлИЛќЛЂЛѓЛќ ЛёЛЃлйл║ЛєлИЛЈл╗л░Лђл┤ЛІ мЏл░л╝ЛѓЛІл╝л░ЛЂл░, л╝МЎЛЂлхл╗лхлйЛќ лХЛќл▒лхЛђЛќмБЛќли.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлљл╣ЛІЛђл▒л░ЛЂЛѓл░ЛЃ мЏл░ЛѓлхЛЂЛќ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЛѓл░мЊл░л╣ЛІлйл┤л░л╗мЊл░лй Лёл░л╣л╗ лХлЙл╗ЛІ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mмџлЙл╗л┤л░ЛЃ л║МЕЛђЛЂлхЛѓЛќл╗л╝лхл╣ЛѓЛќлй ЛёлЙЛђл╝л░ЛѓЛѓЛІ Лѓм»Лђл╗лхлйл┤ЛќЛђЛЃ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ л┤м▒ЛђЛІЛЂ лхл╝лхЛЂ, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0 л┐ЛќЛѕЛќл╝Лќ лхл╝лхЛЂ,┬Ф JSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┬╗л┤лхл┐ Лѓл░л╗л┤л░л┐, Лѓл░л╗л┤л░ЛЃмЊл░ ЛѓЛІЛђЛІЛЂл┐л░л╣л┤ЛІ.[0m"##),
    ],
}
}

/// Language ID: kk;
/// Map name: "set";
/// Description: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лХл░Лђл░л╝ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛІ.");
/// ```
pub(super) const fn get_kk_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Мелил│лхЛђЛѓЛќл╗л│лхлй л╝л░лил╝м▒лй ** ЛЂл░мЏЛѓл░л╗л╝л░л╣л┤ЛІ ** ЛЂл░мЏЛѓл░л╗л╝л░л╣л┤ЛІ, МЕл╣Лѓл║лхлйЛќ `--sv` Лѕл░мЏЛІЛђЛІл╗л╝л░мЊл░лй."##),
        ("new-value", r##"лќл░мБл░ л╝МЎлй"##),
        ("invalid-path", r##"лХл░Лђл░л╝ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛІ."##),
    ],
}
}

/// Language ID: kk;
/// Map name: "set_md";
/// Description: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй;
pub(super) const fn get_kk_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mМелил│лхЛђЛѓЛќл╗л│лхлй л╝л░лил╝м▒лй ** ЛЂл░мЏЛѓл░л╗л╝л░л╣л┤ЛІ ** ЛЂл░мЏЛѓл░л╗л╝л░л╣л┤ЛІ, МЕл╣Лѓл║лхлйЛќ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Лѕл░мЏЛІЛђЛІл╗л╝л░мЊл░лй.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлќл░мБл░ л╝МЎлй[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлХл░Лђл░л╝ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛІ.[0m"##),
    ],
}
}

/// Language ID: kk;
/// Map name: "get";
/// Description: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лбл░мЊл░л╣ЛІлйл┤л░ЛЃ ЛёлЙЛђл╝л░ЛѓЛІ");
/// ```
pub(super) const fn get_kk_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лбл░мЊл░л╣ЛІлйл┤л░ЛЃ ЛёлЙЛђл╝л░ЛѓЛІ"##),
        ("src-fmt", r##"лЉл░ЛЂЛѓл░л┐мЏЛІ Лёл░л╣л╗ л┐ЛќЛѕЛќл╝Лќ"##),
    ],
}
}

/// kk: мЏл░лил░мЏ ЛѓЛќл╗Лќ, л║лИЛђлИл╗л╗ лХл░лиЛЃЛІ, мџл░лил░мЏЛЂЛѓл░лй
pub(super) const fn get_kk_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_kk_map_conversion),
        ("get", get_kk_map_get),
        ("set_md", get_kk_map_set_md),
        ("set", get_kk_map_set),
        ("conversion_md", get_kk_map_conversion_md),
    ],
}
}

/// Language ID: km;
/// Map name: "conversion";
/// Description: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ръћръХръЊръћръџръХръЄ\u{17d0}ръЎръђ\u{17d2}ръЊ\u{17bb}ръёръђръХръџръџръђръЃръЙръЅръЉ\u{17d2}ръџръё\u{17cb}ръЉ\u{17d2}ръџръХръЎръірЪёръЎръЪ\u{17d2}ръю\u{17d0}ръЎръћ\u{17d2}ръџръюръЈ\u{17d2}ръЈ\u{17b7}рЪћръЪ\u{17bc}ръўръћръЅ\u{17d2}ръЄръХръђ\u{17cb}ръірЪёръЎръірЪЃрЪћ");
/// ```
pub(super) const fn get_km_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
        (0, 0),
    ],
    entries: &[
        ("currently-supported", r##"ръћръЅрЪњръЄръИръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪѓръЏръћръХръЊръѓръХрЪєръЉрЪњръџръћръЁрЪњръЁръ╗ръћрЪњръћръЊрЪњръЊ:"##),
        ("unsupported", r##"ръђръХръџръћрЪєръЏрЪѓръёръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪѓръЏръўръиръЊръћръХръЊръѓръХрЪєръЉрЪњръџ"##),
        ("unknown-fmt", r##"ръўръиръЊръЪрЪњръѓръХръЏрЪІръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръ»ръђръЪръХръџ"##),
        ("not-support-deser-sexp", r##"ръўръиръЊръЈрЪњръџръ╝ръюръћръХръЊръѓръХрЪєръЉрЪњръџръЊрЪЁръАръЙръЎръЉрЪЂръћрЪЅръ╗ръЊрЪњръЈрЪѓ **: ръђръХръџръћрЪєръЏрЪѓръёръќръИ `lisp s-callment` ръЉрЪєръџръёрЪІръЋрЪњръЪрЪЂръёръЉрЪђръЈ"##),
        ("conv-error", r##"ръђръХръџръћрЪєръЏрЪѓръёръђрЪєръаръ╗ръЪръђрЪєръаръ╗ръЪ"##),
        ("dst", r##"ръЋрЪњръЏръ╝ръюръ»ръђръЪръХръџръЉръиръЪръірЪЁ"##),
        ("auto-detection-failed", r##"ръћръХръЊръћръџръХръЄрЪљръЎръђрЪњръЊръ╗ръёръђръХръџръџръђръЃръЙръЅръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪёръЎръЪрЪњръюрЪљръЎръћрЪњръџръюръЈрЪњръЈръирЪћръЪръ╝ръўръћръЅрЪњръЄръХръђрЪІръірЪёръЎръірЪЃрЪћ"##),
    ],
}
}

/// Language ID: km;
/// Map name: "conversion_md";
/// Description: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ;
pub(super) const fn get_km_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
        (0, 0),
    ],
    entries: &[
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mръћръЅрЪњръЄръИръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪѓръЏръћръХръЊръѓръХрЪєръЉрЪњръџръћръЁрЪњръЁръ╗ръћрЪњръћръЊрЪњръЊ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mръђръХръџръћрЪєръЏрЪѓръёръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪѓръЏръўръиръЊръћръХръЊръѓръХрЪєръЉрЪњръџ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mръўръиръЊръЪрЪњръѓръХръЏрЪІръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръ»ръђръЪръХръџ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255mръўръиръЊръЈрЪњръџръ╝ръюръћръХръЊръѓръХрЪєръЉрЪњръџръЊрЪЁръАръЙръЎръЉрЪЂръћрЪЅръ╗ръЊрЪњръЈрЪѓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ръђръХръџръћрЪєръЏрЪѓръёръќръИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-callment[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ръЉрЪєръџръёрЪІръЋрЪњръЪрЪЂръёръЉрЪђръЈ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mръђръХръџръћрЪєръЏрЪѓръёръђрЪєръаръ╗ръЪръђрЪєръаръ╗ръЪ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mръЋрЪњръЏръ╝ръюръ»ръђръЪръХръџръЉръиръЪръірЪЁ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mръћръХръЊръћръџръХръЄрЪљръЎръђрЪњръЊръ╗ръёръђръХръџръџръђръЃръЙръЅръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръірЪёръЎръЪрЪњръюрЪљръЎръћрЪњръџръюръЈрЪњръЈръирЪћръЪръ╝ръўръћръЅрЪњръЄръХръђрЪІръірЪёръЎръірЪЃрЪћ[0m"##),
    ],
}
}

/// Language ID: km;
/// Map name: "set";
/// Description: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ръЋ\u{17d2}ръЏ\u{17bc}ръюръ»ръђръЪръХръџръў\u{17b7}ръЊръЈ\u{17d2}ръџ\u{17b9}ръўръЈ\u{17d2}ръџ\u{17bc}ръюрЪћ");
/// ```
pub(super) const fn get_km_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ръўръХръЈръиръђръХръірЪѓръЏръћръХръЊръђрЪѓръћрЪњръџрЪѓ ** ръЊръ╣ръёръўръиръЊ ** ръЈрЪњръџръ╝ръюръћръХръЊръџръђрЪњръЪръХръЉръ╗ръђръќрЪњръџрЪёрЪЄ `- ръўръиръЊръЈрЪњръџръ╝ръюръћръХръЊръѓрЪЂръарЪЁръЉрЪЂрЪћ"##),
        ("new-value", r##"ръЈръўрЪњръЏрЪЃръљрЪњръўръИ"##),
        ("invalid-path", r##"ръЋрЪњръЏръ╝ръюръ»ръђръЪръХръџръўръиръЊръЈрЪњръџръ╣ръўръЈрЪњръџръ╝ръюрЪћ"##),
    ],
}
}

/// Language ID: km;
/// Map name: "set_md";
/// Description: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ;
pub(super) const fn get_km_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mръўръХръЈръиръђръХръірЪѓръЏръћръХръЊръђрЪѓръћрЪњръџрЪѓ ** ръЊръ╣ръёръўръиръЊ ** ръЈрЪњръџръ╝ръюръћръХръЊръџръђрЪњръЪръХръЉръ╗ръђръќрЪњръџрЪёрЪЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- ръўръиръЊръЈрЪњръџръ╝ръюръћръХръЊръѓрЪЂръарЪЁръЉрЪЂрЪћ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mръЈръўрЪњръЏрЪЃръљрЪњръўръИ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mръЋрЪњръЏръ╝ръюръ»ръђръЪръХръџръўръиръЊръЈрЪњръџръ╣ръўръЈрЪњръџръ╝ръюрЪћ[0m"##),
    ],
}
}

/// Language ID: km;
/// Map name: "get";
/// Description: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ръЉ\u{17d2}ръџръё\u{17cb}ръЉ\u{17d2}ръџръХръЎръЉ\u{17b7}ръЪръірЪЁ");
/// ```
pub(super) const fn get_km_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръЉръиръЪръірЪЁ"##),
        ("src-fmt", r##"ръЉрЪњръџръёрЪІръЉрЪњръџръХръЎръ»ръђръЪръХръџръћрЪњръџръЌръќ"##),
    ],
}
}

/// km: ръЂрЪњръўрЪѓръџ, ръЂрЪњръўрЪѓръџ, ръђръўрЪњръќръ╗ръЄръХ
pub(super) const fn get_km_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_km_map_conversion),
        ("get", get_km_map_get),
        ("set_md", get_km_map_set_md),
        ("set", get_km_map_set),
        ("conversion_md", get_km_map_conversion_md),
    ],
}
}

/// Language ID: kn;
/// Map name: "conversion";
/// Description: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я▓И\u{ccd}Я▓хЯ▓░\u{cc2}Я▓фЯ▓хЯ▓е\u{ccd}Я▓еЯ│Ђ Я▓И\u{ccd}Я▓хЯ▓»Я▓ѓЯ▓џЯ▓ЙЯ▓▓\u{cbf}Я▓цЯ▓хЯ▓ЙЯ▓Ќ\u{cbf} Я▓ЋЯ▓ѓЯ▓АЯ│ЂЯ▓╣\u{cbf}Я▓А\u{cbf}Я▓»Я▓▓Я│Ђ Я▓х\u{cbf}Я▓ФЯ▓▓Я▓хЯ▓ЙЯ▓Ќ\u{cbf}Я▓д\u{cc6}.Я▓дЯ▓»Я▓х\u{cbf}Я▓Ъ\u{ccd}Я▓ЪЯ│Ђ Я▓╣Я▓И\u{ccd}Я▓цЯ▓џЯ▓ЙЯ▓▓\u{cbf}Я▓цЯ▓хЯ▓ЙЯ▓Ќ\u{cbf} Я▓е\u{cbf}Я▓░\u{ccd}Я▓д\u{cbf}Я▓и\u{ccd}Я▓ЪЯ▓фЯ▓А\u{cbf}Я▓И\u{cbf}.");
/// ```
pub(super) const fn get_kn_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓еЯ│ЇЯ▓» `JSON 1.0` Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓хЯ▓▓Я│ЇЯ▓▓, `json5` Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓фЯ▓ЙЯ▓░Я│ЇЯ▓ИЯ│Ї Я▓«Я▓ЙЯ▓АЯ▓▓Я│Ђ Я▓фЯ│ЇЯ▓░Я▓»Я▓цЯ│ЇЯ▓еЯ▓┐Я▓ИЯ│ЂЯ▓цЯ│ЇЯ▓цЯ▓┐Я▓дЯ│є ..."##),
        ("not-included", r##"Я▓ѕ Я▓гЯ│ѕЯ▓еЯ▓░Я▓┐ ** Я▓ИЯ▓ѓЯ▓гЯ▓ѓЯ▓ДЯ▓┐Я▓ц Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЋЯ│ЇЯ▓ЋЯ▓ЙЯ▓ЌЯ▓┐ ** Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓њЯ▓│Я▓ЌЯ│іЯ▓ѓЯ▓АЯ▓┐Я▓▓Я│ЇЯ▓▓.
Я▓еЯ▓┐Я▓«Я│ЇЯ▓« `Я▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓ЌЯ│І.Я▓ЪЯ│іЯ▓«Я│ЇЯ▓▓Я│Ї` Я▓«Я▓цЯ│ЇЯ▓цЯ│Ђ Я▓«Я▓░Я│Ђ Я▓ЋЯ▓ѓЯ▓фЯ│ѕЯ▓▓Я│ЇЯ▓еЯ▓▓Я│ЇЯ▓▓Я▓┐ Я▓еЯ│ђЯ▓хЯ│Ђ Я▓ИЯ▓ѓЯ▓гЯ▓ѓЯ▓ДЯ▓┐Я▓ц Я▓хЯ│ѕЯ▓ХЯ▓┐Я▓иЯ│ЇЯ▓ЪЯ│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ▓ЋЯ│ЇЯ▓░Я▓┐Я▓»Я▓ЌЯ│іЯ▓│Я▓┐Я▓ИЯ▓гЯ│ЄЯ▓ЋЯ▓ЙЯ▓ЌЯ▓┐Я▓дЯ│є.
Я▓ѕ Я▓ИЯ▓ЙЯ▓ФЯ│ЇЯ▓ЪЯ│ЇРђїЯ▓хЯ│ЄЯ▓░Я│Ї Я▓ЁЯ▓еЯ│ЂЯ▓ЌЯ│ЂЯ▓БЯ▓хЯ▓ЙЯ▓д Я▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓њЯ▓│Я▓ЌЯ│іЯ▓ѓЯ▓АЯ▓┐Я▓░Я▓дЯ▓┐Я▓дЯ│ЇЯ▓дЯ▓░Я│є, Я▓дЯ▓»Я▓хЯ▓┐Я▓ЪЯ│ЇЯ▓ЪЯ│Ђ Я▓ИЯ▓«Я▓ИЯ│ЇЯ▓»Я│єЯ▓»Я▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ▓▓Я│ЇЯ▓▓Я▓┐Я▓ИЯ▓┐."##),
        ("currently-supported", r##"Я▓фЯ│ЇЯ▓░Я▓ИЯ│ЇЯ▓цЯ│ЂЯ▓ц Я▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓ц Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЌЯ▓│ Я▓фЯ▓ЪЯ│ЇЯ▓ЪЯ▓┐:"##),
        ("unsupported", r##"Я▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓ИЯ▓д Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓ф Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є"##),
        ("auto-detection-failed", r##"Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ│ЇЯ▓хЯ▓»Я▓ѓЯ▓џЯ▓ЙЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐ Я▓ЋЯ▓ѓЯ▓АЯ│ЂЯ▓╣Я▓┐Я▓АЯ▓┐Я▓»Я▓▓Я│Ђ Я▓хЯ▓┐Я▓ФЯ▓▓Я▓хЯ▓ЙЯ▓ЌЯ▓┐Я▓дЯ│є.Я▓дЯ▓»Я▓хЯ▓┐Я▓ЪЯ│ЇЯ▓ЪЯ│Ђ Я▓╣Я▓ИЯ│ЇЯ▓цЯ▓џЯ▓ЙЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐ Я▓еЯ▓┐Я▓░Я│ЇЯ▓дЯ▓┐Я▓иЯ│ЇЯ▓ЪЯ▓фЯ▓АЯ▓┐Я▓ИЯ▓┐."##),
        ("not-support-deser-sexp", r##"** Я▓ЄЯ▓еЯ│ЇЯ▓еЯ│ѓ Я▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐Я▓▓Я│ЇЯ▓▓ **: `Я▓▓Я▓┐Я▓ИЯ│ЇЯ▓фЯ│Ї Я▓јЯ▓ИЯ│Ї-Я▓јЯ▓ЋЯ│ЇЯ▓ИЯ│ЇРђїЯ▓фЯ│ЇЯ▓░Я│єЯ▓ХЯ▓еЯ│Ї'Я▓еЯ▓┐Я▓ѓЯ▓д` Я▓ЄЯ▓цЯ▓░ Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЌЯ▓│Я│Ђ'Я▓ЌЯ│є Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓┐Я▓ИЯ│ЂЯ▓хЯ│ЂЯ▓дЯ│Ђ"##),
        ("unknown-fmt", r##"Я▓ЁЯ▓юЯ│ЇЯ▓ъЯ▓ЙЯ▓ц Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓ФЯ▓ЙЯ▓░Я│ЇЯ▓«Я│ЇЯ▓»Я▓ЙЯ▓ЪЯ│Ї"##),
        ("not-saved", r##"Я▓ѕ Я▓ЋЯ│єЯ▓│Я▓ЌЯ▓┐Я▓е Я▓хЯ▓┐Я▓иЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ ** Я▓ЅЯ▓│Я▓┐Я▓ИЯ▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓ Я▓ЈЯ▓ЋЯ│єЯ▓ѓЯ▓дЯ▓░Я│є `--save` Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓ЋЯ▓░Я│єЯ▓»Я▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓."##),
        ("dst", r##"Я▓ЌЯ▓«Я│ЇЯ▓»Я▓ИЯ│ЇЯ▓ЦЯ▓ЙЯ▓е Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓░Я│ЇЯ▓Ќ"##),
        ("conv-error", r##"Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓дЯ│ІЯ▓и"##),
    ],
}
}

/// Language ID: kn;
/// Map name: "conversion_md";
/// Description: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц;
pub(super) const fn get_kn_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓еЯ│ЇЯ▓» [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓хЯ▓▓Я│ЇЯ▓▓, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓фЯ▓ЙЯ▓░Я│ЇЯ▓ИЯ│Ї Я▓«Я▓ЙЯ▓АЯ▓▓Я│Ђ Я▓фЯ│ЇЯ▓░Я▓»Я▓цЯ│ЇЯ▓еЯ▓┐Я▓ИЯ│ЂЯ▓цЯ│ЇЯ▓цЯ▓┐Я▓дЯ│є ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ѕ Я▓гЯ│ѕЯ▓еЯ▓░Я▓┐ ** Я▓ИЯ▓ѓЯ▓гЯ▓ѓЯ▓ДЯ▓┐Я▓ц Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЋЯ│ЇЯ▓ЋЯ▓ЙЯ▓ЌЯ▓┐ ** Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓њЯ▓│Я▓ЌЯ│іЯ▓ѓЯ▓АЯ▓┐Я▓▓Я│ЇЯ▓▓.
[48;2;34;34;34m[38;2;255;255;255mЯ▓еЯ▓┐Я▓«Я│ЇЯ▓« [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓ЌЯ│І.Я▓ЪЯ│іЯ▓«Я│ЇЯ▓▓Я│Ї[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я▓«Я▓цЯ│ЇЯ▓цЯ│Ђ Я▓«Я▓░Я│Ђ Я▓ЋЯ▓ѓЯ▓фЯ│ѕЯ▓▓Я│ЇЯ▓еЯ▓▓Я│ЇЯ▓▓Я▓┐ Я▓еЯ│ђЯ▓хЯ│Ђ Я▓ИЯ▓ѓЯ▓гЯ▓ѓЯ▓ДЯ▓┐Я▓ц Я▓хЯ│ѕЯ▓ХЯ▓┐Я▓иЯ│ЇЯ▓ЪЯ│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ▓ЋЯ│ЇЯ▓░Я▓┐Я▓»Я▓ЌЯ│іЯ▓│Я▓┐Я▓ИЯ▓гЯ│ЄЯ▓ЋЯ▓ЙЯ▓ЌЯ▓┐Я▓дЯ│є.
[48;2;34;34;34m[38;2;255;255;255mЯ▓ѕ Я▓ИЯ▓ЙЯ▓ФЯ│ЇЯ▓ЪЯ│ЇРђїЯ▓хЯ│ЄЯ▓░Я│Ї Я▓ЁЯ▓еЯ│ЂЯ▓ЌЯ│ЂЯ▓БЯ▓хЯ▓ЙЯ▓д Я▓ЋЯ▓ЙЯ▓░Я│ЇЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓њЯ▓│Я▓ЌЯ│іЯ▓ѓЯ▓АЯ▓┐Я▓░Я▓дЯ▓┐Я▓дЯ│ЇЯ▓дЯ▓░Я│є, Я▓дЯ▓»Я▓хЯ▓┐Я▓ЪЯ│ЇЯ▓ЪЯ│Ђ Я▓ИЯ▓«Я▓ИЯ│ЇЯ▓»Я│єЯ▓»Я▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ▓▓Я│ЇЯ▓▓Я▓┐Я▓ИЯ▓┐.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓фЯ│ЇЯ▓░Я▓ИЯ│ЇЯ▓цЯ│ЂЯ▓ц Я▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓ц Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЌЯ▓│ Я▓фЯ▓ЪЯ│ЇЯ▓ЪЯ▓┐:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓ИЯ▓д Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓ф Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ Я▓ИЯ│ЇЯ▓хЯ▓»Я▓ѓЯ▓џЯ▓ЙЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐ Я▓ЋЯ▓ѓЯ▓АЯ│ЂЯ▓╣Я▓┐Я▓АЯ▓┐Я▓»Я▓▓Я│Ђ Я▓хЯ▓┐Я▓ФЯ▓▓Я▓хЯ▓ЙЯ▓ЌЯ▓┐Я▓дЯ│є.Я▓дЯ▓»Я▓хЯ▓┐Я▓ЪЯ│ЇЯ▓ЪЯ│Ђ Я▓╣Я▓ИЯ│ЇЯ▓цЯ▓џЯ▓ЙЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐ Я▓еЯ▓┐Я▓░Я│ЇЯ▓дЯ▓┐Я▓иЯ│ЇЯ▓ЪЯ▓фЯ▓АЯ▓┐Я▓ИЯ▓┐.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Я▓ЄЯ▓еЯ│ЇЯ▓еЯ│ѓ Я▓гЯ│єЯ▓ѓЯ▓гЯ▓▓Я▓┐Я▓цЯ▓хЯ▓ЙЯ▓ЌЯ▓┐Я▓▓Я│ЇЯ▓▓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ▓▓Я▓┐Я▓ИЯ│ЇЯ▓фЯ│Ї Я▓јЯ▓ИЯ│Ї-Я▓јЯ▓ЋЯ│ЇЯ▓ИЯ│ЇРђїЯ▓фЯ│ЇЯ▓░Я│єЯ▓ХЯ▓еЯ│Ї'Я▓еЯ▓┐Я▓ѓЯ▓д[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я▓ЄЯ▓цЯ▓░ Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓фЯ▓ЌЯ▓│Я│Ђ'Я▓ЌЯ│є Я▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓┐Я▓ИЯ│ЂЯ▓хЯ│ЂЯ▓дЯ│Ђ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ЁЯ▓юЯ│ЇЯ▓ъЯ▓ЙЯ▓ц Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓ФЯ▓ЙЯ▓░Я│ЇЯ▓«Я│ЇЯ▓»Я▓ЙЯ▓ЪЯ│Ї[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ѕ Я▓ЋЯ│єЯ▓│Я▓ЌЯ▓┐Я▓е Я▓хЯ▓┐Я▓иЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ ** Я▓ЅЯ▓│Я▓┐Я▓ИЯ▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓ Я▓ЈЯ▓ЋЯ│єЯ▓ѓЯ▓дЯ▓░Я│є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓ЋЯ▓░Я│єЯ▓»Я▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ЌЯ▓«Я│ЇЯ▓»Я▓ИЯ│ЇЯ▓ЦЯ▓ЙЯ▓е Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓░Я│ЇЯ▓Ќ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓фЯ▓░Я▓┐Я▓хЯ▓░Я│ЇЯ▓цЯ▓еЯ│є Я▓дЯ│ІЯ▓и[0m"##),
    ],
}
}

/// Language ID: kn;
/// Map name: "set";
/// Description: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я▓ЁЯ▓«Я▓ЙЯ▓е\u{ccd}Я▓» Я▓ФЯ│ѕЯ▓▓\u{ccd} Я▓«Я▓ЙЯ▓░\u{ccd}Я▓Ќ.");
/// ```
pub(super) const fn get_kn_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я▓«Я▓ЙЯ▓░Я│ЇЯ▓фЯ▓АЯ▓┐Я▓ИЯ▓┐Я▓д Я▓хЯ▓┐Я▓иЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ ** Я▓ЅЯ▓│Я▓┐Я▓ИЯ▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓ Я▓ЈЯ▓ЋЯ│єЯ▓ѓЯ▓дЯ▓░Я│є `--sv` Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓ЋЯ▓░Я│єЯ▓»Я▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓."##),
        ("new-value", r##"Я▓╣Я│іЯ▓И Я▓«Я│їЯ▓▓Я│ЇЯ▓»"##),
        ("invalid-path", r##"Я▓ЁЯ▓«Я▓ЙЯ▓еЯ│ЇЯ▓» Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓░Я│ЇЯ▓Ќ."##),
    ],
}
}

/// Language ID: kn;
/// Map name: "set_md";
/// Description: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц;
pub(super) const fn get_kn_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓«Я▓ЙЯ▓░Я│ЇЯ▓фЯ▓АЯ▓┐Я▓ИЯ▓┐Я▓д Я▓хЯ▓┐Я▓иЯ▓»Я▓хЯ▓еЯ│ЇЯ▓еЯ│Ђ ** Я▓ЅЯ▓│Я▓┐Я▓ИЯ▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓ Я▓ЈЯ▓ЋЯ│єЯ▓ѓЯ▓дЯ▓░Я│є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я▓јЯ▓ѓЯ▓дЯ│Ђ Я▓ЋЯ▓░Я│єЯ▓»Я▓▓Я▓ЙЯ▓ЌЯ│ЂЯ▓хЯ│ЂЯ▓дЯ▓┐Я▓▓Я│ЇЯ▓▓.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓╣Я│іЯ▓И Я▓«Я│їЯ▓▓Я│ЇЯ▓»[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ▓ЁЯ▓«Я▓ЙЯ▓еЯ│ЇЯ▓» Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓«Я▓ЙЯ▓░Я│ЇЯ▓Ќ.[0m"##),
    ],
}
}

/// Language ID: kn;
/// Map name: "get";
/// Description: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Я▓ЌЯ▓«\u{ccd}Я▓»Я▓И\u{ccd}Я▓ЦЯ▓ЙЯ▓е Я▓И\u{ccd}Я▓хЯ▓░\u{cc2}Я▓ф");
/// ```
pub(super) const fn get_kn_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Я▓ЌЯ▓«Я│ЇЯ▓»Я▓ИЯ│ЇЯ▓ЦЯ▓ЙЯ▓е Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓ф"##),
        ("src-fmt", r##"Я▓«Я│ѓЯ▓▓ Я▓ФЯ│ѕЯ▓▓Я│Ї Я▓ИЯ│ЇЯ▓хЯ▓░Я│ѓЯ▓ф"##),
    ],
}
}

/// kn: Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ЋЯ▓еЯ│ЇЯ▓еЯ▓А, Я▓ГЯ▓ЙЯ▓░Я▓ц
pub(super) const fn get_kn_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_kn_map_conversion),
        ("get", get_kn_map_get),
        ("set_md", get_kn_map_set_md),
        ("set", get_kn_map_set),
        ("conversion_md", get_kn_map_conversion_md),
    ],
}
}

/// Language ID: ko;
/// Map name: "conversion";
/// Description: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ВъљвЈЎ ьўЋВІЮ Ж░љВДђ ВІцьїе, ВѕўвЈЎВю╝вАю ВДђВаЋьЋ┤ВЋ╝ ьЋЕвІѕвІц.");
/// ```
pub(super) const fn get_ko_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"`json 1.0` ьўЋВІЮВЮ┤ Вўгв░ћвЦ┤ВДђ ВЋіВіхвІѕвІц. `json5`вАю вХёВёЮ ВцЉВъЁвІѕвІц..."##),
        ("not-included", r##"ВЮ┤ в░ћВЮ┤вёѕвдг ьїїВЮ╝ВЌљвіћ Ж┤ђваевљю ьўЋВІЮВЮў в│ђьЎў ЖИ░віЦВЮ┤ **ьЈгьЋевљўВќ┤ ВъѕВДђ ВЋіВіхвІѕвІц**.
`Cargo.toml`ВЌљВёю ьЋ┤вІ╣ ЖИ░віЦВЮё ьЎюВё▒ьЎћьЋўЖ│а вІцВІю В╗┤ьїїВЮ╝ьЋ┤ВЋ╝ ьЋЕвІѕвІц.
ВЮ┤ ВєїьћёьіИВЏеВќ┤ВЌљ ьЋ┤вІ╣ ЖИ░віЦВЮ┤ ВЌєВю╝вЕ┤ ВЮ┤ВіѕвЦ╝ ВаюВХюьЋўВёИВџћ."##),
        ("currently-supported", r##"ьўёВъг ВДђВЏљвљўвіћ ьўЋВІЮ вфЕвАЮ"##),
        ("unsupported", r##"ВДђВЏљвљўВДђ ВЋівіћ ьўЋВІЮ в│ђьЎў"##),
        ("auto-detection-failed", r##"ВъљвЈЎ ьўЋВІЮ Ж░љВДђ ВІцьїе, ВѕўвЈЎВю╝вАю ВДђВаЋьЋ┤ВЋ╝ ьЋЕвІѕвІц."##),
        ("not-support-deser-sexp", r##"`Lisp S-Expression`ВЮё(вЦ╝) `вІцвЦИ ьўЋВІЮ`Вю╝вАю в│ђьЎўьЋўвіћ Ж▓ЃВЮђ **ВЋёВДЂ ВДђВЏљвљўВДђ ВЋіВіхвІѕвІц**."##),
        ("unknown-fmt", r##"ВЋї Вѕў ВЌєвіћ ьїїВЮ╝ ьўЋВІЮ"##),
        ("not-saved", r##"`--save`вЦ╝ ьўИВХюьЋўВДђ ВЋіВЋўЖИ░ вЋївгИВЌљ вІцВЮї вѓ┤ВџЕВЮђ **ВађВъЦвљўВДђ ВЋіВіхвІѕвІц**."##),
        ("dst", r##"вїђВЃЂ ьїїВЮ╝ Ж▓йвАю"##),
        ("conv-error", r##"в│ђьЎў ВўцвЦў"##),
    ],
}
}

/// Language ID: ko;
/// Map name: "conversion_md";
/// Description: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ;
pub(super) const fn get_ko_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ьўЋВІЮВЮ┤ Вўгв░ћвЦ┤ВДђ ВЋіВіхвІѕвІц. [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mвАю вХёВёЮ ВцЉВъЁвІѕвІц...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mВЮ┤ в░ћВЮ┤вёѕвдг ьїїВЮ╝ВЌљвіћ Ж┤ђваевљю ьўЋВІЮВЮў в│ђьЎў ЖИ░віЦВЮ┤ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mьЈгьЋевљўВќ┤ ВъѕВДђ ВЋіВіхвІѕвІц[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.
[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mВЌљВёю ьЋ┤вІ╣ ЖИ░віЦВЮё ьЎюВё▒ьЎћьЋўЖ│а вІцВІю В╗┤ьїїВЮ╝ьЋ┤ВЋ╝ ьЋЕвІѕвІц.
[48;2;34;34;34m[38;2;255;255;255mВЮ┤ ВєїьћёьіИВЏеВќ┤ВЌљ ьЋ┤вІ╣ ЖИ░віЦВЮ┤ ВЌєВю╝вЕ┤ ВЮ┤ВіѕвЦ╝ ВаюВХюьЋўВёИВџћ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mьўёВъг ВДђВЏљвљўвіћ ьўЋВІЮ вфЕвАЮ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mВДђВЏљвљўВДђ ВЋівіћ ьўЋВІЮ в│ђьЎў[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mВъљвЈЎ ьўЋВІЮ Ж░љВДђ ВІцьїе, ВѕўвЈЎВю╝вАю ВДђВаЋьЋ┤ВЋ╝ ьЋЕвІѕвІц.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mВЮё(вЦ╝) [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mвІцвЦИ ьўЋВІЮ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mВю╝вАю в│ђьЎўьЋўвіћ Ж▓ЃВЮђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mВЋёВДЂ ВДђВЏљвљўВДђ ВЋіВіхвІѕвІц[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mВЋї Вѕў ВЌєвіћ ьїїВЮ╝ ьўЋВІЮ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mвЦ╝ ьўИВХюьЋўВДђ ВЋіВЋўЖИ░ вЋївгИВЌљ вІцВЮї вѓ┤ВџЕВЮђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mВађВъЦвљўВДђ ВЋіВіхвІѕвІц[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mвїђВЃЂ ьїїВЮ╝ Ж▓йвАю[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mв│ђьЎў ВўцвЦў[0m"##),
    ],
}
}

/// Language ID: ko;
/// Map name: "set";
/// Description: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ВюаьџеьЋўВДђ ВЋіВЮђ ьїїВЮ╝ Ж▓йвАю");
/// ```
pub(super) const fn get_ko_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"`--save`вЦ╝ ьўИВХюьЋўВДђ ВЋіВЋўЖИ░ вЋївгИВЌљ ВѕўВаЋвљю вѓ┤ВџЕВЮђ **ВађВъЦвљўВДђ ВЋіВіхвІѕвІц**."##),
        ("new-value", r##"ВЃѕ Ж░њ(value)"##),
        ("invalid-path", r##"ВюаьџеьЋўВДђ ВЋіВЮђ ьїїВЮ╝ Ж▓йвАю"##),
    ],
}
}

/// Language ID: ko;
/// Map name: "set_md";
/// Description: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ;
pub(super) const fn get_ko_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mвЦ╝ ьўИВХюьЋўВДђ ВЋіВЋўЖИ░ вЋївгИВЌљ ВѕўВаЋвљю вѓ┤ВџЕВЮђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mВађВъЦвљўВДђ ВЋіВіхвІѕвІц[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mВЃѕ Ж░њ(value)[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mВюаьџеьЋўВДђ ВЋіВЮђ ьїїВЮ╝ Ж▓йвАю[0m"##),
    ],
}
}

/// Language ID: ko;
/// Map name: "get";
/// Description: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "вїђВЃЂ ьўЋВІЮ");
/// ```
pub(super) const fn get_ko_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"вїђВЃЂ ьўЋВІЮ"##),
        ("src-fmt", r##"ВєїВіц ьїїВЮ╝ ьўЋВІЮ"##),
    ],
}
}

/// ko: ьЋюЖхГВќ┤, ьЋюЖхГ вгИВъљ, вїђьЋюв»╝ЖхГ
pub(super) const fn get_ko_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ko_map_conversion),
        ("get", get_ko_map_get),
        ("set_md", get_ko_map_set_md),
        ("set", get_ko_map_set),
        ("conversion_md", get_ko_map_conversion_md),
    ],
}
}

/// Language ID: ku;
/// Map name: "conversion";
/// Description: kurd├«, lat├«n├«, Tirkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nehi┼Ъt ku bixweber format bixwe bib├«ne.Ji kerema xwe bi destan diyar bikin.");
/// ```
pub(super) const fn get_ku_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Pel ne formatek derbasdar e `Json 1.0`, hewl dide ku wek├« `JSON5` ..."##),
        ("not-included", r##"Ev binary ** ** fonksiyona veguhastin├ф ji bo forma t├фkildar nagire.
H├╗n hewce ne ku taybetmendiya t├фkildar di `Cargo.toml` ├╗ Recompile de ├Дalak bikin.
Ger ev nermalava fonksiyon├ф t├фkildar neke, ji kerema xwe pirsgir├фkek bi┼Ъ├«nin."##),
        ("currently-supported", r##"Navn├«┼Ъa Format├фn Pi┼Ъtgir├«:"##),
        ("unsupported", r##"Veguheztina Format a Pi┼Ъtgir├«"##),
        ("auto-detection-failed", r##"Nehi┼Ъt ku bixweber format bixwe bib├«ne.Ji kerema xwe bi destan diyar bikin."##),
        ("not-support-deser-sexp", r##"** Pi┼Ъtgir├« nehatiye **: Ji `Lisp S-├«fadeya` LISP-├ф` ji `Format├фn din ve hat├« veguheztin"##),
        ("unknown-fmt", r##"Forma pel├ф nediyar"##),
        ("not-saved", r##"Naveroka j├фr├«n ** Naha ** d├ф xilas nebe ji ber ku `--save` nay├ф gotin."##),
        ("dst", r##"P├фla Destination Destination"##),
        ("conv-error", r##"Errorewtiya veguher├«n├ф"##),
    ],
}
}

/// Language ID: ku;
/// Map name: "conversion_md";
/// Description: kurd├«, lat├«n├«, Tirkiye;
pub(super) const fn get_ku_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mPel ne formatek derbasdar e [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, hewl dide ku wek├« [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mEv binary ** ** fonksiyona veguhastin├ф ji bo forma t├фkildar nagire.
[48;2;34;34;34m[38;2;255;255;255mH├╗n hewce ne ku taybetmendiya t├фkildar di [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ├╗ Recompile de ├Дalak bikin.
[48;2;34;34;34m[38;2;255;255;255mGer ev nermalava fonksiyon├ф t├фkildar neke, ji kerema xwe pirsgir├фkek bi┼Ъ├«nin.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mNavn├«┼Ъa Format├фn Pi┼Ъtgir├«:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mVeguheztina Format a Pi┼Ъtgir├«[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNehi┼Ъt ku bixweber format bixwe bib├«ne.Ji kerema xwe bi destan diyar bikin.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Pi┼Ъtgir├« nehatiye [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Ji [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-├«fadeya[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m LISP-├ф[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ji [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114mFormat├фn din ve hat├« veguheztin[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mForma pel├ф nediyar[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNaveroka j├фr├«n ** Naha ** d├ф xilas nebe ji ber ku [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nay├ф gotin.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mP├фla Destination Destination[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mErrorewtiya veguher├«n├ф[0m"##),
    ],
}
}

/// Language ID: ku;
/// Map name: "set";
/// Description: kurd├«, lat├«n├«, Tirkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "riya pel├ф nederbasdar.");
/// ```
pub(super) const fn get_ku_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Pel├ф   Naveroka Guhertin ** ****************** na **** na xelas nebe ji ber ku `--sv` nay├ф gaz├« kirin."##),
        ("new-value", r##"Nirxa N├╗"##),
        ("invalid-path", r##"riya pel├ф nederbasdar."##),
    ],
}
}

/// Language ID: ku;
/// Map name: "set_md";
/// Description: kurd├«, lat├«n├«, Tirkiye;
pub(super) const fn get_ku_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mPel├ф   Naveroka Guhertin ** ****************** na **** na xelas nebe ji ber ku [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nay├ф gaz├« kirin.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNirxa N├╗[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mriya pel├ф nederbasdar.[0m"##),
    ],
}
}

/// Language ID: ku;
/// Map name: "get";
/// Description: kurd├«, lat├«n├«, Tirkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Formata Destana");
/// ```
pub(super) const fn get_ku_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Formata Destana"##),
        ("src-fmt", r##"Formata pel├ф ├Дavkaniy├ф"##),
    ],
}
}

/// ku: kurd├«, lat├«n├«, Tirkiye
pub(super) const fn get_ku_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ku_map_conversion),
        ("get", get_ku_map_get),
        ("set_md", get_ku_map_set_md),
        ("set", get_ku_map_set),
        ("conversion_md", get_ku_map_conversion_md),
    ],
}
}

/// Language ID: ky;
/// Map name: "conversion";
/// Description: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░ЛѓЛѓЛІ л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІл║ Лѓм»Лђл┤МЕ л░лйЛІл║Лѓл░л╣ л░л╗л│л░лй лХлЙл║.лАЛЃЛђл░лйЛІЛЄ, л║лЙл╗ л╝лхлйлхлй л▒лхл╗л│лИл╗лхмБлИли.");
/// ```
pub(super) const fn get_ky_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лцл░л╣л╗ `JSON 1.0` 'ЛёлЙЛђл╝л░ЛѓЛІлйл░ ЛІл╗л░л╣ЛІл║ ЛЇл╝лхЛЂ"##),
        ("not-included", r##"лЉЛЃл╗ ЛЇл║лИл╗лИл║ ** л║л░л╝ЛѓЛІл╗л▒л░л╣Лѓ ** лџл░ЛЄл░лй, ЛѓлИлхЛѕлхл╗м»м» ЛёлЙЛђл╝л░ЛѓЛѓл░ л║лЙлйл▓лхЛђЛЂлИЛЈл╗ЛІл║ ЛёЛЃлйл║ЛєлИЛЈ.
лАлИлил┤лИлй `Cargo.toml` лХл░лйл░ Recial'л┤лЙ ЛѓлИлхЛѕлхл╗м»м» ЛёЛЃлйл║ЛєлИЛЈлйЛІ лИЛѕЛѓлхЛѓлИЛѕлИмБлИли л║лхЛђлхл║.
лГл│лхЛђл┤лх л▒ЛЃл╗ л┐ЛђлЙл│Лђл░л╝л╝л░ ЛѓлИлхЛѕлхл╗м»м» ЛёЛЃлйл║ЛєлИлЙлйл░л╗л┤ЛІл║ л║л░л╝ЛѓЛІл╗л▒л░ЛЂл░, л░лйл┤л░ л╝л░ЛЂлхл╗лхлйлИ Лѓл░л┐ЛѕЛІЛђЛІмБЛІли."##),
        ("currently-supported", r##"лБЛЄЛЃЛђл┤л░ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл│л░лй ЛёлЙЛђл╝л░ЛѓЛѓл░Лђ ЛѓлИлил╝лхЛЂлИ:"##),
        ("unsupported", r##"лцлЙЛђл╝л░ЛѓЛѓЛІ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл▒л░л│л░лй МЕлил│МЕЛђЛѓм»м»"##),
        ("auto-detection-failed", r##"лцлЙЛђл╝л░ЛѓЛѓЛІ л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІл║ Лѓм»Лђл┤МЕ л░лйЛІл║Лѓл░л╣ л░л╗л│л░лй лХлЙл║.лАЛЃЛђл░лйЛІЛЄ, л║лЙл╗ л╝лхлйлхлй л▒лхл╗л│лИл╗лхмБлИли."##),
        ("not-support-deser-sexp", r##"** лЉлИЛђлЙл║ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл▒л░л╣Лѓ **: `Lisp S-ЛЂМЕли л░л╣л║л░ЛѕЛІ`"##),
        ("unknown-fmt", r##"лЉлхл╗л│лИЛЂлИли Лёл░л╣л╗ лцлЙЛђл╝л░ЛѓЛІ"##),
        ("not-saved", r##"лбМЕл╝МЕлйл║м» л╝л░лил╝ЛЃлй ** ** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ ** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ, л░лйЛѓл║лхлйлИ `--save` л┤лхл┐ л░Лѓл░л╗л│л░лй лХлЙл║."##),
        ("dst", r##"л║МЕлил┤МЕл│МЕлй Лёл░л╣л╗ лХлЙл╗"##),
        ("conv-error", r##"лџлЙлйл▓лхЛђЛЂлИЛЈл╗ЛІл║ л║л░Лѓл░"##),
    ],
}
}

/// Language ID: ky;
/// Map name: "conversion_md";
/// Description: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй;
pub(super) const fn get_ky_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m 'ЛёлЙЛђл╝л░ЛѓЛІлйл░ ЛІл╗л░л╣ЛІл║ ЛЇл╝лхЛЂ[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлЉЛЃл╗ ЛЇл║лИл╗лИл║ ** л║л░л╝ЛѓЛІл╗л▒л░л╣Лѓ ** лџл░ЛЄл░лй, ЛѓлИлхЛѕлхл╗м»м» ЛёлЙЛђл╝л░ЛѓЛѓл░ л║лЙлйл▓лхЛђЛЂлИЛЈл╗ЛІл║ ЛёЛЃлйл║ЛєлИЛЈ.
[48;2;34;34;34m[38;2;255;255;255mлАлИлил┤лИлй [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лХл░лйл░ Recial'л┤лЙ ЛѓлИлхЛѕлхл╗м»м» ЛёЛЃлйл║ЛєлИЛЈлйЛІ лИЛѕЛѓлхЛѓлИЛѕлИмБлИли л║лхЛђлхл║.
[48;2;34;34;34m[38;2;255;255;255mлГл│лхЛђл┤лх л▒ЛЃл╗ л┐ЛђлЙл│Лђл░л╝л╝л░ ЛѓлИлхЛѕлхл╗м»м» ЛёЛЃлйл║ЛєлИлЙлйл░л╗л┤ЛІл║ л║л░л╝ЛѓЛІл╗л▒л░ЛЂл░, л░лйл┤л░ л╝л░ЛЂлхл╗лхлйлИ Лѓл░л┐ЛѕЛІЛђЛІмБЛІли.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлБЛЄЛЃЛђл┤л░ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл│л░лй ЛёлЙЛђл╝л░ЛѓЛѓл░Лђ ЛѓлИлил╝лхЛЂлИ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлцлЙЛђл╝л░ЛѓЛѓЛІ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл▒л░л│л░лй МЕлил│МЕЛђЛѓм»м»[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлцлЙЛђл╝л░ЛѓЛѓЛІ л░л▓ЛѓлЙл╝л░ЛѓЛѓЛІл║ Лѓм»Лђл┤МЕ л░лйЛІл║Лѓл░л╣ л░л╗л│л░лй лХлЙл║.лАЛЃЛђл░лйЛІЛЄ, л║лЙл╗ л╝лхлйлхлй л▒лхл╗л│лИл╗лхмБлИли.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лЉлИЛђлЙл║ л║лЙл╗л┤лЙлЙл│лЙ л░л╗ЛІлйл▒л░л╣Лѓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-ЛЂМЕли л░л╣л║л░ЛѕЛІ[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЉлхл╗л│лИЛЂлИли Лёл░л╣л╗ лцлЙЛђл╝л░ЛѓЛІ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлбМЕл╝МЕлйл║м» л╝л░лил╝ЛЃлй ** ** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ ** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ, л░лйЛѓл║лхлйлИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m л┤лхл┐ л░Лѓл░л╗л│л░лй лХлЙл║.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mл║МЕлил┤МЕл│МЕлй Лёл░л╣л╗ лХлЙл╗[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлџлЙлйл▓лхЛђЛЂлИЛЈл╗ЛІл║ л║л░Лѓл░[0m"##),
    ],
}
}

/// Language ID: ky;
/// Map name: "set";
/// Description: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лќл░Лђл░л║ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛЃ.");
/// ```
pub(super) const fn get_ky_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Мелил│МЕЛђЛѓм»л╗л│МЕлй л╝л░лил╝ЛЃлй ** лХлЙл║ *** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ, л░лйЛѓл║лхлйлИ `--sv` л┤лхл┐ л░Лѓл░л╗л│л░лй лХлЙл║."##),
        ("new-value", r##"лќл░мБЛІ л╝л░л░лйлИ"##),
        ("invalid-path", r##"лќл░Лђл░л║ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛЃ."##),
    ],
}
}

/// Language ID: ky;
/// Map name: "set_md";
/// Description: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй;
pub(super) const fn get_ky_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mМелил│МЕЛђЛѓм»л╗л│МЕлй л╝л░лил╝ЛЃлй ** лХлЙл║ *** ЛЂл░л║Лѓл░л╗л▒л░л╣Лѓ, л░лйЛѓл║лхлйлИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m л┤лхл┐ л░Лѓл░л╗л│л░лй лХлЙл║.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлќл░мБЛІ л╝л░л░лйлИ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлќл░Лђл░л║ЛЂЛІли Лёл░л╣л╗ лХлЙл╗ЛЃ.[0m"##),
    ],
}
}

/// Language ID: ky;
/// Map name: "get";
/// Description: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лџМЕлил┤МЕл╗л│МЕлй ЛёлЙЛђл╝л░Лѓ");
/// ```
pub(super) const fn get_ky_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лџМЕлил┤МЕл╗л│МЕлй ЛёлЙЛђл╝л░Лѓ"##),
        ("src-fmt", r##"лЉЛЃл╗л░л║ Лёл░л╣л╗ ЛёлЙЛђл╝л░ЛѓЛІ"##),
    ],
}
}

/// ky: л║ЛІЛђл│ЛІлиЛЄл░, лџлИЛђлИл╗л╗, лџЛІЛђл│ЛІлиЛЂЛѓл░лй
pub(super) const fn get_ky_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ky_map_conversion),
        ("get", get_ky_map_get),
        ("set_md", get_ky_map_set_md),
        ("set", get_ky_map_set),
        ("conversion_md", get_ky_map_conversion_md),
    ],
}
}

/// Language ID: la;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Deficio ad automatice deprehendere forma.Placere specificare manually.");
/// ```
pub(super) const fn get_la_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Quod file non valet `JSON 1.0` Forma, conatur parse ut `json5` ..."##),
        ("not-included", r##"Hoc binarii ** non includit ** conversionem functionality ad pertinet format.
Vos postulo ut enable pertinet pluma in vestri `Cargo.toml` et recompile.
Si hoc software non includit correspondentes functionality, velit submittere an proventus."##),
        ("currently-supported", r##"Currently Formats List:"##),
        ("unsupported", r##"Unsupported Forma Conversion"##),
        ("auto-detection-failed", r##"Deficio ad automatice deprehendere forma.Placere specificare manually."##),
        ("not-support-deser-sexp", r##"** ** non valet tamen **: Converting a `Lisp S-expression` ut` Alii formats`"##),
        ("unknown-fmt", r##"Forma"##),
        ("not-saved", r##"Sequenti contentus ** non ** salvus erit quia `--save` non dicitur."##),
        ("dst", r##"Destination file semita"##),
        ("conv-error", r##"Conversion Error"##),
    ],
}
}

/// Language ID: la;
/// Map name: "conversion_md";
pub(super) const fn get_la_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mQuod file non valet [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Forma, conatur parse ut [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mHoc binarii ** non includit ** conversionem functionality ad pertinet format.
[48;2;34;34;34m[38;2;255;255;255mVos postulo ut enable pertinet pluma in vestri [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m et recompile.
[48;2;34;34;34m[38;2;255;255;255mSi hoc software non includit correspondentes functionality, velit submittere an proventus.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mCurrently Formats List:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mUnsupported Forma Conversion[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mDeficio ad automatice deprehendere forma.Placere specificare manually.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ** non valet tamen [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Converting a [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ut[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Alii formats[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mForma[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mSequenti contentus ** non ** salvus erit quia [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m non dicitur.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestination file semita[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mConversion Error[0m"##),
    ],
}
}

/// Language ID: la;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Aliquam File semita.");
/// ```
pub(super) const fn get_la_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Mutatio contentus ** non ** salvus erit quia `--sv` non vocavit."##),
        ("new-value", r##"Novum Value"##),
        ("invalid-path", r##"Aliquam File semita."##),
    ],
}
}

/// Language ID: la;
/// Map name: "set_md";
pub(super) const fn get_la_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mMutatio contentus ** non ** salvus erit quia [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m non vocavit.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNovum Value[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mAliquam File semita.[0m"##),
    ],
}
}

/// Language ID: la;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destination Format");
/// ```
pub(super) const fn get_la_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destination Format"##),
        ("src-fmt", r##"Fontem file format"##),
    ],
}
}

/// la: la-Latn-VA
pub(super) const fn get_la_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_la_map_conversion),
        ("get", get_la_map_get),
        ("set_md", get_la_map_set_md),
        ("set", get_la_map_set),
        ("conversion_md", get_la_map_conversion_md),
    ],
}
}

/// Language ID: lb;
/// Map name: "conversion";
/// Description: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ass net automatesch d'Format automatesch z'entdecken.Gitt w.e.g. manuell un.");
/// ```
pub(super) const fn get_lb_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** Net huet nach net ├Фnnerst├Фtzt **: Konvert├Еiert vun `Lisp S-Timer` op` Aner Formatoren`"##),
        ("unknown-fmt", r##"Onbekannt Dateiformat"##),
        ("currently-supported", r##"AKTAKT KONFACHT FORMITATER L├Фscht:"##),
        ("auto-detection-failed", r##"ass net automatesch d'Format automatesch z'entdecken.Gitt w.e.g. manuell un."##),
        ("not-included", r##"D├Фst bin├цr *** D'Konversiouns Funktionalit├Еit fir d├Еi entspriechend Format.
Dir musst d├Еi relevant Feature an ├ёrem `cargo.atoml` erlaben an erholl.
Wann d├Фs Software net d├Еi entspriechend Funktionalit├Еit enth├цlt, da gitt w.e.g."##),
        ("conv-error", r##"Conversiounsfeeler"##),
        ("dst", r##"Destinatioun Dateiwee"##),
        ("unsupported", r##"net ├Фnnerst├Фtzten Format Konversioun"##),
        ("invalid-json1.0", r##"ass d'Datei net e g├╝lteg `JSON 1.0`. Format, prob├Еiert als `JSON5` ..."##),
    ],
}
}

/// Language ID: lb;
/// Map name: "conversion_md";
/// Description: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg;
pub(super) const fn get_lb_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Net huet nach net ├Фnnerst├Фtzt [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konvert├Еiert vun [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Timer[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m op[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Aner Formatoren[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mOnbekannt Dateiformat[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAKTAKT KONFACHT FORMITATER L├Фscht:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mass net automatesch d'Format automatesch z'entdecken.Gitt w.e.g. manuell un.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mD├Фst bin├цr *** D'Konversiouns Funktionalit├Еit fir d├Еi entspriechend Format.
[48;2;34;34;34m[38;2;255;255;255mDir musst d├Еi relevant Feature an ├ёrem [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mcargo.atoml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m erlaben an erholl.
[48;2;34;34;34m[38;2;255;255;255mWann d├Фs Software net d├Еi entspriechend Funktionalit├Еit enth├цlt, da gitt w.e.g.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mConversiounsfeeler[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestinatioun Dateiwee[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mnet ├Фnnerst├Фtzten Format Konversioun[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mass d'Datei net e g├╝lteg [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m. Format, prob├Еiert als [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
    ],
}
}

/// Language ID: lb;
/// Map name: "set";
/// Description: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ong├Фlteg Dateiwee.");
/// ```
pub(super) const fn get_lb_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##">"##),
        ("new-value", r##"Neie W├цert"##),
        ("invalid-path", r##"Ong├Фlteg Dateiwee."##),
    ],
}
}

/// Language ID: lb;
/// Map name: "set_md";
/// Description: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg;
pub(super) const fn get_lb_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;102;217;239m>[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNeie W├цert[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mOng├Фlteg Dateiwee.[0m"##),
    ],
}
}

/// Language ID: lb;
/// Map name: "get";
/// Description: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destinatioun Format");
/// ```
pub(super) const fn get_lb_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destinatioun Format"##),
        ("src-fmt", r##"Quell Datei Format"##),
    ],
}
}

/// lb: L├Фtzebuergesch, Lat├Еngesch, L├Фtzebuerg
pub(super) const fn get_lb_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_lb_map_conversion),
        ("get", get_lb_map_get),
        ("set_md", get_lb_map_set_md),
        ("set", get_lb_map_set),
        ("conversion_md", get_lb_map_conversion_md),
    ],
}
}

/// Language ID: lo;
/// Map name: "conversion";
/// Description: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я║Ц\u{ebb}\u{ec9}Я║АЯ╗ђЯ║ФЯ║ЦЯ║ДЯ╗ЃЯ║ЎЯ║ЂЯ║▓Я║ЎЯ║ЂЯ║ДЯ║ћЯ║ъ\u{ebb}Я║џЯ║«\u{eb9}Я║џЯ╗ЂЯ║џЯ║џЯ╗ѓЯ║ћЯ║ЇЯ║Г\u{eb1}Я║ћЯ║ЋЯ║░Я╗ѓЯ║ЎЯ║А\u{eb1}Я║ћ.Я║ЂЯ║░Я║Ц\u{eb8}Я║ЎЯ║▓Я║ЦЯ║░Я║џ\u{eb8}Я║ћ\u{ec9}Я║ДЯ║ЇЯ║Ћ\u{ebb}Я║ЎЯ╗ђЯ║ГЯ║Є.");
/// ```
pub(super) const fn get_lo_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"Я║ѓЯ╗ЇЯ╗ЅЯ║юЯ║┤Я║ћЯ║ъЯ║▓Я║ћЯ╗ЃЯ║ЎЯ║ЂЯ║▓Я║ЎЯ╗ЂЯ║ЏЯ║Є"##),
        ("not-support-deser-sexp", r##"** Я║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ЂЯ║▓Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║ЎЯ╗ђЯ║ЌЯ║иЯ╗ѕЯ║Г"##),
        ("dst", r##"Я╗ђЯ║фЯ║▒Я╗ЅЯ║ЎЯ║ЌЯ║▓Я║ЄЯ╗ёЯ║ЪЯ║ЦЯ╗їЯ║ЏЯ║▓Я║ЇЯ║ЌЯ║▓Я║Є"##),
        ("unsupported", r##"Я║ЂЯ║▓Я║ЎЯ╗ЂЯ║ЏЯ║ЄЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ║ЌЯ║хЯ╗ѕЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ЂЯ║▓Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║Ў"##),
        ("auto-detection-failed", r##"Я║ЦЯ║╗Я╗ЅЯ║АЯ╗ђЯ║ФЯ║ЦЯ║ДЯ╗ЃЯ║ЎЯ║ЂЯ║▓Я║ЎЯ║ЂЯ║ДЯ║ћЯ║ъЯ║╗Я║џЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ╗ѓЯ║ћЯ║ЇЯ║ГЯ║▒Я║ћЯ║ЋЯ║░Я╗ѓЯ║ЎЯ║АЯ║▒Я║ћ.Я║ЂЯ║░Я║ЦЯ║ИЯ║ЎЯ║▓Я║ЦЯ║░Я║џЯ║ИЯ║ћЯ╗ЅЯ║ДЯ║ЇЯ║ЋЯ║╗Я║ЎЯ╗ђЯ║ГЯ║Є."##),
        ("currently-supported", r##"Я║ЏЯ║░Я║ѕЯ║ИЯ║џЯ║▒Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║ЎЯ║џЯ║▒Я║ЎЯ║іЯ║хЯ║ЦЯ║▓Я║ЇЯ║іЯ║иЯ╗ѕЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џ:"##),
        ("not-included", r##"Binary Я║ЎЯ║хЯ╗Ѕ ** Я║џЯ╗ЇЯ╗ѕЯ║ЦЯ║ДЯ║АЯ╗ђЯ║ГЯ║╗Я║▓ ** Я║ЂЯ║▓Я║ЎЯ╗ђЯ║«Я║▒Я║ћЯ║ДЯ║йЯ║ЂЯ║ѓЯ║ГЯ║ЄЯ║ЂЯ║▓Я║ЎЯ║ЏЯ╗ѕЯ║йЯ║ЎЯ╗ЃЯ║ѕЯ╗ђЯ║ФЯ║ЦЯ║иЯ╗ЅЯ║ГЯ║АЯ╗ЃЯ║фЯ║фЯ╗ЇЯ║▓Я║ЦЯ║▒Я║џЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ║ЌЯ║хЯ╗ѕЯ║ЂЯ╗ѕЯ║йЯ║ДЯ║ѓЯ╗ЅЯ║ГЯ║Є.
Я║ЌЯ╗ѕЯ║▓Я║ЎЯ║ѕЯ╗ЇЯ║▓Я╗ђЯ║ЏЯ║▒Я║ЎЯ║ЋЯ╗ЅЯ║ГЯ║ЄЯ╗ђЯ║ЏЯ║хЯ║ћЯ╗ЃЯ║іЯ╗ЅЯ║ёЯ║ИЯ║ЎЯ║фЯ║╗Я║АЯ║џЯ║▒Я║ћЯ║ЌЯ║хЯ╗ѕЯ║ЂЯ╗ѕЯ║йЯ║ДЯ║ѓЯ╗ЅЯ║ГЯ║ЄЯ╗ЃЯ║Ў `Cargo.Toml` Я╗ЂЯ║ЦЯ║░ recompile.
Я║ќЯ╗ЅЯ║▓Я║іЯ║ГЯ║џЯ╗ЂЯ║ДЯ║ЎЯ║хЯ╗ЅЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║ЦЯ║ДЯ║АЯ╗ђЯ║ГЯ║╗Я║▓Я║ЂЯ║▓Я║ЎЯ╗ђЯ║«Я║▒Я║ћЯ║ДЯ║йЯ║ЂЯ║ЌЯ║хЯ╗ѕЯ║фЯ║ГЯ║ћЯ║ёЯ╗ЅЯ║ГЯ║ЄЯ║ЂЯ║▒Я║Ў, Я║ЂЯ║░Я║ЦЯ║ИЯ║ЎЯ║▓Я║фЯ║╗Я╗ѕЯ║ЄЯ║џЯ║▒Я║ЎЯ║ФЯ║▓."##),
        ("unknown-fmt", r##"Я║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ║ЌЯ║хЯ╗ѕЯ║џЯ╗ЇЯ╗ѕЯ║«Я║╣Я╗ЅЯ║ѕЯ║▒Я║Ђ"##),
    ],
}
}

/// Language ID: lo;
/// Map name: "conversion_md";
/// Description: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д;
pub(super) const fn get_lo_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║ѓЯ╗ЇЯ╗ЅЯ║юЯ║┤Я║ћЯ║ъЯ║▓Я║ћЯ╗ЃЯ║ЎЯ║ЂЯ║▓Я║ЎЯ╗ЂЯ║ЏЯ║Є[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Я║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ЂЯ║▓Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║ЎЯ╗ђЯ║ЌЯ║иЯ╗ѕЯ║Г[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╗ђЯ║фЯ║▒Я╗ЅЯ║ЎЯ║ЌЯ║▓Я║ЄЯ╗ёЯ║ЪЯ║ЦЯ╗їЯ║ЏЯ║▓Я║ЇЯ║ЌЯ║▓Я║Є[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║ЂЯ║▓Я║ЎЯ╗ЂЯ║ЏЯ║ЄЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ║ЌЯ║хЯ╗ѕЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ЂЯ║▓Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║Ў[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║ЦЯ║╗Я╗ЅЯ║АЯ╗ђЯ║ФЯ║ЦЯ║ДЯ╗ЃЯ║ЎЯ║ЂЯ║▓Я║ЎЯ║ЂЯ║ДЯ║ћЯ║ъЯ║╗Я║џЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ╗ѓЯ║ћЯ║ЇЯ║ГЯ║▒Я║ћЯ║ЋЯ║░Я╗ѓЯ║ЎЯ║АЯ║▒Я║ћ.Я║ЂЯ║░Я║ЦЯ║ИЯ║ЎЯ║▓Я║ЦЯ║░Я║џЯ║ИЯ║ћЯ╗ЅЯ║ДЯ║ЇЯ║ЋЯ║╗Я║ЎЯ╗ђЯ║ГЯ║Є.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║ЏЯ║░Я║ѕЯ║ИЯ║џЯ║▒Я║ЎЯ║фЯ║░Я║ФЯ║ЎЯ║▒Я║џЯ║фЯ║░Я║ФЯ║ЎЯ║╣Я║ЎЯ║џЯ║▒Я║ЎЯ║іЯ║хЯ║ЦЯ║▓Я║ЇЯ║іЯ║иЯ╗ѕЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џ:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary Я║ЎЯ║хЯ╗Ѕ ** Я║џЯ╗ЇЯ╗ѕЯ║ЦЯ║ДЯ║АЯ╗ђЯ║ГЯ║╗Я║▓ ** Я║ЂЯ║▓Я║ЎЯ╗ђЯ║«Я║▒Я║ћЯ║ДЯ║йЯ║ЂЯ║ѓЯ║ГЯ║ЄЯ║ЂЯ║▓Я║ЎЯ║ЏЯ╗ѕЯ║йЯ║ЎЯ╗ЃЯ║ѕЯ╗ђЯ║ФЯ║ЦЯ║иЯ╗ЅЯ║ГЯ║АЯ╗ЃЯ║фЯ║фЯ╗ЇЯ║▓Я║ЦЯ║▒Я║џЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ║ЌЯ║хЯ╗ѕЯ║ЂЯ╗ѕЯ║йЯ║ДЯ║ѓЯ╗ЅЯ║ГЯ║Є.
[48;2;34;34;34m[38;2;255;255;255mЯ║ЌЯ╗ѕЯ║▓Я║ЎЯ║ѕЯ╗ЇЯ║▓Я╗ђЯ║ЏЯ║▒Я║ЎЯ║ЋЯ╗ЅЯ║ГЯ║ЄЯ╗ђЯ║ЏЯ║хЯ║ћЯ╗ЃЯ║іЯ╗ЅЯ║ёЯ║ИЯ║ЎЯ║фЯ║╗Я║АЯ║џЯ║▒Я║ћЯ║ЌЯ║хЯ╗ѕЯ║ЂЯ╗ѕЯ║йЯ║ДЯ║ѓЯ╗ЅЯ║ГЯ║ЄЯ╗ЃЯ║Ў [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я╗ЂЯ║ЦЯ║░ recompile.
[48;2;34;34;34m[38;2;255;255;255mЯ║ќЯ╗ЅЯ║▓Я║іЯ║ГЯ║џЯ╗ЂЯ║ДЯ║ЎЯ║хЯ╗ЅЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║ЦЯ║ДЯ║АЯ╗ђЯ║ГЯ║╗Я║▓Я║ЂЯ║▓Я║ЎЯ╗ђЯ║«Я║▒Я║ћЯ║ДЯ║йЯ║ЂЯ║ЌЯ║хЯ╗ѕЯ║фЯ║ГЯ║ћЯ║ёЯ╗ЅЯ║ГЯ║ЄЯ║ЂЯ║▒Я║Ў, Я║ЂЯ║░Я║ЦЯ║ИЯ║ЎЯ║▓Я║фЯ║╗Я╗ѕЯ║ЄЯ║џЯ║▒Я║ЎЯ║ФЯ║▓.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ║ЌЯ║хЯ╗ѕЯ║џЯ╗ЇЯ╗ѕЯ║«Я║╣Я╗ЅЯ║ѕЯ║▒Я║Ђ[0m"##),
    ],
}
}

/// Language ID: lo;
/// Map name: "set";
/// Description: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я╗ђЯ║ф\u{eb1}\u{ec9}Я║ЎЯ║ЌЯ║▓Я║ЄЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ║џ\u{ecd}\u{ec8}Я║ќ\u{eb7}Я║ЂЯ║Ћ\u{ec9}Я║ГЯ║Є.");
/// ```
pub(super) const fn get_lo_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я╗ђЯ║ЎЯ║иЯ╗ЅЯ║ГЯ║ФЯ║▓Я║ЌЯ║хЯ╗ѕЯ║ќЯ║иЯ║ЂЯ║ћЯ║▒Я║ћЯ╗ЂЯ║ЂЯ╗Ѕ ** Я║ѕЯ║░Я║џЯ╗ЇЯ╗ѕ ** Я║ѕЯ║░Я╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ёЯ║ДЯ║▓Я║АЯ║ЦЯ║ГЯ║ћЯ╗ђЯ║ъЯ║▓Я║░Я║ДЯ╗ѕЯ║▓ `- Я║ѓЯ╗ЅЯ║ГЯ║ЇЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║ќЯ║иЯ║ЂЯ╗ђЯ║ГЯ║хЯ╗ЅЯ║Ў."##),
        ("new-value", r##"Я║АЯ║╣Я║ЎЯ║ёЯ╗ѕЯ║▓Я╗ЃЯ║ФЯ║АЯ╗ѕ"##),
        ("invalid-path", r##"Я╗ђЯ║фЯ║▒Я╗ЅЯ║ЎЯ║ЌЯ║▓Я║ЄЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ║џЯ╗ЇЯ╗ѕЯ║ќЯ║иЯ║ЂЯ║ЋЯ╗ЅЯ║ГЯ║Є."##),
    ],
}
}

/// Language ID: lo;
/// Map name: "set_md";
/// Description: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д;
pub(super) const fn get_lo_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╗ђЯ║ЎЯ║иЯ╗ЅЯ║ГЯ║ФЯ║▓Я║ЌЯ║хЯ╗ѕЯ║ќЯ║иЯ║ЂЯ║ћЯ║▒Я║ћЯ╗ЂЯ║ЂЯ╗Ѕ ** Я║ѕЯ║░Я║џЯ╗ЇЯ╗ѕ ** Я║ѕЯ║░Я╗ёЯ║ћЯ╗ЅЯ║«Я║▒Я║џЯ║ёЯ║ДЯ║▓Я║АЯ║ЦЯ║ГЯ║ћЯ╗ђЯ║ъЯ║▓Я║░Я║ДЯ╗ѕЯ║▓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- Я║ѓЯ╗ЅЯ║ГЯ║ЇЯ║џЯ╗ЇЯ╗ѕЯ╗ёЯ║ћЯ╗ЅЯ║ќЯ║иЯ║ЂЯ╗ђЯ║ГЯ║хЯ╗ЅЯ║Ў.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯ║АЯ║╣Я║ЎЯ║ёЯ╗ѕЯ║▓Я╗ЃЯ║ФЯ║АЯ╗ѕ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╗ђЯ║фЯ║▒Я╗ЅЯ║ЎЯ║ЌЯ║▓Я║ЄЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ║џЯ╗ЇЯ╗ѕЯ║ќЯ║иЯ║ЂЯ║ЋЯ╗ЅЯ║ГЯ║Є.[0m"##),
    ],
}
}

/// Language ID: lo;
/// Map name: "get";
/// Description: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Я║«\u{eb9}Я║џЯ╗ЂЯ║џЯ║џЯ║ЏЯ║▓Я║ЇЯ║ЌЯ║▓Я║Є");
/// ```
pub(super) const fn get_lo_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Я║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ║ЏЯ║▓Я║ЇЯ║ЌЯ║▓Я║Є"##),
        ("src-fmt", r##"Я║«Я║╣Я║џЯ╗ЂЯ║џЯ║џЯ╗ђЯ║ГЯ║ЂЯ║░Я║фЯ║▓Я║ЎЯ╗ЂЯ║ФЯ║╝Я╗ѕЯ║ЄЯ║ѓЯ╗ЇЯ╗ЅЯ║АЯ║╣Я║Ў"##),
    ],
}
}

/// lo: Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д, Я║ЦЯ║▓Я║Д
pub(super) const fn get_lo_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_lo_map_conversion),
        ("get", get_lo_map_get),
        ("set_md", get_lo_map_set_md),
        ("set", get_lo_map_set),
        ("conversion_md", get_lo_map_conversion_md),
    ],
}
}

/// Language ID: lt;
/// Map name: "conversion";
/// Description: lietuvi┼│, lotyn┼│, Lietuva;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nepavyko automati┼Аkai aptikti formato.Nurodykite rankiniu b┼Фdu.");
/// ```
pub(super) const fn get_lt_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** dar nepalaikomas **: Konvertuoti i┼А Рђъlisp s-ekspressionРђю ─» Рђъkitus formatusРђю"##),
        ("unknown-fmt", r##"Ne┼Йinomas failo formatas"##),
        ("currently-supported", r##"┼аiuo metu palaikom┼│ format┼│ s─Ёra┼Аas:"##),
        ("auto-detection-failed", r##"Nepavyko automati┼Аkai aptikti formato.Nurodykite rankiniu b┼Фdu."##),
        ("not-included", r##"┼аis dvejetainis ** neapima ** atitinkamo formato konvertavimo funkcijos.
Turite ─»galinti atitinkam─Ё funkcij─Ё РђъCargo.tomlРђю ir perkompiliuoti.
Jei ┼Аioje programin─Ќje ─»rangoje n─Ќra atitinkamos funkcijos, pateikite problem─Ё."##),
        ("conv-error", r##"Konversijos klaida"##),
        ("dst", r##"paskirties failo kelias"##),
        ("unsupported", r##"Nepalaikomas formato konvertavimas"##),
        ("invalid-json1.0", r##"Failas n─Ќra galiojantis РђъJSON 1.0Рђю formatas, bandantis i┼Аanalizuoti kaip РђъJSON5Рђю ..."##),
    ],
}
}

/// Language ID: lt;
/// Map name: "conversion_md";
/// Description: lietuvi┼│, lotyn┼│, Lietuva;
pub(super) const fn get_lt_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** dar nepalaikomas [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konvertuoti i┼А Рђъlisp s-ekspressionРђю ─» Рђъkitus formatusРђю[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNe┼Йinomas failo formatas[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m┼аiuo metu palaikom┼│ format┼│ s─Ёra┼Аas:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNepavyko automati┼Аkai aptikti formato.Nurodykite rankiniu b┼Фdu.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m┼аis dvejetainis ** neapima ** atitinkamo formato konvertavimo funkcijos.
[48;2;34;34;34m[38;2;255;255;255mTurite ─»galinti atitinkam─Ё funkcij─Ё РђъCargo.tomlРђю ir perkompiliuoti.
[48;2;34;34;34m[38;2;255;255;255mJei ┼Аioje programin─Ќje ─»rangoje n─Ќra atitinkamos funkcijos, pateikite problem─Ё.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonversijos klaida[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mpaskirties failo kelias[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNepalaikomas formato konvertavimas[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFailas n─Ќra galiojantis РђъJSON 1.0Рђю formatas, bandantis i┼Аanalizuoti kaip РђъJSON5Рђю ...[0m"##),
    ],
}
}

/// Language ID: lt;
/// Map name: "set";
/// Description: lietuvi┼│, lotyn┼│, Lietuva;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neteisingas failo kelias.");
/// ```
pub(super) const fn get_lt_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Modifikuotas turinys ** nebus i┼Аsaugotas, nes Рђъ--svРђю nebuvo i┼Аkviestas."##),
        ("new-value", r##"Nauja vert─Ќ"##),
        ("invalid-path", r##"Neteisingas failo kelias."##),
    ],
}
}

/// Language ID: lt;
/// Map name: "set_md";
/// Description: lietuvi┼│, lotyn┼│, Lietuva;
pub(super) const fn get_lt_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mModifikuotas turinys ** nebus i┼Аsaugotas, nes Рђъ--svРђю nebuvo i┼Аkviestas.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNauja vert─Ќ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeteisingas failo kelias.[0m"##),
    ],
}
}

/// Language ID: lt;
/// Map name: "get";
/// Description: lietuvi┼│, lotyn┼│, Lietuva;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Paskirties formatas");
/// ```
pub(super) const fn get_lt_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Paskirties formatas"##),
        ("src-fmt", r##"┼аaltinio failo formatas"##),
    ],
}
}

/// lt: lietuvi┼│, lotyn┼│, Lietuva
pub(super) const fn get_lt_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_lt_map_conversion),
        ("get", get_lt_map_get),
        ("set_md", get_lt_map_set_md),
        ("set", get_lt_map_set),
        ("conversion_md", get_lt_map_conversion_md),
    ],
}
}

/// Language ID: lv;
/// Map name: "conversion";
/// Description: latvie┼Аu, lat─Ф┼єu, Latvija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Neizdev─Ђs autom─Ђtiski noteikt form─Ђtu.L┼Фdzu, nor─Ђdiet manu─Ђli.");
/// ```
pub(super) const fn get_lv_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fails nav der─Фgs `JSON 1.0` form─Ђts, m─Њ─Бinot pars─Њt k─Ђ `json5` ..."##),
        ("not-included", r##"┼аis bin─Ђrais ** neietver ** attiec─Фg─Ђ form─Ђta p─Ђrveido┼Аanas funkcionalit─Ђti.
Jums j─Ђiesp─Њjo attiec─Фg─Ђ funkcija sav─Ђ `Cargo.toml` un atk─Ђrtoti kompil─Њjiet.
Ja ┼А─Ф programmat┼Фra neietver atbilsto┼Аo funkcionalit─Ђti, l┼Фdzu, iesniedziet probl─Њmu."##),
        ("currently-supported", r##"Pa┼Аlaik atbalst─Фto form─Ђtu saraksts:"##),
        ("unsupported", r##"neatbalst─Фts form─Ђta konvert─Њ┼Аana"##),
        ("auto-detection-failed", r##"Neizdev─Ђs autom─Ђtiski noteikt form─Ђtu.L┼Фdzu, nor─Ђdiet manu─Ђli."##),
        ("not-support-deser-sexp", r##"** Pagaid─Ђm nav atbalst─Фts **: p─Ђrveido┼Аana no `lisp s-ekspresijas` uz" citiem form─Ђtiem ""##),
        ("unknown-fmt", r##"nezin─Ђms faila form─Ђts"##),
        ("not-saved", r##"┼аis saturs ** netiks saglab─Ђts, jo `--save` netika izsaukts."##),
        ("dst", r##"m─Њr─иa faila ce─╝┼А"##),
        ("conv-error", r##"rekl─Ђmguvumu k─╝┼Фda"##),
    ],
}
}

/// Language ID: lv;
/// Map name: "conversion_md";
/// Description: latvie┼Аu, lat─Ф┼єu, Latvija;
pub(super) const fn get_lv_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFails nav der─Фgs [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m form─Ђts, m─Њ─Бinot pars─Њt k─Ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m┼аis bin─Ђrais ** neietver ** attiec─Фg─Ђ form─Ђta p─Ђrveido┼Аanas funkcionalit─Ђti.
[48;2;34;34;34m[38;2;255;255;255mJums j─Ђiesp─Њjo attiec─Фg─Ђ funkcija sav─Ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m un atk─Ђrtoti kompil─Њjiet.
[48;2;34;34;34m[38;2;255;255;255mJa ┼А─Ф programmat┼Фra neietver atbilsto┼Аo funkcionalit─Ђti, l┼Фdzu, iesniedziet probl─Њmu.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mPa┼Аlaik atbalst─Фto form─Ђtu saraksts:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mneatbalst─Фts form─Ђta konvert─Њ┼Аana[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNeizdev─Ђs autom─Ђtiski noteikt form─Ђtu.L┼Фdzu, nor─Ђdiet manu─Ђli.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Pagaid─Ђm nav atbalst─Фts [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: p─Ђrveido┼Аana no [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-ekspresijas[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m uz" citiem form─Ђtiem "[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mnezin─Ђms faila form─Ђts[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255m┼аis saturs ** netiks saglab─Ђts, jo [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m netika izsaukts.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mm─Њr─иa faila ce─╝┼А[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mrekl─Ђmguvumu k─╝┼Фda[0m"##),
    ],
}
}

/// Language ID: lv;
/// Map name: "set";
/// Description: latvie┼Аu, lat─Ф┼єu, Latvija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "neder─Фgs faila ce─╝┼А.");
/// ```
pub(super) const fn get_lv_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Modific─Њtais saturs ** netiks saglab─Ђts, jo `--sv` netika izsaukts."##),
        ("new-value", r##"jauna v─Њrt─Фba"##),
        ("invalid-path", r##"neder─Фgs faila ce─╝┼А."##),
    ],
}
}

/// Language ID: lv;
/// Map name: "set_md";
/// Description: latvie┼Аu, lat─Ф┼єu, Latvija;
pub(super) const fn get_lv_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mModific─Њtais saturs ** netiks saglab─Ђts, jo [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m netika izsaukts.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mjauna v─Њrt─Фba[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mneder─Фgs faila ce─╝┼А.[0m"##),
    ],
}
}

/// Language ID: lv;
/// Map name: "get";
/// Description: latvie┼Аu, lat─Ф┼єu, Latvija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Galam─Њr─иa form─Ђts");
/// ```
pub(super) const fn get_lv_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Galam─Њr─иa form─Ђts"##),
        ("src-fmt", r##"Avota faila form─Ђts"##),
    ],
}
}

/// lv: latvie┼Аu, lat─Ф┼єu, Latvija
pub(super) const fn get_lv_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_lv_map_conversion),
        ("get", get_lv_map_get),
        ("set_md", get_lv_map_set_md),
        ("set", get_lv_map_set),
        ("conversion_md", get_lv_map_conversion_md),
    ],
}
}

/// Language ID: mg;
/// Map name: "conversion";
/// Description: Malagasy, Latn, Madagasikara;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "tsy nahavita namantatra ny format.Azafady, farito amin'ny fomba manual.");
/// ```
pub(super) const fn get_mg_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 8694567506910003252,
    disps: &[
        (2, 1),
        (5, 0),
    ],
    entries: &[
        ("unknown-fmt", r##"Format rakitra tsy fantatra"##),
        ("unsupported", r##"fiovam-po tsy azo antoka"##),
        ("dst", r##"Lalana rakitra toerana"##),
        ("invalid-json1.0", r##"Ny rakitra dia tsy ny endrika 'JSON 1.0'"##),
        ("not-included", r##"Ity binary ity ** tsy ahitana ny fiasa ** ny fiovam-po amin'ny endrika mifanaraka amin'izany.
Mila mamela ny endri-javatra mifanaraka amin'ny `Cargo.toml` ianao ary averina.
Raha tsy misy ny rindranasa mifanaraka amin'izany dia azafady alefaso ny olana iray."##),
        ("auto-detection-failed", r##"tsy nahavita namantatra ny format.Azafady, farito amin'ny fomba manual."##),
        ("conv-error", r##"Fahadisoana fiovam-po"##),
        ("currently-supported", r##"misy lisitra misy eo amin'ny endrika ankehitriny:"##),
    ],
}
}

/// Language ID: mg;
/// Map name: "conversion_md";
/// Description: Malagasy, Latn, Madagasikara;
pub(super) const fn get_mg_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 8694567506910003252,
    disps: &[
        (2, 1),
        (5, 0),
    ],
    entries: &[
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormat rakitra tsy fantatra[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mfiovam-po tsy azo antoka[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mLalana rakitra toerana[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mNy rakitra dia tsy ny endrika 'JSON 1.0'[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mIty binary ity ** tsy ahitana ny fiasa ** ny fiovam-po amin'ny endrika mifanaraka amin'izany.
[48;2;34;34;34m[38;2;255;255;255mMila mamela ny endri-javatra mifanaraka amin'ny [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ianao ary averina.
[48;2;34;34;34m[38;2;255;255;255mRaha tsy misy ny rindranasa mifanaraka amin'izany dia azafady alefaso ny olana iray.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mtsy nahavita namantatra ny format.Azafady, farito amin'ny fomba manual.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mFahadisoana fiovam-po[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mmisy lisitra misy eo amin'ny endrika ankehitriny:[0m"##),
    ],
}
}

/// Language ID: mg;
/// Map name: "set";
/// Description: Malagasy, Latn, Madagasikara;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "lalana tsy mety.");
/// ```
pub(super) const fn get_mg_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Ny votoaty novaina ** dia tsy ho voavonjy satria tsy nantsoina ny `--sv`."##),
        ("new-value", r##"Sarobidy vaovao"##),
        ("invalid-path", r##"lalana tsy mety."##),
    ],
}
}

/// Language ID: mg;
/// Map name: "set_md";
/// Description: Malagasy, Latn, Madagasikara;
pub(super) const fn get_mg_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mNy votoaty novaina ** dia tsy ho voavonjy satria tsy nantsoina ny [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mSarobidy vaovao[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mlalana tsy mety.[0m"##),
    ],
}
}

/// Language ID: mg;
/// Map name: "get";
/// Description: Malagasy, Latn, Madagasikara;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format format");
/// ```
pub(super) const fn get_mg_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format format"##),
        ("src-fmt", r##"Format rakitra loharano"##),
    ],
}
}

/// mg: Malagasy, Latn, Madagasikara
pub(super) const fn get_mg_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mg_map_conversion),
        ("get", get_mg_map_get),
        ("set_md", get_mg_map_set_md),
        ("set", get_mg_map_set),
        ("conversion_md", get_mg_map_conversion_md),
    ],
}
}

/// Language ID: mi;
/// Map name: "conversion";
/// Description: M─Ђori, R─Ђtina, Aotearoa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "I rahua te tirotiro aunoa i te whakatakotoranga.Tena koa tohuhia.");
/// ```
pub(super) const fn get_mi_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** kaore ano kia tautokohia **: te huri mai i te 'Lisp S"##),
        ("unknown-fmt", r##"H┼Їputu K┼Їnae Kaore e mohiotia"##),
        ("currently-supported", r##"I tenei wa kua tautokohia te raarangi whakatakotoranga:"##),
        ("auto-detection-failed", r##"I rahua te tirotiro aunoa i te whakatakotoranga.Tena koa tohuhia."##),
        ("not-included", r##"Ko tenei ruau ** kaore i te whakauru ** te mahinga whakawhitinga mo te whakatakotoranga e tika ana.
Me whakahoihia e koe te ahuatanga e tika ana i roto i to `Cargo.toml` me te hoko mai.
Mena kaore i te whakauru atu tenei raupaparorohiko ki te mahinga e tika ana, tukuna mai he take."##),
        ("conv-error", r##"Ko te hapa faafariu"##),
        ("dst", r##"Te Waehere K┼Їnae"##),
        ("unsupported", r##"Ko te hurihanga h┼Їputu kore tautokona"##),
        ("invalid-json1.0", r##"Ehara i te konae he whakatakotoranga tika a Json 1.0``````], e ngana ana ki te tarai i te 'JSON5` ..."##),
    ],
}
}

/// Language ID: mi;
/// Map name: "conversion_md";
/// Description: M─Ђori, R─Ђtina, Aotearoa;
pub(super) const fn get_mi_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** kaore ano kia tautokohia [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: te huri mai i te 'Lisp S[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mH┼Їputu K┼Їnae Kaore e mohiotia[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mI tenei wa kua tautokohia te raarangi whakatakotoranga:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mI rahua te tirotiro aunoa i te whakatakotoranga.Tena koa tohuhia.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mKo tenei ruau ** kaore i te whakauru ** te mahinga whakawhitinga mo te whakatakotoranga e tika ana.
[48;2;34;34;34m[38;2;255;255;255mMe whakahoihia e koe te ahuatanga e tika ana i roto i to [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m me te hoko mai.
[48;2;34;34;34m[38;2;255;255;255mMena kaore i te whakauru atu tenei raupaparorohiko ki te mahinga e tika ana, tukuna mai he take.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKo te hapa faafariu[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mTe Waehere K┼Їnae[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mKo te hurihanga h┼Їputu kore tautokona[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mEhara i te konae he whakatakotoranga tika a Json 1.0[48;2;34;34;34m[38;2;0;255;255m``````[48;2;34;34;34m[38;2;0;255;255m], e ngana ana ki te tarai i te 'JSON5` ...[0m"##),
    ],
}
}

/// Language ID: mi;
/// Map name: "set";
/// Description: M─Ђori, R─Ђtina, Aotearoa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Aratau K┼Їnae kore.");
/// ```
pub(super) const fn get_mi_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Ko te ihirangi kua whakarerekehia ** kaore e ora * na te mea kaore i karangahia."##),
        ("new-value", r##"Te uara hou"##),
        ("invalid-path", r##"Aratau K┼Їnae kore."##),
    ],
}
}

/// Language ID: mi;
/// Map name: "set_md";
/// Description: M─Ђori, R─Ђtina, Aotearoa;
pub(super) const fn get_mi_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mKo te ihirangi kua whakarerekehia ** kaore e ora * na te mea kaore i karangahia.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mTe uara hou[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mAratau K┼Їnae kore.[0m"##),
    ],
}
}

/// Language ID: mi;
/// Map name: "get";
/// Description: M─Ђori, R─Ђtina, Aotearoa;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "H┼Їputu ┼Фnga");
/// ```
pub(super) const fn get_mi_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"H┼Їputu ┼Фnga"##),
        ("src-fmt", r##"H┼Їputu konae"##),
    ],
}
}

/// mi: M─Ђori, R─Ђtina, Aotearoa
pub(super) const fn get_mi_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mi_map_conversion),
        ("get", get_mi_map_get),
        ("set_md", get_mi_map_set_md),
        ("set", get_mi_map_set),
        ("conversion_md", get_mi_map_conversion_md),
    ],
}
}

/// Language ID: mk;
/// Map name: "conversion";
/// Description: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлх ЛЃЛЂл┐лхл░ л░л▓ЛѓлЙл╝л░ЛѓЛЂл║лИ л┤л░ л│лЙ лЙЛѓл║ЛђлИлх ЛёлЙЛђл╝л░ЛѓлЙЛѓ.лњлх л╝лЙл╗лИл╝лх, лйл░л▓лхл┤лхЛѓлх Лђл░ЛЄлйлЙ.");
/// ```
pub(super) const fn get_mk_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лћл░ЛѓлЙЛѓлхл║л░Лѓл░ лйлх лх л▓л░л╗лИл┤лхлй ЛёлЙЛђл╝л░Лѓ `JSON 1.0`, лЙл▒лИл┤ЛЃл▓л░ЛўЛюлИ ЛЂлх л┤л░ ЛЂлх л░лйл░л╗лИлилИЛђл░ л║л░л║лЙ `json5` ..."##),
        ("not-included", r##"лъл▓л░л░ л▒лИлйл░Лђлйл░ ** лйлх л▓л║л╗ЛЃЛЄЛЃл▓л░ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ лил░ л║лЙлйл▓лхЛђлилИЛўл░ лил░ Лђлхл╗лхл▓л░лйЛѓлйлИлЙЛѓ ЛёлЙЛђл╝л░Лѓ.
лбЛђлхл▒л░ л┤л░ Лўл░ лЙл▓лЙлил╝лЙлХлИЛѓлх Лђлхл╗лхл▓л░лйЛѓлйл░Лѓл░ л║л░Лђл░л║ЛѓлхЛђлИЛЂЛѓлИл║л░ л▓лЙ л▓л░ЛѕлИлЙЛѓ `Cargo.toml` лИ л┤л░ ЛЂлх Лђлхл║лЙл╝л┐лИл╗лЙЛѓ.
лљл║лЙ лЙл▓лЙЛў ЛЂлЙЛёЛѓл▓лхЛђ лйлх Лўл░ л▓л║л╗ЛЃЛЄЛЃл▓л░ ЛЂлЙлЙл┤л▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л▓лх л╝лЙл╗лИл╝лх л┤лЙЛЂЛѓл░л▓лхЛѓлх л┐ЛђлЙл▒л╗лхл╝."##),
        ("currently-supported", r##"лблхл║лЙл▓лйлЙ л┐лЙл┤л┤ЛђлХл░лй ЛЂл┐лИЛЂлЙл║ ЛЂлЙ ЛёлЙЛђл╝л░ЛѓлИ:"##),
        ("unsupported", r##"лЮлхл┐лЙл┤л┤ЛђлХл░лйл░ л║лЙлйл▓лхЛђлилИЛўл░ лйл░ ЛёлЙЛђл╝л░Лѓ"##),
        ("auto-detection-failed", r##"лЮлх ЛЃЛЂл┐лхл░ л░л▓ЛѓлЙл╝л░ЛѓЛЂл║лИ л┤л░ л│лЙ лЙЛѓл║ЛђлИлх ЛёлЙЛђл╝л░ЛѓлЙЛѓ.лњлх л╝лЙл╗лИл╝лх, лйл░л▓лхл┤лхЛѓлх Лђл░ЛЄлйлЙ."##),
        ("not-support-deser-sexp", r##"** лА├е ЛЃЛѕЛѓлх лйлх лх л┐лЙл┤л┤ЛђлХл░лйлЙ **: лџлЙлйл▓лхЛђЛѓлИЛђл░Лџлх лЙл┤ `LISP S-лхл║ЛЂл┐ЛђлхЛЂлИЛўл░` л▓лЙРђъ л┤ЛђЛЃл│лИ ЛёлЙЛђл╝л░ЛѓлИ Рђю"##),
        ("unknown-fmt", r##"лЮлхл┐лЙлилйл░Лѓ ЛёлЙЛђл╝л░Лѓ лйл░ л┤л░ЛѓлЙЛѓлхл║л░"##),
        ("not-saved", r##"лАл╗лхл┤лйл░Лѓл░ ЛЂлЙл┤ЛђлХлИлйл░ ** лйлхл╝л░ л┤л░ ЛЂлх лил░ЛЄЛЃл▓л░ лил░ЛѓлЙл░ ЛѕЛѓлЙ лйлх л▒лхЛѕлх л┐лЙл▓лИл║л░лйл░ `--save`."##),
        ("dst", r##"л┐л░Лѓлхл║л░ лил░ л┤л░ЛѓлЙЛѓлхл║л░ лил░ л┤лхЛЂЛѓлИлйл░ЛєлИЛўл░"##),
        ("conv-error", r##"лЊЛђлхЛѕл║л░ л▓лЙ л║лЙлйл▓лхЛђлилИЛўл░"##),
    ],
}
}

/// Language ID: mk;
/// Map name: "conversion_md";
/// Description: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░;
pub(super) const fn get_mk_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлћл░ЛѓлЙЛѓлхл║л░Лѓл░ лйлх лх л▓л░л╗лИл┤лхлй ЛёлЙЛђл╝л░Лѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, лЙл▒лИл┤ЛЃл▓л░ЛўЛюлИ ЛЂлх л┤л░ ЛЂлх л░лйл░л╗лИлилИЛђл░ л║л░л║лЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлъл▓л░л░ л▒лИлйл░Лђлйл░ ** лйлх л▓л║л╗ЛЃЛЄЛЃл▓л░ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ лил░ л║лЙлйл▓лхЛђлилИЛўл░ лил░ Лђлхл╗лхл▓л░лйЛѓлйлИлЙЛѓ ЛёлЙЛђл╝л░Лѓ.
[48;2;34;34;34m[38;2;255;255;255mлбЛђлхл▒л░ л┤л░ Лўл░ лЙл▓лЙлил╝лЙлХлИЛѓлх Лђлхл╗лхл▓л░лйЛѓлйл░Лѓл░ л║л░Лђл░л║ЛѓлхЛђлИЛЂЛѓлИл║л░ л▓лЙ л▓л░ЛѕлИлЙЛѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лИ л┤л░ ЛЂлх Лђлхл║лЙл╝л┐лИл╗лЙЛѓ.
[48;2;34;34;34m[38;2;255;255;255mлљл║лЙ лЙл▓лЙЛў ЛЂлЙЛёЛѓл▓лхЛђ лйлх Лўл░ л▓л║л╗ЛЃЛЄЛЃл▓л░ ЛЂлЙлЙл┤л▓лхЛѓлйл░Лѓл░ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л▓лх л╝лЙл╗лИл╝лх л┤лЙЛЂЛѓл░л▓лхЛѓлх л┐ЛђлЙл▒л╗лхл╝.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлблхл║лЙл▓лйлЙ л┐лЙл┤л┤ЛђлХл░лй ЛЂл┐лИЛЂлЙл║ ЛЂлЙ ЛёлЙЛђл╝л░ЛѓлИ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐лЙл┤л┤ЛђлХл░лйл░ л║лЙлйл▓лхЛђлилИЛўл░ лйл░ ЛёлЙЛђл╝л░Лѓ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлх ЛЃЛЂл┐лхл░ л░л▓ЛѓлЙл╝л░ЛѓЛЂл║лИ л┤л░ л│лЙ лЙЛѓл║ЛђлИлх ЛёлЙЛђл╝л░ЛѓлЙЛѓ.лњлх л╝лЙл╗лИл╝лх, лйл░л▓лхл┤лхЛѓлх Лђл░ЛЄлйлЙ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лА├е ЛЃЛѕЛѓлх лйлх лх л┐лЙл┤л┤ЛђлХл░лйлЙ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: лџлЙлйл▓лхЛђЛѓлИЛђл░Лџлх лЙл┤ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLISP S-лхл║ЛЂл┐ЛђлхЛЂлИЛўл░[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m л▓лЙРђъ л┤ЛђЛЃл│лИ ЛёлЙЛђл╝л░ЛѓлИ Рђю[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐лЙлилйл░Лѓ ЛёлЙЛђл╝л░Лѓ лйл░ л┤л░ЛѓлЙЛѓлхл║л░[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлАл╗лхл┤лйл░Лѓл░ ЛЂлЙл┤ЛђлХлИлйл░ ** лйлхл╝л░ л┤л░ ЛЂлх лил░ЛЄЛЃл▓л░ лил░ЛѓлЙл░ ЛѕЛѓлЙ лйлх л▒лхЛѕлх л┐лЙл▓лИл║л░лйл░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mл┐л░Лѓлхл║л░ лил░ л┤л░ЛѓлЙЛѓлхл║л░ лил░ л┤лхЛЂЛѓлИлйл░ЛєлИЛўл░[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЊЛђлхЛѕл║л░ л▓лЙ л║лЙлйл▓лхЛђлилИЛўл░[0m"##),
    ],
}
}

/// Language ID: mk;
/// Map name: "set";
/// Description: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхл▓л░л╗лИл┤лйл░ л┐л░Лѓлхл║л░ лил░ л┤л░ЛѓлЙЛѓлхл║лИ.");
/// ```
pub(super) const fn get_mk_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"лўлил╝лхлйлхЛѓл░Лѓл░ ЛЂлЙл┤ЛђлХлИлйл░ ** лйлхл╝л░ л┤л░ ЛЂлх лил░ЛЄЛЃл▓л░ ** лил░ЛѓлЙл░ ЛѕЛѓлЙ `--sv` лйлх л▒лхЛѕлх л┐лЙл▓лИл║л░лйл░."##),
        ("new-value", r##"лйлЙл▓л░ л▓Лђлхл┤лйлЙЛЂЛѓ"##),
        ("invalid-path", r##"лЮлхл▓л░л╗лИл┤лйл░ л┐л░Лѓлхл║л░ лил░ л┤л░ЛѓлЙЛѓлхл║лИ."##),
    ],
}
}

/// Language ID: mk;
/// Map name: "set_md";
/// Description: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░;
pub(super) const fn get_mk_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлўлил╝лхлйлхЛѓл░Лѓл░ ЛЂлЙл┤ЛђлХлИлйл░ ** лйлхл╝л░ л┤л░ ЛЂлх лил░ЛЄЛЃл▓л░ ** лил░ЛѓлЙл░ ЛѕЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх л▒лхЛѕлх л┐лЙл▓лИл║л░лйл░.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлйлЙл▓л░ л▓Лђлхл┤лйлЙЛЂЛѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓л░л╗лИл┤лйл░ л┐л░Лѓлхл║л░ лил░ л┤л░ЛѓлЙЛѓлхл║лИ.[0m"##),
    ],
}
}

/// Language ID: mk;
/// Map name: "get";
/// Description: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░Лѓ лйл░ л┤лхЛЂЛѓлИлйл░ЛєлИЛўл░");
/// ```
pub(super) const fn get_mk_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцлЙЛђл╝л░Лѓ лйл░ л┤лхЛЂЛѓлИлйл░ЛєлИЛўл░"##),
        ("src-fmt", r##"лцлЙЛђл╝л░Лѓ лйл░ лИлил▓лЙЛђлйл░ л┤л░ЛѓлЙЛѓлхл║л░"##),
    ],
}
}

/// mk: л╝л░л║лхл┤лЙлйЛЂл║лИ, л║лИЛђлИл╗ЛЂл║лЙ л┐лИЛЂл╝лЙ, лАлхл▓лхЛђлйл░ люл░л║лхл┤лЙлйлИЛўл░
pub(super) const fn get_mk_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mk_map_conversion),
        ("get", get_mk_map_get),
        ("set_md", get_mk_map_set_md),
        ("set", get_mk_map_set),
        ("conversion_md", get_mk_map_conversion_md),
    ],
}
}

/// Language ID: ml;
/// Map name: "conversion";
/// Description: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я┤ФЯхІЯх╝Я┤«\u{d3e}Я┤▒\u{d4d}Я┤▒\u{d4d} Я┤И\u{d4d}Я┤хЯ┤ф\u{d4d}Я┤░ЯхЄЯ┤░Я┤┐Я┤цЯ┤«\u{d3e}Я┤»Я┤┐ Я┤ЋЯ┤Б\u{d4d}Я┤ЪЯхєЯ┤ц\u{d4d}Я┤ц\u{d41}Я┤е\u{d4d}Я┤еЯ┤цЯ┤┐Яхй Я┤фЯ┤░\u{d3e}Я┤юЯ┤»Я┤ф\u{d4d}Я┤фЯхєЯ┤Ъ\u{d4d}Я┤Ъ\u{d41}.Я┤И\u{d4d}Я┤хЯ┤«ЯхЄЯ┤ДЯ┤»\u{d3e} Я┤х\u{d4d}Я┤»Я┤Ћ\u{d4d}Я┤цЯ┤«\u{d3e}Я┤Ћ\u{d4d}Я┤Ћ\u{d41}Я┤Ћ.");
/// ```
pub(super) const fn get_ml_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** Я┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤еЯ┤┐Я┤▓ЯхЇЯ┤▓ **: `Я┤▓Я┤┐Я┤ИЯхЇЯ┤фЯхЇ Я┤јЯ┤ИЯхЇ-Я┤јЯ┤ЋЯхЇЯ┤ИЯхЇЯ┤фЯхЇЯ┤░Я┤иЯ┤еЯ┤┐Яхй Я┤еЯ┤┐Я┤еЯхЇЯ┤еЯхЇ` Я┤«Я┤▒ЯхЇЯ┤▒ЯхЇ Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇЯ┤ИЯхЇ` Я┤хЯ┤░Яхє Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ Я┤џЯхєЯ┤»ЯхЇЯ┤»ЯхЂЯ┤еЯхЇЯ┤еЯхЂ"##),
        ("unknown-fmt", r##"Я┤ЁЯ┤юЯхЇЯ┤ъЯ┤ЙЯ┤ц Я┤ФЯ┤»Яхй Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ"##),
        ("currently-supported", r##"Я┤еЯ┤┐Я┤▓Я┤хЯ┤┐Яхй Я┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤е Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤▓Я┤┐Я┤ИЯхЇЯ┤▒ЯхЇЯ┤▒ЯхЇ:"##),
        ("auto-detection-failed", r##"Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤ИЯхЇЯ┤хЯ┤фЯхЇЯ┤░ЯхЄЯ┤░Я┤┐Я┤цЯ┤«Я┤ЙЯ┤»Я┤┐ Я┤ЋЯ┤БЯхЇЯ┤ЪЯхєЯ┤цЯхЇЯ┤цЯхЂЯ┤еЯхЇЯ┤еЯ┤цЯ┤┐Яхй Я┤фЯ┤░Я┤ЙЯ┤юЯ┤»Я┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЇЯ┤ЪЯхЂ.Я┤ИЯхЇЯ┤хЯ┤«ЯхЄЯ┤ДЯ┤»Я┤Й Я┤хЯхЇЯ┤»Я┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤Ћ."##),
        ("not-included", r##"Я┤ѕ Я┤гЯхѕЯ┤еЯ┤▒Я┤┐ ** Я┤ЅЯхЙЯ┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЂЯ┤еЯхЇЯ┤еЯ┤┐Я┤▓ЯхЇЯ┤▓ ** Я┤фЯхЇЯ┤░Я┤ИЯ┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤» Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒Я┤┐Я┤еЯхЂЯ┤│ЯхЇЯ┤│ Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤е Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ.
Я┤еЯ┤┐Я┤ЎЯхЇЯ┤ЎЯ┤│ЯхЂЯ┤ЪЯхє ``argo.toml` Я┤ЪЯхЂ Я┤▒ЯхєЯ┤»Я┤┐Ях╗Я┤ИЯ┤┐Я┤ФЯхЂЯ┤ѓ Я┤фЯхЇЯ┤░Я┤ИЯ┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤» Я┤ИЯ┤хЯ┤┐Я┤ХЯхЄЯ┤иЯ┤ц Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ЋЯхЇЯ┤иЯ┤«Я┤«Я┤ЙЯ┤ЋЯхЇЯ┤ЋЯхЄЯ┤БЯхЇЯ┤ЪЯ┤цЯхЂЯ┤БЯхЇЯ┤ЪЯхЇ.
Я┤ѕ Я┤ИЯхІЯ┤ФЯхЇЯ┤▒ЯхЇЯ┤▒ЯхЇЯ┤хЯхєЯ┤»Я┤▒Я┤┐Я┤еЯхє Я┤ЁЯ┤еЯхЂЯ┤гЯ┤еЯхЇЯ┤Д Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ Я┤ЅЯхЙЯ┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЂЯ┤цЯхЇЯ┤цЯ┤┐Я┤»Я┤┐Я┤ЪЯхЇЯ┤ЪЯ┤┐Я┤▓ЯхЇЯ┤▓ЯхєЯ┤ЎЯхЇЯ┤ЋЯ┤┐Яхй, Я┤дЯ┤»Я┤хЯ┤ЙЯ┤»Я┤┐ Я┤њЯ┤░ЯхЂ Я┤фЯхЇЯ┤░Я┤ХЯхЇЯ┤еЯ┤ѓ Я┤ИЯ┤«Ях╝Я┤фЯхЇЯ┤фЯ┤┐Я┤ЋЯхЇЯ┤ЋЯхЂЯ┤Ћ."##),
        ("conv-error", r##"Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤е Я┤фЯ┤┐Я┤ХЯ┤ЋЯхЇ"##),
        ("dst", r##"Я┤АЯхєЯ┤ИЯхЇЯ┤▒ЯхЇЯ┤▒Я┤┐Я┤еЯхЄЯ┤иЯх╗ Я┤ФЯ┤»Яхй Я┤фЯ┤ЙЯ┤цЯхЇЯ┤цЯхЇ"##),
        ("unsupported", r##"Я┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯ┤ЙЯ┤цЯхЇЯ┤ц Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ"##),
        ("invalid-json1.0", r##"Я┤ФЯ┤»Яхй Я┤њЯ┤░ЯхЂ Я┤ИЯ┤ЙЯ┤ДЯхЂЯ┤хЯ┤ЙЯ┤» `JSON 1.0` Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▓ЯхЇЯ┤▓, `JSON5` Я┤јЯ┤еЯхЇЯ┤еЯхЇ Я┤фЯ┤ЙЯ┤┤ЯхЇЯ┤ИЯхЂЯ┤џЯхєЯ┤»ЯхЇЯ┤»Я┤ЙЯх╗ Я┤ХЯхЇЯ┤░Я┤«Я┤┐Я┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤еЯхЂ."##),
    ],
}
}

/// Language ID: ml;
/// Map name: "conversion_md";
/// Description: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»;
pub(super) const fn get_ml_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Я┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤еЯ┤┐Я┤▓ЯхЇЯ┤▓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ┤▓Я┤┐Я┤ИЯхЇЯ┤фЯхЇ Я┤јЯ┤ИЯхЇ-Я┤јЯ┤ЋЯхЇЯ┤ИЯхЇЯ┤фЯхЇЯ┤░Я┤иЯ┤еЯ┤┐Яхй Я┤еЯ┤┐Я┤еЯхЇЯ┤еЯхЇ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я┤«Я┤▒ЯхЇЯ┤▒ЯхЇ Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇЯ┤ИЯхЇ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Я┤хЯ┤░Яхє Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ Я┤џЯхєЯ┤»ЯхЇЯ┤»ЯхЂЯ┤еЯхЇЯ┤еЯхЂ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤ЁЯ┤юЯхЇЯ┤ъЯ┤ЙЯ┤ц Я┤ФЯ┤»Яхй Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤еЯ┤┐Я┤▓Я┤хЯ┤┐Яхй Я┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤е Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤▓Я┤┐Я┤ИЯхЇЯ┤▒ЯхЇЯ┤▒ЯхЇ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤ИЯхЇЯ┤хЯ┤фЯхЇЯ┤░ЯхЄЯ┤░Я┤┐Я┤цЯ┤«Я┤ЙЯ┤»Я┤┐ Я┤ЋЯ┤БЯхЇЯ┤ЪЯхєЯ┤цЯхЇЯ┤цЯхЂЯ┤еЯхЇЯ┤еЯ┤цЯ┤┐Яхй Я┤фЯ┤░Я┤ЙЯ┤юЯ┤»Я┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЇЯ┤ЪЯхЂ.Я┤ИЯхЇЯ┤хЯ┤«ЯхЄЯ┤ДЯ┤»Я┤Й Я┤хЯхЇЯ┤»Я┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤ЋЯхЇЯ┤ЋЯхЂЯ┤Ћ.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤ѕ Я┤гЯхѕЯ┤еЯ┤▒Я┤┐ ** Я┤ЅЯхЙЯ┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЂЯ┤еЯхЇЯ┤еЯ┤┐Я┤▓ЯхЇЯ┤▓ ** Я┤фЯхЇЯ┤░Я┤ИЯ┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤» Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒Я┤┐Я┤еЯхЂЯ┤│ЯхЇЯ┤│ Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤е Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ.
[48;2;34;34;34m[38;2;255;255;255mЯ┤еЯ┤┐Я┤ЎЯхЇЯ┤ЎЯ┤│ЯхЂЯ┤ЪЯхє [48;2;34;34;34m[38;2;0;255;255m``[48;2;34;34;34m[38;2;0;255;255margo.toml` Я┤ЪЯхЂ Я┤▒ЯхєЯ┤»Я┤┐Ях╗Я┤ИЯ┤┐Я┤ФЯхЂЯ┤ѓ Я┤фЯхЇЯ┤░Я┤ИЯ┤ЋЯхЇЯ┤цЯ┤«Я┤ЙЯ┤» Я┤ИЯ┤хЯ┤┐Я┤ХЯхЄЯ┤иЯ┤ц Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ЋЯхЇЯ┤иЯ┤«Я┤«Я┤ЙЯ┤ЋЯхЇЯ┤ЋЯхЄЯ┤БЯхЇЯ┤ЪЯ┤цЯхЂЯ┤БЯхЇЯ┤ЪЯхЇ.
[48;2;34;34;34m[38;2;0;255;255mЯ┤ѕ Я┤ИЯхІЯ┤ФЯхЇЯ┤▒ЯхЇЯ┤▒ЯхЇЯ┤хЯхєЯ┤»Я┤▒Я┤┐Я┤еЯхє Я┤ЁЯ┤еЯхЂЯ┤гЯ┤еЯхЇЯ┤Д Я┤фЯхЇЯ┤░Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ Я┤ЅЯхЙЯ┤фЯхЇЯ┤фЯхєЯ┤ЪЯхЂЯ┤цЯхЇЯ┤цЯ┤┐Я┤»Я┤┐Я┤ЪЯхЇЯ┤ЪЯ┤┐Я┤▓ЯхЇЯ┤▓ЯхєЯ┤ЎЯхЇЯ┤ЋЯ┤┐Яхй, Я┤дЯ┤»Я┤хЯ┤ЙЯ┤»Я┤┐ Я┤њЯ┤░ЯхЂ Я┤фЯхЇЯ┤░Я┤ХЯхЇЯ┤еЯ┤ѓ Я┤ИЯ┤«Ях╝Я┤фЯхЇЯ┤фЯ┤┐Я┤ЋЯхЇЯ┤ЋЯхЂЯ┤Ћ.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤е Я┤фЯ┤┐Я┤ХЯ┤ЋЯхЇ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤АЯхєЯ┤ИЯхЇЯ┤▒ЯхЇЯ┤▒Я┤┐Я┤еЯхЄЯ┤иЯх╗ Я┤ФЯ┤»Яхй Я┤фЯ┤ЙЯ┤цЯхЇЯ┤цЯхЇ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤фЯ┤┐Я┤еЯхЇЯ┤цЯхЂЯ┤БЯ┤»ЯхЇЯ┤ЋЯхЇЯ┤ЋЯ┤ЙЯ┤цЯхЇЯ┤ц Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ Я┤фЯ┤░Я┤┐Я┤хЯх╝Я┤цЯхЇЯ┤цЯ┤еЯ┤ѓ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤ФЯ┤»Яхй Я┤њЯ┤░ЯхЂ Я┤ИЯ┤ЙЯ┤ДЯхЂЯ┤хЯ┤ЙЯ┤» [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▓ЯхЇЯ┤▓, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я┤јЯ┤еЯхЇЯ┤еЯхЇ Я┤фЯ┤ЙЯ┤┤ЯхЇЯ┤ИЯхЂЯ┤џЯхєЯ┤»ЯхЇЯ┤»Я┤ЙЯх╗ Я┤ХЯхЇЯ┤░Я┤«Я┤┐Я┤ЋЯхЇЯ┤ЋЯхЂЯ┤еЯхЇЯ┤еЯхЂ.[0m"##),
    ],
}
}

/// Language ID: ml;
/// Map name: "set";
/// Description: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я┤ЁЯ┤И\u{d3e}Я┤Д\u{d41}Я┤х\u{d3e}Я┤» Я┤ФЯ┤»Яхй Я┤ф\u{d3e}Я┤ц\u{d4d}Я┤ц\u{d4d}.");
/// ```
pub(super) const fn get_ml_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я┤фЯ┤░Я┤┐Я┤иЯхЇЯ┤ЋЯхЇЯ┤ЋЯ┤░Я┤┐Я┤џЯхЇЯ┤џ Я┤ЅЯ┤│ЯхЇЯ┤│Я┤ЪЯ┤ЋЯхЇЯ┤ЋЯ┤ѓ ** `--sv 'Я┤јЯ┤еЯхЇЯ┤еЯхЇ Я┤хЯ┤┐Я┤│Я┤┐Я┤ЋЯхЇЯ┤ЋЯ┤ЙЯ┤цЯхЇЯ┤цЯ┤цЯ┤┐Я┤еЯ┤ЙЯхй ** Я┤ИЯ┤ѓЯ┤░Я┤ЋЯхЇЯ┤иЯ┤┐Я┤ЋЯхЇЯ┤ЋЯ┤░ЯхЂЯ┤цЯхЇ."##),
        ("new-value", r##"Я┤фЯхЂЯ┤цЯ┤┐Я┤» Я┤«ЯхѓЯ┤▓ЯхЇЯ┤»Я┤ѓ"##),
        ("invalid-path", r##"Я┤ЁЯ┤ИЯ┤ЙЯ┤ДЯхЂЯ┤хЯ┤ЙЯ┤» Я┤ФЯ┤»Яхй Я┤фЯ┤ЙЯ┤цЯхЇЯ┤цЯхЇ."##),
    ],
}
}

/// Language ID: ml;
/// Map name: "set_md";
/// Description: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»;
pub(super) const fn get_ml_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤фЯ┤░Я┤┐Я┤иЯхЇЯ┤ЋЯхЇЯ┤ЋЯ┤░Я┤┐Я┤џЯхЇЯ┤џ Я┤ЅЯ┤│ЯхЇЯ┤│Я┤ЪЯ┤ЋЯхЇЯ┤ЋЯ┤ѓ ** [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv 'Я┤јЯ┤еЯхЇЯ┤еЯхЇ Я┤хЯ┤┐Я┤│Я┤┐Я┤ЋЯхЇЯ┤ЋЯ┤ЙЯ┤цЯхЇЯ┤цЯ┤цЯ┤┐Я┤еЯ┤ЙЯхй ** Я┤ИЯ┤ѓЯ┤░Я┤ЋЯхЇЯ┤иЯ┤┐Я┤ЋЯхЇЯ┤ЋЯ┤░ЯхЂЯ┤цЯхЇ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤фЯхЂЯ┤цЯ┤┐Я┤» Я┤«ЯхѓЯ┤▓ЯхЇЯ┤»Я┤ѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ┤ЁЯ┤ИЯ┤ЙЯ┤ДЯхЂЯ┤хЯ┤ЙЯ┤» Я┤ФЯ┤»Яхй Я┤фЯ┤ЙЯ┤цЯхЇЯ┤цЯхЇ.[0m"##),
    ],
}
}

/// Language ID: ml;
/// Map name: "get";
/// Description: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Я┤▓Я┤Ћ\u{d4d}Я┤и\u{d4d}Я┤» Я┤ФЯхІЯх╝Я┤«\u{d3e}Я┤▒\u{d4d}Я┤▒\u{d4d}");
/// ```
pub(super) const fn get_ml_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Я┤▓Я┤ЋЯхЇЯ┤иЯхЇЯ┤» Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ"##),
        ("src-fmt", r##"Я┤ЅЯ┤▒Я┤хЯ┤┐Я┤Ъ Я┤ФЯ┤»Яхй Я┤ФЯхІЯх╝Я┤«Я┤ЙЯ┤▒ЯхЇЯ┤▒ЯхЇ"##),
    ],
}
}

/// ml: Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤«Я┤▓Я┤»Я┤ЙЯ┤│Я┤ѓ, Я┤ЄЯ┤еЯхЇЯ┤цЯхЇЯ┤»
pub(super) const fn get_ml_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ml_map_conversion),
        ("get", get_ml_map_get),
        ("set_md", get_ml_map_set_md),
        ("set", get_ml_map_set),
        ("conversion_md", get_ml_map_conversion_md),
    ],
}
}

/// Language ID: mn;
/// Map name: "conversion";
/// Description: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░ЛѓЛІл│ л░л▓ЛѓлЙл╝л░Лѓл░л░Лђ лИл╗Лђм»м»л╗лХ ЛЄл░л┤ЛЂл░лйл│м»л╣.лЊл░Лђл░л░Лђ ЛѓлЙл┤лЙЛђЛЁлЙл╣л╗лйлЙ ЛЃЛЃ.");
/// ```
pub(super) const fn get_mn_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"лЦМЕЛђл▓м»м»л╗ЛЇЛЁ л░л╗л┤л░л░"##),
        ("not-support-deser-sexp", r##"** л┤ЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ л▒л░л╣л│л░л░ ЛЁл░Лђл░л░ЛЁл░лй л┤ЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ л▒л░л╣лйл░ **: `LISP S лИл╗ЛЇЛђЛЁлИл╣л╗ЛЇЛЁ 'лйЛї` лЉЛЃЛЂл░л┤ Formats` ЛђЛЃЛЃ ЛЁМЕЛђл▓м»м»л╗ЛЇЛЁ"##),
        ("dst", r##"лЌлЙЛђлИл╗ЛѓлЙЛѓ Лёл░л╣л╗ЛІлй лил░л╝"##),
        ("unsupported", r##"лћЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ ЛёлЙЛђл╝л░ЛѓЛІл│ ЛЁМЕЛђл▓м»м»л╗ЛЇЛЁ"##),
        ("auto-detection-failed", r##"лцлЙЛђл╝л░ЛѓЛІл│ л░л▓ЛѓлЙл╝л░Лѓл░л░Лђ лИл╗Лђм»м»л╗лХ ЛЄл░л┤ЛЂл░лйл│м»л╣.лЊл░Лђл░л░Лђ ЛѓлЙл┤лЙЛђЛЁлЙл╣л╗лйлЙ ЛЃЛЃ."##),
        ("currently-supported", r##"лъл┤лЙлЙл│лИл╣лй л▒л░л╣л┤л╗л░л░Лђ л┤ЛЇл╝лХлИл│л┤ЛЂЛЇлй ЛёлЙЛђл╝л░ЛѓЛІлй лХл░л│ЛЂл░л░л╗Лѓ:"##),
        ("not-included", r##"лГлйЛЇ ЛЁлЙЛЉЛђЛѓЛІлй ** лйЛї ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёлЙЛђл╝л░ЛѓЛІлй ЛЁЛЃл▓Лїл┤ ЛЁЛЃл▓лИЛђл│л░ЛЁ ЛёЛЃлйл║ЛєлИл╣л│ л░л│ЛЃЛЃл╗л░л░л│м»л╣ л▒л░л╣лйл░.
лбл░ `л░ЛЄл░л░лйЛІ` л░ЛЄл░л░лйЛІ.toml` л▒л░ Recompile-л┤ ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёЛЃлйл║ЛєлИл╣л│ лИл┤ЛЇл▓ЛЁлХм»м»л╗ЛЇЛЁ ЛЁЛЇЛђЛЇл│ЛѓЛЇл╣.
лЦЛЇЛђЛЇл▓ ЛЇлйЛЇ л┐ЛђлЙл│Лђл░л╝ лйЛї ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёЛЃлйл║ЛєлИл╣л│ лЙЛђЛЃЛЃл╗л░л░л│м»л╣ л▒лЙл╗ л░ЛЂЛЃЛЃл┤л╗ЛІл│ лИл╗л│ЛЇЛЇлйЛЇ м»м»."##),
        ("unknown-fmt", r##"File File Forment"##),
    ],
}
}

/// Language ID: mn;
/// Map name: "conversion_md";
/// Description: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗;
pub(super) const fn get_mn_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЦМЕЛђл▓м»м»л╗ЛЇЛЁ л░л╗л┤л░л░[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** л┤ЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ л▒л░л╣л│л░л░ ЛЁл░Лђл░л░ЛЁл░лй л┤ЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ л▒л░л╣лйл░ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLISP S лИл╗ЛЇЛђЛЁлИл╣л╗ЛЇЛЁ 'лйЛї[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m лЉЛЃЛЂл░л┤ Formats[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЛђЛЃЛЃ ЛЁМЕЛђл▓м»м»л╗ЛЇЛЁ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mлЌлЙЛђлИл╗ЛѓлЙЛѓ Лёл░л╣л╗ЛІлй лил░л╝[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлћЛЇл╝лХлИл│л┤ЛЇЛЇл│м»л╣ ЛёлЙЛђл╝л░ЛѓЛІл│ ЛЁМЕЛђл▓м»м»л╗ЛЇЛЁ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлцлЙЛђл╝л░ЛѓЛІл│ л░л▓ЛѓлЙл╝л░Лѓл░л░Лђ лИл╗Лђм»м»л╗лХ ЛЄл░л┤ЛЂл░лйл│м»л╣.лЊл░Лђл░л░Лђ ЛѓлЙл┤лЙЛђЛЁлЙл╣л╗лйлЙ ЛЃЛЃ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлъл┤лЙлЙл│лИл╣лй л▒л░л╣л┤л╗л░л░Лђ л┤ЛЇл╝лХлИл│л┤ЛЂЛЇлй ЛёлЙЛђл╝л░ЛѓЛІлй лХл░л│ЛЂл░л░л╗Лѓ:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлГлйЛЇ ЛЁлЙЛЉЛђЛѓЛІлй ** лйЛї ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёлЙЛђл╝л░ЛѓЛІлй ЛЁЛЃл▓Лїл┤ ЛЁЛЃл▓лИЛђл│л░ЛЁ ЛёЛЃлйл║ЛєлИл╣л│ л░л│ЛЃЛЃл╗л░л░л│м»л╣ л▒л░л╣лйл░.
[48;2;34;34;34m[38;2;255;255;255mлбл░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mл░ЛЄл░л░лйЛІ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m л░ЛЄл░л░лйЛІ.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m л▒л░ Recompile-л┤ ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёЛЃлйл║ЛєлИл╣л│ лИл┤ЛЇл▓ЛЁлХм»м»л╗ЛЇЛЁ ЛЁЛЇЛђЛЇл│ЛѓЛЇл╣.
[48;2;34;34;34m[38;2;0;255;255mлЦЛЇЛђЛЇл▓ ЛЇлйЛЇ л┐ЛђлЙл│Лђл░л╝ лйЛї ЛЁлЙл╗л▒лЙл│л┤лЙЛЁ ЛёЛЃлйл║ЛєлИл╣л│ лЙЛђЛЃЛЃл╗л░л░л│м»л╣ л▒лЙл╗ л░ЛЂЛЃЛЃл┤л╗ЛІл│ лИл╗л│ЛЇЛЇлйЛЇ м»м».[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFile File Forment[0m"##),
    ],
}
}

/// Language ID: mn;
/// Map name: "set";
/// Description: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЉЛЃЛђЛЃЛЃ Лёл░л╣л╗ЛІлй лил░л╝ л▒ЛЃЛђЛЃЛЃ л▒л░л╣лйл░.");
/// ```
pub(super) const fn get_mn_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"МеМЕЛђЛЄл╗МЕл│л┤ЛЂМЕлй л░л│ЛЃЛЃл╗л│л░ ** -л│ МЕМЕЛђЛЄл╗МЕЛЁ ** -ЛІл│ ** -л│ ЛЁл░л┤л│л░л╗л░ЛЁл│м»л╣."##),
        ("new-value", r##"лелИлйЛЇ ЛЃЛѓл│л░"##),
        ("invalid-path", r##"лЉЛЃЛђЛЃЛЃ Лёл░л╣л╗ЛІлй лил░л╝ л▒ЛЃЛђЛЃЛЃ л▒л░л╣лйл░."##),
    ],
}
}

/// Language ID: mn;
/// Map name: "set_md";
/// Description: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗;
pub(super) const fn get_mn_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mМеМЕЛђЛЄл╗МЕл│л┤ЛЂМЕлй л░л│ЛЃЛЃл╗л│л░ ** -л│ МЕМЕЛђЛЄл╗МЕЛЁ ** -ЛІл│ ** -л│ ЛЁл░л┤л│л░л╗л░ЛЁл│м»л╣.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлелИлйЛЇ ЛЃЛѓл│л░[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЉЛЃЛђЛЃЛЃ Лёл░л╣л╗ЛІлй лил░л╝ л▒ЛЃЛђЛЃЛЃ л▒л░л╣лйл░.[0m"##),
    ],
}
}

/// Language ID: mn;
/// Map name: "get";
/// Description: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лГЛђЛЁЛЇл╝ ЛЁЛЇЛЂЛЇл│");
/// ```
pub(super) const fn get_mn_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лГЛђЛЁЛЇл╝ ЛЁЛЇЛЂЛЇл│"##),
        ("src-fmt", r##"лГЛЁ Лёл░л╣л╗ Лёл░л╣л╗ЛІлй ЛёлЙЛђл╝л░Лѓ"##),
    ],
}
}

/// mn: л╝лЙлйл│лЙл╗, л║лИЛђлИл╗л╗, люлЙлйл│лЙл╗
pub(super) const fn get_mn_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mn_map_conversion),
        ("get", get_mn_map_get),
        ("set_md", get_mn_map_set_md),
        ("set", get_mn_map_set),
        ("conversion_md", get_mn_map_conversion_md),
    ],
}
}

/// Language ID: mr;
/// Map name: "conversion";
/// Description: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯцИ\u{94d}ЯцхЯц░\u{942}Яцф ЯцИ\u{94d}ЯцхЯц»\u{902}ЯцџЯц▓Яц┐ЯццЯцфЯцБ\u{947} ЯцХЯЦІЯцДЯцБ\u{94d}Яц»ЯцЙЯцц ЯцЁЯц»ЯцХЯцИ\u{94d}ЯцхЯЦђ.ЯцЋ\u{943}ЯцфЯц»ЯцЙ Яцх\u{94d}Яц»ЯцЋ\u{94d}ЯццЯц┐ЯцџЯц▓Яц┐ЯццЯцфЯцБ\u{947} ЯцеЯц┐Яц░\u{94d}ЯцдЯц┐Яци\u{94d}ЯцЪ ЯцЋЯц░ЯцЙ.");
/// ```
pub(super) const fn get_mr_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** ЯцЁЯцдЯЦЇЯц»ЯцЙЯцф ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцеЯцЙЯц╣ЯЦђ **: `Яц▓Яц┐ЯцИЯЦЇЯцф ЯцЈЯцИ-ЯцЈЯцЋЯЦЇЯцИЯцфЯЦЇЯц░ЯЦЄЯцХЯце` ЯцфЯцЙЯцИЯЦѓЯце `ЯцЄЯццЯц░ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцц Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░Яц┐Яцц ЯцЋЯц░ЯцБЯЦЄ"##),
        ("unknown-fmt", r##"ЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯцЙЯцЄЯц▓ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф"##),
        ("currently-supported", r##"ЯцИЯцДЯЦЇЯц»ЯцЙ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцѓЯцџЯЦђ Яц»ЯцЙЯцдЯЦђ:"##),
        ("auto-detection-failed", r##"ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцИЯЦЇЯцхЯц»ЯцѓЯцџЯц▓Яц┐ЯццЯцфЯцБЯЦЄ ЯцХЯЦІЯцДЯцБЯЦЇЯц»ЯцЙЯцц ЯцЁЯц»ЯцХЯцИЯЦЇЯцхЯЦђ.ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцхЯЦЇЯц»ЯцЋЯЦЇЯццЯц┐ЯцџЯц▓Яц┐ЯццЯцфЯцБЯЦЄ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЋЯц░ЯцЙ."##),
        ("not-included", r##"Яц»ЯцЙ ЯцгЯцЙЯц»ЯцеЯц░ЯЦђ ** Яц«ЯцДЯЦЇЯц»ЯЦЄ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцИЯцЙЯцаЯЦђ ** Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯц┐ЯциЯЦЇЯцЪ ЯцеЯцЙЯц╣ЯЦђ.
ЯцєЯцфЯц▓ЯЦЇЯц»ЯцЙЯц▓ЯцЙ ЯцєЯцфЯц▓ЯЦЇЯц»ЯцЙ `Caggo.toml` ЯцєЯцБЯц┐ recompile Яц«ЯцДЯЦђЯц▓ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцхЯЦѕЯцХЯц┐ЯциЯЦЇЯцЪЯЦЇЯц» ЯцИЯцЋЯЦЇЯциЯц« ЯцЋЯц░ЯцБЯЦЇЯц»ЯцЙЯцџЯЦђ ЯцєЯцхЯцХЯЦЇЯц»ЯцЋЯццЯцЙ ЯцєЯц╣ЯЦЄ.
Яц»ЯцЙ ЯцИЯЦЅЯцФЯЦЇЯцЪЯцхЯЦЄЯцЁЯц░Яц«ЯцДЯЦЇЯц»ЯЦЄ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯц┐ЯциЯЦЇЯцЪ ЯцеЯцИЯц▓ЯЦЇЯц»ЯцЙЯцИ, ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ ЯцИЯц«ЯцИЯЦЇЯц»ЯцЙ ЯцИЯцгЯц«Яц┐ЯцЪ ЯцЋЯц░ЯцЙ."##),
        ("conv-error", r##"Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯЦђ"##),
        ("dst", r##"ЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ"##),
        ("unsupported", r##"ЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ"##),
        ("invalid-json1.0", r##"ЯцФЯцЙЯцѕЯц▓ ЯцхЯЦѕЯцД ЯцеЯцЙЯц╣ЯЦђ `json 1.0` ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф, `json5` Яц«ЯЦЇЯц╣ЯцБЯЦѓЯце ЯцхЯц┐ЯцХЯЦЇЯц▓ЯЦЄЯциЯц┐Яцц ЯцЋЯц░ЯцБЯЦЇЯц»ЯцЙЯцџЯцЙ ЯцфЯЦЇЯц░Яц»ЯццЯЦЇЯце ЯцЋЯц░ЯЦђЯцц ЯцєЯц╣ЯЦЄ ..."##),
    ],
}
}

/// Language ID: mr;
/// Map name: "conversion_md";
/// Description: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
pub(super) const fn get_mr_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ЯцЁЯцдЯЦЇЯц»ЯцЙЯцф ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцеЯцЙЯц╣ЯЦђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯц▓Яц┐ЯцИЯЦЇЯцф ЯцЈЯцИ-ЯцЈЯцЋЯЦЇЯцИЯцфЯЦЇЯц░ЯЦЄЯцХЯце[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ЯцфЯцЙЯцИЯЦѓЯце [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯцЄЯццЯц░ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцц Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░Яц┐Яцц ЯцЋЯц░ЯцБЯЦЄ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯцЙЯцЄЯц▓ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯцИЯцДЯЦЇЯц»ЯцЙ ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцѓЯцџЯЦђ Яц»ЯцЙЯцдЯЦђ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯцИЯЦЇЯцхЯц░ЯЦѓЯцф ЯцИЯЦЇЯцхЯц»ЯцѓЯцџЯц▓Яц┐ЯццЯцфЯцБЯЦЄ ЯцХЯЦІЯцДЯцБЯЦЇЯц»ЯцЙЯцц ЯцЁЯц»ЯцХЯцИЯЦЇЯцхЯЦђ.ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцхЯЦЇЯц»ЯцЋЯЦЇЯццЯц┐ЯцџЯц▓Яц┐ЯццЯцфЯцБЯЦЄ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЋЯц░ЯцЙ.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯц»ЯцЙ ЯцгЯцЙЯц»ЯцеЯц░ЯЦђ ** Яц«ЯцДЯЦЇЯц»ЯЦЄ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцфЯцЙЯцИЯцЙЯцаЯЦђ ** Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯц┐ЯциЯЦЇЯцЪ ЯцеЯцЙЯц╣ЯЦђ.
[48;2;34;34;34m[38;2;255;255;255mЯцєЯцфЯц▓ЯЦЇЯц»ЯцЙЯц▓ЯцЙ ЯцєЯцфЯц▓ЯЦЇЯц»ЯцЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCaggo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцєЯцБЯц┐ recompile Яц«ЯцДЯЦђЯц▓ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцхЯЦѕЯцХЯц┐ЯциЯЦЇЯцЪЯЦЇЯц» ЯцИЯцЋЯЦЇЯциЯц« ЯцЋЯц░ЯцБЯЦЇЯц»ЯцЙЯцџЯЦђ ЯцєЯцхЯцХЯЦЇЯц»ЯцЋЯццЯцЙ ЯцєЯц╣ЯЦЄ.
[48;2;34;34;34m[38;2;255;255;255mЯц»ЯцЙ ЯцИЯЦЅЯцФЯЦЇЯцЪЯцхЯЦЄЯцЁЯц░Яц«ЯцДЯЦЇЯц»ЯЦЄ ЯцИЯцѓЯцгЯцѓЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯц┐ЯциЯЦЇЯцЪ ЯцеЯцИЯц▓ЯЦЇЯц»ЯцЙЯцИ, ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ ЯцИЯц«ЯцИЯЦЇЯц»ЯцЙ ЯцИЯцгЯц«Яц┐ЯцЪ ЯцЋЯц░ЯцЙ.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯЦђ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф Яц░ЯЦѓЯцфЯцЙЯцѓЯццЯц░ЯцБ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯцФЯцЙЯцѕЯц▓ ЯцхЯЦѕЯцД ЯцеЯцЙЯц╣ЯЦђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Яц«ЯЦЇЯц╣ЯцБЯЦѓЯце ЯцхЯц┐ЯцХЯЦЇЯц▓ЯЦЄЯциЯц┐Яцц ЯцЋЯц░ЯцБЯЦЇЯц»ЯцЙЯцџЯцЙ ЯцфЯЦЇЯц░Яц»ЯццЯЦЇЯце ЯцЋЯц░ЯЦђЯцц ЯцєЯц╣ЯЦЄ ...[0m"##),
    ],
}
}

/// Language ID: mr;
/// Map name: "set";
/// Description: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯцЁЯцх\u{948}ЯцД ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ.");
/// ```
pub(super) const fn get_mr_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯцИЯЦЂЯцДЯцЙЯц░Яц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ ** ** ЯцюЯццЯце ЯцЋЯЦЄЯц▓ЯЦђ ЯцюЯцЙЯцБЯцЙЯц░ ЯцеЯцЙЯц╣ЯЦђ ЯцЋЯцЙЯц░ЯцБ `--ЯцЈЯцИЯцхЯЦЇЯц╣ЯЦђЯцЊЯц▓ЯцЙ ЯцЋЯЦЅЯц▓ ЯцЋЯЦЄЯц▓ЯцЙ ЯцЌЯЦЄЯц▓ЯцЙ ЯцеЯцЙЯц╣ЯЦђ."##),
        ("new-value", r##"ЯцеЯцхЯЦђЯце Яц«ЯЦѓЯц▓ЯЦЇЯц»"##),
        ("invalid-path", r##"ЯцЁЯцхЯЦѕЯцД ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ."##),
    ],
}
}

/// Language ID: mr;
/// Map name: "set_md";
/// Description: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
pub(super) const fn get_mr_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯцИЯЦЂЯцДЯцЙЯц░Яц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ ** ** ЯцюЯццЯце ЯцЋЯЦЄЯц▓ЯЦђ ЯцюЯцЙЯцБЯцЙЯц░ ЯцеЯцЙЯц╣ЯЦђ ЯцЋЯцЙЯц░ЯцБ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--ЯцЈЯцИЯцхЯЦЇЯц╣ЯЦђЯцЊЯц▓ЯцЙ ЯцЋЯЦЅЯц▓ ЯцЋЯЦЄЯц▓ЯцЙ ЯцЌЯЦЄЯц▓ЯцЙ ЯцеЯцЙЯц╣ЯЦђ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯцеЯцхЯЦђЯце Яц«ЯЦѓЯц▓ЯЦЇЯц»[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцхЯЦѕЯцД ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ.[0m"##),
    ],
}
}

/// Language ID: mr;
/// Map name: "get";
/// Description: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯцЌ\u{902}ЯццЯцх\u{94d}Яц» ЯцИ\u{94d}ЯцхЯц░\u{942}Яцф");
/// ```
pub(super) const fn get_mr_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯцЌЯцѓЯццЯцхЯЦЇЯц» ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф"##),
        ("src-fmt", r##"ЯцИЯЦЇЯццЯЦЇЯц░ЯЦІЯцц ЯцФЯцЙЯцЄЯц▓ ЯцИЯЦЇЯцхЯц░ЯЦѓЯцф"##),
    ],
}
}

/// mr: Яц«Яц░ЯцЙЯцаЯЦђ, ЯцдЯЦЄЯцхЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцГЯцЙЯц░Яцц
pub(super) const fn get_mr_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mr_map_conversion),
        ("get", get_mr_map_get),
        ("set_md", get_mr_map_set_md),
        ("set", get_mr_map_set),
        ("conversion_md", get_mr_map_conversion_md),
    ],
}
}

/// Language ID: ms;
/// Map name: "conversion";
/// Description: Melayu, Latin, Malaysia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "gagal secara automatik mengesan format.Sila nyatakan secara manual.");
/// ```
pub(super) const fn get_ms_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fail bukan format `json 1.0` yang sah, cuba menghuraikan `json5` ..."##),
        ("not-included", r##"Binari ini ** tidak termasuk ** fungsi penukaran untuk format yang berkaitan.
Anda perlu mengaktifkan ciri yang relevan dalam `Cargo.toml` dan recompile.
Jika perisian ini tidak termasuk fungsi yang sepadan, sila hantar isu."##),
        ("currently-supported", r##"Senarai Format yang disokong sekarang:"##),
        ("unsupported", r##"penukaran format yang tidak disokong"##),
        ("auto-detection-failed", r##"gagal secara automatik mengesan format.Sila nyatakan secara manual."##),
        ("not-support-deser-sexp", r##"** belum disokong **: menukar dari `lisp s-expression` ke` format lain`"##),
        ("unknown-fmt", r##"format fail yang tidak diketahui"##),
        ("not-saved", r##"kandungan berikut ** tidak akan ** disimpan kerana `--save` tidak dipanggil."##),
        ("dst", r##"laluan fail destinasi"##),
        ("conv-error", r##"ralat penukaran"##),
    ],
}
}

/// Language ID: ms;
/// Map name: "conversion_md";
/// Description: Melayu, Latin, Malaysia;
pub(super) const fn get_ms_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFail bukan format [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m yang sah, cuba menghuraikan [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinari ini ** tidak termasuk ** fungsi penukaran untuk format yang berkaitan.
[48;2;34;34;34m[38;2;255;255;255mAnda perlu mengaktifkan ciri yang relevan dalam [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m dan recompile.
[48;2;34;34;34m[38;2;255;255;255mJika perisian ini tidak termasuk fungsi yang sepadan, sila hantar isu.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mSenarai Format yang disokong sekarang:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mpenukaran format yang tidak disokong[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mgagal secara automatik mengesan format.Sila nyatakan secara manual.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** belum disokong [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: menukar dari [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ke[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m format lain[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mformat fail yang tidak diketahui[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mkandungan berikut ** tidak akan ** disimpan kerana [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m tidak dipanggil.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mlaluan fail destinasi[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mralat penukaran[0m"##),
    ],
}
}

/// Language ID: ms;
/// Map name: "set";
/// Description: Melayu, Latin, Malaysia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "jalur fail tidak sah.");
/// ```
pub(super) const fn get_ms_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Kandungan yang diubahsuai ** tidak akan disimpan kerana `--sv` tidak dipanggil."##),
        ("new-value", r##"nilai baru"##),
        ("invalid-path", r##"jalur fail tidak sah."##),
    ],
}
}

/// Language ID: ms;
/// Map name: "set_md";
/// Description: Melayu, Latin, Malaysia;
pub(super) const fn get_ms_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mKandungan yang diubahsuai ** tidak akan disimpan kerana [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m tidak dipanggil.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnilai baru[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mjalur fail tidak sah.[0m"##),
    ],
}
}

/// Language ID: ms;
/// Map name: "get";
/// Description: Melayu, Latin, Malaysia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format Destinasi");
/// ```
pub(super) const fn get_ms_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format Destinasi"##),
        ("src-fmt", r##"Format fail sumber"##),
    ],
}
}

/// ms: Melayu, Latin, Malaysia
pub(super) const fn get_ms_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ms_map_conversion),
        ("get", get_ms_map_get),
        ("set_md", get_ms_map_set_md),
        ("set", get_ms_map_set),
        ("conversion_md", get_ms_map_conversion_md),
    ],
}
}

/// Language ID: mt;
/// Map name: "conversion";
/// Description: Malti, Latin, Malta;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "naqset milli tiskopri awtomatikament il-format.Jekk jog─Д─Аbok spe─Іifika manwalment.");
/// ```
pub(super) const fn get_mt_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Il-fajl mhuwiex format validu `JSON 1.0`, li jipprova parse b─Дala `json5` ..."##),
        ("not-included", r##"Dan il-binarju ** ma jinkludix ** il-funzjonalit├а ta 'konver┼╝joni g─Дall-format rilevanti.
Ikollok b┼╝onn li tippermetti l-karatteristika rilevanti fil-`Cargo.toml` u ter─Аa 'tittie─Дed.
Jekk dan is-softwer ma jinkludix il-funzjonalit├а korrispondenti, jekk jog─Д─Аbok ibg─Дat kwistjoni."##),
        ("currently-supported", r##"Lista tal-Formati Appo─А─Аjati b─Дalissa:"##),
        ("unsupported", r##"konver┼╝joni ta 'format mhux appo─А─Аjat"##),
        ("auto-detection-failed", r##"naqset milli tiskopri awtomatikament il-format.Jekk jog─Д─Аbok spe─Іifika manwalment."##),
        ("not-support-deser-sexp", r##"** Mhux appo─А─Аjat g─Дadu"##),
        ("unknown-fmt", r##"Format tal-fajl mhux mag─Дruf"##),
        ("not-saved", r##"Il-kontenut li ─Аej ** mhux se jkun iffrankat min─Дabba li `--save` ma kienx imsejja─Д."##),
        ("dst", r##"Path tal-fajl tad-destinazzjoni"##),
        ("conv-error", r##"┼╝ball ta 'konver┼╝joni"##),
    ],
}
}

/// Language ID: mt;
/// Map name: "conversion_md";
/// Description: Malti, Latin, Malta;
pub(super) const fn get_mt_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mIl-fajl mhuwiex format validu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, li jipprova parse b─Дala [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDan il-binarju ** ma jinkludix ** il-funzjonalit├а ta 'konver┼╝joni g─Дall-format rilevanti.
[48;2;34;34;34m[38;2;255;255;255mIkollok b┼╝onn li tippermetti l-karatteristika rilevanti fil-[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m u ter─Аa 'tittie─Дed.
[48;2;34;34;34m[38;2;255;255;255mJekk dan is-softwer ma jinkludix il-funzjonalit├а korrispondenti, jekk jog─Д─Аbok ibg─Дat kwistjoni.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista tal-Formati Appo─А─Аjati b─Дalissa:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mkonver┼╝joni ta 'format mhux appo─А─Аjat[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mnaqset milli tiskopri awtomatikament il-format.Jekk jog─Д─Аbok spe─Іifika manwalment.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Mhux appo─А─Аjat g─Дadu[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormat tal-fajl mhux mag─Дruf[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mIl-kontenut li ─Аej ** mhux se jkun iffrankat min─Дabba li [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ma kienx imsejja─Д.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mPath tal-fajl tad-destinazzjoni[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255m┼╝ball ta 'konver┼╝joni[0m"##),
    ],
}
}

/// Language ID: mt;
/// Map name: "set";
/// Description: Malti, Latin, Malta;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Path tal-fajl invalidu.");
/// ```
pub(super) const fn get_mt_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Il-kontenut modifikat ** mhux se jkun iffrankat min─Дabba li `--sv` ma kienx imsejja─Д."##),
        ("new-value", r##"Valur ─аdid"##),
        ("invalid-path", r##"Path tal-fajl invalidu."##),
    ],
}
}

/// Language ID: mt;
/// Map name: "set_md";
/// Description: Malti, Latin, Malta;
pub(super) const fn get_mt_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mIl-kontenut modifikat ** mhux se jkun iffrankat min─Дabba li [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ma kienx imsejja─Д.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mValur ─аdid[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mPath tal-fajl invalidu.[0m"##),
    ],
}
}

/// Language ID: mt;
/// Map name: "get";
/// Description: Malti, Latin, Malta;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format tad-destinazzjoni");
/// ```
pub(super) const fn get_mt_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format tad-destinazzjoni"##),
        ("src-fmt", r##"Format tal-fajl tas-sors"##),
    ],
}
}

/// mt: Malti, Latin, Malta
pub(super) const fn get_mt_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_mt_map_conversion),
        ("get", get_mt_map_get),
        ("set_md", get_mt_map_set_md),
        ("set", get_mt_map_set),
        ("conversion_md", get_mt_map_conversion_md),
    ],
}
}

/// Language ID: my;
/// Map name: "conversion";
/// Description: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "format рђђ\u{102d}\u{102f}рђАрђю\u{102d}\u{102f}рђАрђюрђ╗рђ▒рђгрђђ\u{103a}рђЁрђЁ\u{103a}рђєрђ▒рђИрђЏрђћ\u{103a}рђЋрђ╗рђђ\u{103a}рђђ\u{103d}рђђ\u{103a}рђЂ\u{1032}\u{1037}рђърђі\u{103a}рЂІрђђрђ╗рђ▒рђИрђЄ\u{1030}рђИрђЋрђ╝\u{102f}рђЋрђ╝\u{102e}рђИрђђ\u{102d}\u{102f}рђџ\u{103a}рђљ\u{102d}\u{102f}рђё\u{103a}рђђ\u{102d}\u{102f}рђџ\u{103a}рђђрђ╗рђќрђ▒рђг\u{103a}рђЋрђ╝рђЋрђФ");
/// ```
pub(super) const fn get_my_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** ** рђЎрђЉрђ▒рђгрђђрђ║рђЋрђХрђирђЏрђърђ▒рђИрђЋрђФрЂІ"##),
        ("unknown-fmt", r##"рђЎрђърђГрђърђ▒рђгрђќрђГрђ»рђёрђ║рђЋрђ»рђХрђЁрђХ"##),
        ("currently-supported", r##"рђюрђђрђ║рђЏрђЙрђГрђљрђйрђёрђ║рђЉрђ▒рђгрђђрђ║рђЋрђХрђирђЉрђгрђИрђърђ▒рђгрђЋрђ»рђХрђЁрђХрђЎрђ╗рђгрђИрђЁрђгрђЏрђёрђ║рђИ -"##),
        ("auto-detection-failed", r##"format рђђрђГрђ»рђАрђюрђГрђ»рђАрђюрђ╗рђ▒рђгрђђрђ║рђЁрђЁрђ║рђєрђ▒рђИрђЏрђћрђ║рђЋрђ╗рђђрђ║рђђрђйрђђрђ║рђЂрђ▓рђирђърђірђ║рЂІрђђрђ╗рђ▒рђИрђЄрђ░рђИрђЋрђ╝рђ»рђЋрђ╝рђ«рђИрђђрђГрђ»рђџрђ║рђљрђГрђ»рђёрђ║рђђрђГрђ»рђџрђ║рђђрђ╗рђќрђ▒рђгрђ║рђЋрђ╝рђЋрђФ"##),
        ("not-included", r##"рђц binary ** рђърђірђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђЋрђ»рђХрђЁрђХрђАрђљрђйрђђрђ║рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђ▓рђЂрђ╝рђёрђ║рђИрђюрђ»рђЋрђ║рђєрђ▒рђгрђёрђ║рђћрђГрђ»рђёрђ║рђЁрђйрђЎрђ║рђИрђђрђГрђ»рђЎрђЋрђФ 0 рђёрђ║рђЋрђФрЂІ
рђърђёрђ║рЂЈ `Cargo.toml` рђљрђйрђёрђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђАрђёрђ║рђ╣рђѓрђФрђЏрђЋрђ║рђђрђГрђ» enable рђюрђ»рђЋрђ║рђЏрђћрђ║рђюрђГрђ»рђАрђЋрђ║рђърђірђ║рЂІ
рђАрђђрђџрђ║. рђцрђєрђ▒рђгрђи (рђќрђ║) рђЮрђ▓рђърђірђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђюрђ»рђЋрђ║рђєрђ▒рђгрђёрђ║рђћрђГрђ»рђёрђ║рђЁрђйрђЎрђ║рђИрђЎрђЋрђФрђЏрђЙрђГрђЋрђФрђђ рђђрђ╗рђ▒рђИрђЄрђ░рђИрђЋрђ╝рђ». рђЋрђ╝ an рђћрђгрђђрђГрђ»рђљрђёрђ║рђЋрђФрЂІ"##),
        ("conv-error", r##"рђђрђ░рђИрђЋрђ╝рђ▒рђгрђёрђ║рђИрђЂрђ╝рђёрђ║рђИрђАрђЎрђЙрђгрђИ"##),
        ("dst", r##"destination file path"##),
        ("unsupported", r##"unsupported format рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђ▓рђЂрђ╝рђёрђ║рђИ"##),
        ("invalid-json1.0", r##"рђќрђГрђ»рђёрђ║рђърђірђ║рђЂрђГрђ»рђёрђ║рђюрђ»рђХрђърђ▒рђг `JSON 1.0` format рђЎрђЪрђ»рђљрђ║рђўрђ▓ `JSON5 `` `json5` asse рђђрђГрђ»рђЂрђйрђ▓рђЂрђ╝рђЎрђ║рђИрђЁрђГрђљрђ║рђќрђ╝рђгрђЏрђћрђ║рђђрђ╝рђГрђ»рђИрђЁрђгрђИрђћрђ▒рђърђірђ║рЂІ"##),
    ],
}
}

/// Language ID: my;
/// Map name: "conversion_md";
/// Description: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг;
pub(super) const fn get_my_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ** рђЎрђЉрђ▒рђгрђђрђ║рђЋрђХрђирђЏрђърђ▒рђИрђЋрђФрЂІ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mрђЎрђърђГрђърђ▒рђгрђќрђГрђ»рђёрђ║рђЋрђ»рђХрђЁрђХ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mрђюрђђрђ║рђЏрђЙрђГрђљрђйрђёрђ║рђЉрђ▒рђгрђђрђ║рђЋрђХрђирђЉрђгрђИрђърђ▒рђгрђЋрђ»рђХрђЁрђХрђЎрђ╗рђгрђИрђЁрђгрђЏрђёрђ║рђИ -[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mformat рђђрђГрђ»рђАрђюрђГрђ»рђАрђюрђ╗рђ▒рђгрђђрђ║рђЁрђЁрђ║рђєрђ▒рђИрђЏрђћрђ║рђЋрђ╗рђђрђ║рђђрђйрђђрђ║рђЂрђ▓рђирђърђірђ║рЂІрђђрђ╗рђ▒рђИрђЄрђ░рђИрђЋрђ╝рђ»рђЋрђ╝рђ«рђИрђђрђГрђ»рђџрђ║рђљрђГрђ»рђёрђ║рђђрђГрђ»рђџрђ║рђђрђ╗рђќрђ▒рђгрђ║рђЋрђ╝рђЋрђФ[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mрђц binary ** рђърђірђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђЋрђ»рђХрђЁрђХрђАрђљрђйрђђрђ║рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђ▓рђЂрђ╝рђёрђ║рђИрђюрђ»рђЋрђ║рђєрђ▒рђгрђёрђ║рђћрђГрђ»рђёрђ║рђЁрђйрђЎрђ║рђИрђђрђГрђ»рђЎрђЋрђФ 0 рђёрђ║рђЋрђФрЂІ
[48;2;34;34;34m[38;2;255;255;255mрђърђёрђ║рЂЈ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m рђљрђйрђёрђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђАрђёрђ║рђ╣рђѓрђФрђЏрђЋрђ║рђђрђГрђ» enable рђюрђ»рђЋрђ║рђЏрђћрђ║рђюрђГрђ»рђАрђЋрђ║рђърђірђ║рЂІ
[48;2;34;34;34m[38;2;255;255;255mрђАрђђрђџрђ║. рђцрђєрђ▒рђгрђи (рђќрђ║) рђЮрђ▓рђърђірђ║рђърђђрђ║рђєрђГрђ»рђёрђ║рђЏрђгрђюрђ»рђЋрђ║рђєрђ▒рђгрђёрђ║рђћрђГрђ»рђёрђ║рђЁрђйрђЎрђ║рђИрђЎрђЋрђФрђЏрђЙрђГрђЋрђФрђђ рђђрђ╗рђ▒рђИрђЄрђ░рђИрђЋрђ╝рђ». рђЋрђ╝ an рђћрђгрђђрђГрђ»рђљрђёрђ║рђЋрђФрЂІ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mрђђрђ░рђИрђЋрђ╝рђ▒рђгрђёрђ║рђИрђЂрђ╝рђёрђ║рђИрђАрђЎрђЙрђгрђИ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mdestination file path[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255munsupported format рђЋрђ╝рђ▒рђгрђёрђ║рђИрђюрђ▓рђЂрђ╝рђёрђ║рђИ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mрђќрђГрђ»рђёрђ║рђърђірђ║рђЂрђГрђ»рђёрђ║рђюрђ»рђХрђърђ▒рђг [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m format рђЎрђЪрђ»рђљрђ║рђўрђ▓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5 `` [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m asse рђђрђГрђ»рђЂрђйрђ▓рђЂрђ╝рђЎрђ║рђИрђЁрђГрђљрђ║рђќрђ╝рђгрђЏрђћрђ║рђђрђ╝рђГрђ»рђИрђЁрђгрђИрђћрђ▒рђърђірђ║рЂІ[0m"##),
    ],
}
}

/// Language ID: my;
/// Map name: "set";
/// Description: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "рђЎрђЎ\u{103e}рђћ\u{103a}рђђрђћ\u{103a}рђърђ▒рђгрђќ\u{102d}\u{102f}рђё\u{103a}рђюрђЎ\u{103a}рђИрђђрђ╝рђ▒рђгрђё\u{103a}рђИрЂІ");
/// ```
pub(super) const fn get_my_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"рђЋрђ╝рђ»рђЋрђ╝рђёрђ║рђЉрђгрђИрђърђ▒рђгрђАрђђрђ╝рђ▒рђгрђёрђ║рђИрђАрђЏрђг ** ** ** рђђрђГрђ»рђђрђџрђ║рђљрђёрђ║рђЂрђ╝рђёрђ║рђИрђЎрђЏрђЙрђГрђърђ▒рђИрђЋрђФрЂІ"##),
        ("new-value", r##"рђАрђърђЁрђ║рђљрђћрђ║рђќрђГрђ»рђИ"##),
        ("invalid-path", r##"рђЎрђЎрђЙрђћрђ║рђђрђћрђ║рђърђ▒рђгрђќрђГрђ»рђёрђ║рђюрђЎрђ║рђИрђђрђ╝рђ▒рђгрђёрђ║рђИрЂІ"##),
    ],
}
}

/// Language ID: my;
/// Map name: "set_md";
/// Description: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг;
pub(super) const fn get_my_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mрђЋрђ╝рђ»рђЋрђ╝рђёрђ║рђЉрђгрђИрђърђ▒рђгрђАрђђрђ╝рђ▒рђгрђёрђ║рђИрђАрђЏрђг ** ** ** рђђрђГрђ»рђђрђџрђ║рђљрђёрђ║рђЂрђ╝рђёрђ║рђИрђЎрђЏрђЙрђГрђърђ▒рђИрђЋрђФрЂІ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mрђАрђърђЁрђ║рђљрђћрђ║рђќрђГрђ»рђИ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mрђЎрђЎрђЙрђћрђ║рђђрђћрђ║рђърђ▒рђгрђќрђГрђ»рђёрђ║рђюрђЎрђ║рђИрђђрђ╝рђ▒рђгрђёрђ║рђИрЂІ[0m"##),
    ],
}
}

/// Language ID: my;
/// Map name: "get";
/// Description: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "рђдрђИ рђљрђі\u{103a}рђЂрђ╗рђђ\u{103a}рђЋ\u{102f}\u{1036}рђЁ\u{1036}");
/// ```
pub(super) const fn get_my_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"рђдрђИ рђљрђірђ║рђЂрђ╗рђђрђ║рђЋрђ»рђХрђЁрђХ"##),
        ("src-fmt", r##"Source рђќрђГрђ»рђёрђ║рђЋрђ»рђХрђЁрђХ"##),
    ],
}
}

/// my: рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг, рђЎрђ╝рђћрђ║рђЎрђг
pub(super) const fn get_my_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_my_map_conversion),
        ("get", get_my_map_get),
        ("set_md", get_my_map_set_md),
        ("set", get_my_map_set),
        ("conversion_md", get_my_map_conversion_md),
    ],
}
}

/// Language ID: ne;
/// Map name: "conversion";
/// Description: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯцИ\u{94d}ЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░\u{942}ЯцфЯц«ЯцЙ ЯцбЯцЙ\u{901}ЯцџЯцЙ ЯцфЯцц\u{94d}ЯццЯцЙ Яц▓ЯцЌЯцЙЯцЅЯце ЯцЁЯцИЯцФЯц▓ ЯцГЯц»ЯЦІЯЦцЯцЋ\u{943}ЯцфЯц»ЯцЙ Яц«\u{948}Яце\u{94d}Яц»\u{941}ЯцЁЯц▓\u{94d}Яц▓ЯЦђ ЯцеЯц┐Яц░\u{94d}ЯцдЯц┐Яци\u{94d}ЯцЪ ЯцЌЯц░\u{94d}Яце\u{941}Яц╣ЯЦІЯцИ\u{94d}ЯЦц");
/// ```
pub(super) const fn get_ne_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** / * ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцЏЯЦѕЯце **: `Яц▓Яц┐ЯцЪЯЦЇЯцИ ЯцЈЯцИ-ЯцЁЯцГЯц┐ЯцхЯЦЇЯц»ЯцЋЯЦЇЯццЯц┐ЯцгЯцЙЯцЪ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯцЌЯц░ЯЦЇЯцдЯЦѕ - ЯцЁЯцеЯЦЇЯц» ЯцбЯцЙЯцЂЯцџЯцЙЯц╣Яц░ЯЦѓ"##),
        ("unknown-fmt", r##"ЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯцЙЯцЄЯц▓ ЯцбЯцЙЯцЂЯцџЯцЙ"##),
        ("currently-supported", r##"Яц╣ЯцЙЯц▓ ЯцфЯЦЇЯц░ЯцХЯцИЯЦЇЯцц ЯцФЯЦІЯц░ЯцЪЯЦЇЯцИ ЯцИЯЦѓЯцџЯЦђ ЯцфЯЦЇЯц░ЯцдЯцЙЯце ЯцЌЯц░ЯЦЇЯцдЯцЏ:"##),
        ("auto-detection-failed", r##"ЯцИЯЦЇЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░ЯЦѓЯцфЯц«ЯцЙ ЯцбЯцЙЯцЂЯцџЯцЙ ЯцфЯццЯЦЇЯццЯцЙ Яц▓ЯцЌЯцЙЯцЅЯце ЯцЁЯцИЯцФЯц▓ ЯцГЯц»ЯЦІЯЦцЯцЋЯЦЃЯцфЯц»ЯцЙ Яц«ЯЦѕЯцеЯЦЇЯц»ЯЦЂЯцЁЯц▓ЯЦЇЯц▓ЯЦђ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇЯЦц"##),
        ("not-included", r##"Яц»ЯЦІ ЯцгЯцЙЯцЄЯцеЯц░ЯЦђ ** ** ЯцИЯцЙЯцеЯЦЇЯцдЯц░ЯЦЇЯцГЯц┐ЯцЋ ЯцбЯцЙЯцЂЯцџЯцЙЯцЋЯЦІ Яц▓ЯцЙЯцЌЯц┐ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯЦЄЯцХ ЯцЌЯц░ЯЦЇЯцдЯЦѕЯцеЯЦц
ЯццЯцфЯцЙЯцЄЯцЂ ЯццЯцфЯцЙЯцЄЯцЂЯцЋЯЦІ `Change.tomll` Яц░ replatile Яц«ЯцЙ ЯцИЯцЙЯцеЯЦЇЯцдЯц░ЯЦЇЯцГЯц┐ЯцЋ ЯцИЯЦЂЯцхЯц┐ЯцДЯцЙ ЯцИЯцЋЯЦЇЯциЯц« ЯцЌЯц░ЯЦЇЯце ЯцєЯцхЯцХЯЦЇЯц»ЯцЋ ЯцЏЯЦц
Яц»ЯцдЯц┐ Яц»ЯЦІ ЯцИЯцФЯЦЇЯцЪЯцхЯЦЄЯц»Яц░Яц▓ЯЦЄ ЯцИЯц«ЯЦЇЯцгЯцеЯЦЇЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯЦЄЯцХ ЯцЌЯц░ЯЦЇЯцдЯЦѕЯце ЯцГЯцеЯЦЄ ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ Яц«ЯЦЂЯцдЯЦЇЯцдЯцЙ ЯцгЯЦЂЯцЮЯцЙЯцЅЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇЯЦц"##),
        ("conv-error", r##"Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯц┐"##),
        ("dst", r##"ЯцЌЯцеЯЦЇЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ"##),
        ("unsupported", r##"ЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцбЯцЙЯцЂЯцџЯцЙ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ"##),
        ("invalid-json1.0", r##"ЯцФЯцЙЯцѕЯц▓ Яц«ЯцЙЯцеЯЦЇЯц» `jon 1.0` ormant jstee,` JNON5`` ЯцЋЯЦІ Яц░ЯЦѓЯцфЯц«ЯцЙ ЯцфЯцЙЯц░ЯЦЇЯцИ ЯцЌЯц░ЯЦЇЯце ЯцЋЯЦІЯцХЯц┐ЯцИ ЯцЌЯц░ЯЦЇЯцдЯЦѕ ЯцЏЯЦѕЯце,"##),
    ],
}
}

/// Language ID: ne;
/// Map name: "conversion_md";
/// Description: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓;
pub(super) const fn get_ne_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** / * ЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцЏЯЦѕЯце [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯц▓Яц┐ЯцЪЯЦЇЯцИ ЯцЈЯцИ-ЯцЁЯцГЯц┐ЯцхЯЦЇЯц»ЯцЋЯЦЇЯццЯц┐ЯцгЯцЙЯцЪ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯцЌЯц░ЯЦЇЯцдЯЦѕ - ЯцЁЯцеЯЦЇЯц» ЯцбЯцЙЯцЂЯцџЯцЙЯц╣Яц░ЯЦѓ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцюЯЦЇЯцъЯцЙЯцц ЯцФЯцЙЯцЄЯц▓ ЯцбЯцЙЯцЂЯцџЯцЙ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯц╣ЯцЙЯц▓ ЯцфЯЦЇЯц░ЯцХЯцИЯЦЇЯцц ЯцФЯЦІЯц░ЯцЪЯЦЇЯцИ ЯцИЯЦѓЯцџЯЦђ ЯцфЯЦЇЯц░ЯцдЯцЙЯце ЯцЌЯц░ЯЦЇЯцдЯцЏ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯцИЯЦЇЯцхЯцџЯцЙЯц▓Яц┐Яцц Яц░ЯЦѓЯцфЯц«ЯцЙ ЯцбЯцЙЯцЂЯцџЯцЙ ЯцфЯццЯЦЇЯццЯцЙ Яц▓ЯцЌЯцЙЯцЅЯце ЯцЁЯцИЯцФЯц▓ ЯцГЯц»ЯЦІЯЦцЯцЋЯЦЃЯцфЯц»ЯцЙ Яц«ЯЦѕЯцеЯЦЇЯц»ЯЦЂЯцЁЯц▓ЯЦЇЯц▓ЯЦђ ЯцеЯц┐Яц░ЯЦЇЯцдЯц┐ЯциЯЦЇЯцЪ ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇЯЦц[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯц»ЯЦІ ЯцгЯцЙЯцЄЯцеЯц░ЯЦђ ** ** ЯцИЯцЙЯцеЯЦЇЯцдЯц░ЯЦЇЯцГЯц┐ЯцЋ ЯцбЯцЙЯцЂЯцџЯцЙЯцЋЯЦІ Яц▓ЯцЙЯцЌЯц┐ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯЦЄЯцХ ЯцЌЯц░ЯЦЇЯцдЯЦѕЯцеЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯццЯцфЯцЙЯцЄЯцЂ ЯццЯцфЯцЙЯцЄЯцЂЯцЋЯЦІ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mChange.tomll[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Яц░ replatile Яц«ЯцЙ ЯцИЯцЙЯцеЯЦЇЯцдЯц░ЯЦЇЯцГЯц┐ЯцЋ ЯцИЯЦЂЯцхЯц┐ЯцДЯцЙ ЯцИЯцЋЯЦЇЯциЯц« ЯцЌЯц░ЯЦЇЯце ЯцєЯцхЯцХЯЦЇЯц»ЯцЋ ЯцЏЯЦц
[48;2;34;34;34m[38;2;255;255;255mЯц»ЯцдЯц┐ Яц»ЯЦІ ЯцИЯцФЯЦЇЯцЪЯцхЯЦЄЯц»Яц░Яц▓ЯЦЄ ЯцИЯц«ЯЦЇЯцгЯцеЯЦЇЯцДЯц┐Яцц ЯцЋЯцЙЯц░ЯЦЇЯц»ЯцЋЯЦЇЯциЯц«ЯццЯцЙ ЯцИЯц«ЯцЙЯцхЯЦЄЯцХ ЯцЌЯц░ЯЦЇЯцдЯЦѕЯце ЯцГЯцеЯЦЄ ЯцЋЯЦЃЯцфЯц»ЯцЙ ЯцЈЯцЋ Яц«ЯЦЂЯцдЯЦЇЯцдЯцЙ ЯцгЯЦЂЯцЮЯцЙЯцЅЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇЯЦц[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ ЯццЯЦЇЯц░ЯЦЂЯцЪЯц┐[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЌЯцеЯЦЇЯццЯцхЯЦЇЯц» ЯцФЯцЙЯцЄЯц▓ ЯцфЯцЦ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцИЯц«Яц░ЯЦЇЯцЦЯц┐Яцц ЯцбЯцЙЯцЂЯцџЯцЙ Яц░ЯЦѓЯцфЯцЙЯцеЯЦЇЯццЯц░ЯцБ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯцФЯцЙЯцѕЯц▓ Яц«ЯцЙЯцеЯЦЇЯц» [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjon 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ormant jstee,[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m JNON5`` ЯцЋЯЦІ Яц░ЯЦѓЯцфЯц«ЯцЙ ЯцфЯцЙЯц░ЯЦЇЯцИ ЯцЌЯц░ЯЦЇЯце ЯцЋЯЦІЯцХЯц┐ЯцИ ЯцЌЯц░ЯЦЇЯцдЯЦѕ ЯцЏЯЦѕЯце,[0m"##),
    ],
}
}

/// Language ID: ne;
/// Map name: "set";
/// Description: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯцЁЯцх\u{948}ЯцД ЯцФЯцЙЯцѕЯц▓ Яц«ЯцЙЯц░\u{94d}ЯцЌЯЦц");
/// ```
pub(super) const fn get_ne_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯцфЯц░Яц┐Яц«ЯцЙЯц░ЯЦЇЯцюЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ ** ЯцгЯцџЯцц ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇ ** ЯцгЯцџЯцц ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇ ЯцЋЯц┐ЯцеЯцЋЯц┐ `- HVV` ЯцГЯцеЯц┐ЯцеЯЦЄ ЯцЏЯЦѕЯцеЯЦц"##),
        ("new-value", r##"ЯцеЯц»ЯцЙЯцЂ Яц«ЯцЙЯце"##),
        ("invalid-path", r##"ЯцЁЯцхЯЦѕЯцД ЯцФЯцЙЯцѕЯц▓ Яц«ЯцЙЯц░ЯЦЇЯцЌЯЦц"##),
    ],
}
}

/// Language ID: ne;
/// Map name: "set_md";
/// Description: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓;
pub(super) const fn get_ne_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯцфЯц░Яц┐Яц«ЯцЙЯц░ЯЦЇЯцюЯц┐Яцц ЯцИЯцЙЯц«ЯцЌЯЦЇЯц░ЯЦђ ** ЯцгЯцџЯцц ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇ ** ЯцгЯцџЯцц ЯцЌЯц░ЯЦЇЯцеЯЦЂЯц╣ЯЦІЯцИЯЦЇ ЯцЋЯц┐ЯцеЯцЋЯц┐ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- HVV[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯцГЯцеЯц┐ЯцеЯЦЄ ЯцЏЯЦѕЯцеЯЦц[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯцеЯц»ЯцЙЯцЂ Яц«ЯцЙЯце[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯцЁЯцхЯЦѕЯцД ЯцФЯцЙЯцѕЯц▓ Яц«ЯцЙЯц░ЯЦЇЯцЌЯЦц[0m"##),
    ],
}
}

/// Language ID: ne;
/// Map name: "get";
/// Description: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯцЌЯце\u{94d}ЯццЯцх\u{94d}Яц» ЯцбЯцЙ\u{901}ЯцџЯцЙ");
/// ```
pub(super) const fn get_ne_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯцЌЯцеЯЦЇЯццЯцхЯЦЇЯц» ЯцбЯцЙЯцЂЯцџЯцЙ"##),
        ("src-fmt", r##"ЯцИЯЦЇЯц░ЯЦІЯцц ЯцФЯцЙЯцЄЯц▓ ЯцбЯцЙЯцЂЯцџЯцЙ"##),
    ],
}
}

/// ne: ЯцеЯЦЄЯцфЯцЙЯц▓ЯЦђ, ЯцдЯЦЄЯцхЯцЙЯцеЯцЙЯцЌЯц░ЯЦђ, ЯцеЯЦЄЯцфЯцЙЯц▓
pub(super) const fn get_ne_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ne_map_conversion),
        ("get", get_ne_map_get),
        ("set_md", get_ne_map_set_md),
        ("set", get_ne_map_set),
        ("conversion_md", get_ne_map_conversion_md),
    ],
}
}

/// Language ID: nl;
/// Map name: "conversion";
/// Description: Nederlands, Latijns, Nederland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Automatische herkenning van het formaat is mislukt. Geef dit alstublieft handmatig aan.");
/// ```
pub(super) const fn get_nl_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Het bestand is geen geldig `json 1.0` formaat, poging om te parsen als `json5`..."##),
        ("not-included", r##"Deze software **bevat niet** de functionaliteit voor de conversie van het relevante formaat.
U moet de juiste functies inschakelen in uw `Cargo.toml` en opnieuw compileren.
Als deze software de bijbehorende functionaliteit niet bevat, dient u een probleemrapport in."##),
        ("currently-supported", r##"Lijst met momenteel ondersteunde formaten:"##),
        ("unsupported", r##"Niet-ondersteunde formaatconversie"##),
        ("auto-detection-failed", r##"Automatische herkenning van het formaat is mislukt. Geef dit alstublieft handmatig aan."##),
        ("not-support-deser-sexp", r##"**Nog niet ondersteund**: converteren van `Lisp S-Expressie` naar `andere formaten`"##),
        ("unknown-fmt", r##"Onbekend bestandsformaat"##),
        ("not-saved", r##"De volgende inhoud wordt **niet** opgeslagen omdat `--save` niet is aangeroepen."##),
        ("dst", r##"Bestemmingsbestandpad"##),
        ("conv-error", r##"Conversiefout"##),
    ],
}
}

/// Language ID: nl;
/// Map name: "conversion_md";
/// Description: Nederlands, Latijns, Nederland;
pub(super) const fn get_nl_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mHet bestand is geen geldig [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m formaat, poging om te parsen als [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDeze software [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mbevat niet[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m de functionaliteit voor de conversie van het relevante formaat.
[48;2;34;34;34m[38;2;255;255;255mU moet de juiste functies inschakelen in uw [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m en opnieuw compileren.
[48;2;34;34;34m[38;2;255;255;255mAls deze software de bijbehorende functionaliteit niet bevat, dient u een probleemrapport in.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLijst met momenteel ondersteunde formaten:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNiet-ondersteunde formaatconversie[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mAutomatische herkenning van het formaat is mislukt. Geef dit alstublieft handmatig aan.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mNog niet ondersteund[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: converteren van [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expressie[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m naar [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mandere formaten[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mOnbekend bestandsformaat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mDe volgende inhoud wordt [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mniet[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m opgeslagen omdat [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m niet is aangeroepen.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mBestemmingsbestandpad[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mConversiefout[0m"##),
    ],
}
}

/// Language ID: nl;
/// Map name: "set";
/// Description: Nederlands, Latijns, Nederland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "niet-opgeslagen-waarschuwing");
///
/// assert_eq!(msg, "De gewijzigde inhoud **wordt niet** opgeslagen omdat `--sv` niet is aangeroepen.");
/// ```
pub(super) const fn get_nl_map_set() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("niet-opgeslagen-waarschuwing", r##"De gewijzigde inhoud **wordt niet** opgeslagen omdat `--sv` niet is aangeroepen."##),
        ("nieuwe-waarde", r##"Nieuwe waarde"##),
        ("ongeldig-pad", r##"Ongeldig bestandspad."##),
    ],
}
}

/// Language ID: nl;
/// Map name: "set_md";
/// Description: Nederlands, Latijns, Nederland;
pub(super) const fn get_nl_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("niet-opgeslagen-waarschuwing", r##"[48;2;34;34;34m[38;2;255;255;255mDe gewijzigde inhoud [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mwordt niet[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m opgeslagen omdat [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m niet is aangeroepen.[0m"##),
        ("nieuwe-waarde", r##"[48;2;34;34;34m[38;2;255;255;255mNieuwe waarde[0m"##),
        ("ongeldig-pad", r##"[48;2;34;34;34m[38;2;255;255;255mOngeldig bestandspad.[0m"##),
    ],
}
}

/// Language ID: nl;
/// Map name: "get";
/// Description: Nederlands, Latijns, Nederland;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Bestemmingsformaat");
/// ```
pub(super) const fn get_nl_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Bestemmingsformaat"##),
        ("src-fmt", r##"Bronbestandsformaat"##),
    ],
}
}

/// nl: Nederlands, Latijns, Nederland
pub(super) const fn get_nl_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_nl_map_conversion),
        ("get", get_nl_map_get),
        ("set_md", get_nl_map_set_md),
        ("set", get_nl_map_set),
        ("conversion_md", get_nl_map_conversion_md),
    ],
}
}

/// Language ID: no;
/// Map name: "conversion";
/// Description: norsk, latinsk, Norge;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Kunne ikke oppdage formatet automatisk.Vennligst spesifiser manuelt.");
/// ```
pub(super) const fn get_no_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Filen er ikke et gyldig `JSON 1.0` -format, og pr├Иver ├Ц analysere som `JSON5` ..."##),
        ("not-included", r##"Denne bin├дre ** inkluderer ikke ** konverteringsfunksjonaliteten for det aktuelle formatet.
Du m├Ц aktivere den aktuelle funksjonen i "lastet. Toml` og kompilen.
Hvis denne programvaren ikke inkluderer den tilsvarende funksjonaliteten, vennligst send inn et problem."##),
        ("currently-supported", r##"For ├Иyeblikket st├Иttede formater Liste:"##),
        ("unsupported", r##"ikke st├Иttet formatkonvertering"##),
        ("auto-detection-failed", r##"Kunne ikke oppdage formatet automatisk.Vennligst spesifiser manuelt."##),
        ("not-support-deser-sexp", r##"** Ikke st├Иttet enn├Ц **: Konvertere fra `Lisp S-Expression` til` andre formater`"##),
        ("unknown-fmt", r##"Ukjent filformat"##),
        ("not-saved", r##"F├Иlgende innhold ** vil ikke ** lagres fordi `--save` ikke ble kalt."##),
        ("dst", r##"Destinasjonsfilbane"##),
        ("conv-error", r##"konverteringsfeil"##),
    ],
}
}

/// Language ID: no;
/// Map name: "conversion_md";
/// Description: norsk, latinsk, Norge;
pub(super) const fn get_no_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFilen er ikke et gyldig [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -format, og pr├Иver ├Ц analysere som [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDenne bin├дre ** inkluderer ikke ** konverteringsfunksjonaliteten for det aktuelle formatet.
[48;2;34;34;34m[38;2;255;255;255mDu m├Ц aktivere den aktuelle funksjonen i "lastet. Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m og kompilen.
[48;2;34;34;34m[38;2;0;255;255mHvis denne programvaren ikke inkluderer den tilsvarende funksjonaliteten, vennligst send inn et problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mFor ├Иyeblikket st├Иttede formater Liste:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mikke st├Иttet formatkonvertering[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mKunne ikke oppdage formatet automatisk.Vennligst spesifiser manuelt.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Ikke st├Иttet enn├Ц [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konvertere fra [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m til[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m andre formater[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mUkjent filformat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mF├Иlgende innhold ** vil ikke ** lagres fordi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ikke ble kalt.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestinasjonsfilbane[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mkonverteringsfeil[0m"##),
    ],
}
}

/// Language ID: no;
/// Map name: "set";
/// Description: norsk, latinsk, Norge;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ugyldig filsti.");
/// ```
pub(super) const fn get_no_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Det modifiserte innholdet ** vil ikke ** lagres fordi `-SV` ikke ble kalt."##),
        ("new-value", r##"Ny verdi"##),
        ("invalid-path", r##"Ugyldig filsti."##),
    ],
}
}

/// Language ID: no;
/// Map name: "set_md";
/// Description: norsk, latinsk, Norge;
pub(super) const fn get_no_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDet modifiserte innholdet ** vil ikke ** lagres fordi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-SV[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ikke ble kalt.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNy verdi[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mUgyldig filsti.[0m"##),
    ],
}
}

/// Language ID: no;
/// Map name: "get";
/// Description: norsk, latinsk, Norge;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destinasjonsformat");
/// ```
pub(super) const fn get_no_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destinasjonsformat"##),
        ("src-fmt", r##"Kildefilformat"##),
    ],
}
}

/// no: norsk, latinsk, Norge
pub(super) const fn get_no_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_no_map_conversion),
        ("get", get_no_map_get),
        ("set_md", get_no_map_set_md),
        ("set", get_no_map_set),
        ("conversion_md", get_no_map_conversion_md),
    ],
}
}

/// Language ID: ny;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "...Chonde lingalirani pamanja.");
/// ```
pub(super) const fn get_ny_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("auto-detection-failed", r##"...Chonde lingalirani pamanja."##),
        ("not-included", r##"Binary iyi ** siyikuphatikiza ** kutembenuka koyenera kwa mtundu woyenera.
Muyenera kuti muthandizireni gawo loyenerera mu `chonyamula.toml` ndi recomple.
Ngati pulogalamuyi sinaphatikize magwiridwe antchito omwewo, chonde perekani vuto."##),
    ],
}
}

/// Language ID: ny;
/// Map name: "conversion_md";
pub(super) const fn get_ny_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (0, 0),
    ],
    entries: &[
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m...Chonde lingalirani pamanja.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary iyi ** siyikuphatikiza ** kutembenuka koyenera kwa mtundu woyenera.
[48;2;34;34;34m[38;2;255;255;255mMuyenera kuti muthandizireni gawo loyenerera mu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mchonyamula.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ndi recomple.
[48;2;34;34;34m[38;2;255;255;255mNgati pulogalamuyi sinaphatikize magwiridwe antchito omwewo, chonde perekani vuto.[0m"##),
    ],
}
}

pub(super) const fn get_ny_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
    ],
    entries: &[
    ],
}
}

pub(super) const fn get_ny_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
    ],
    entries: &[
    ],
}
}

/// Language ID: ny;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Mtundu Wopita");
/// ```
pub(super) const fn get_ny_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Mtundu Wopita"##),
        ("src-fmt", r##"Gwero la fayilo"##),
    ],
}
}

/// ny: ny-Latn-MW
pub(super) const fn get_ny_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ny_map_conversion),
        ("get", get_ny_map_get),
        ("set_md", get_ny_map_set_md),
        ("set", get_ny_map_set),
        ("conversion_md", get_ny_map_conversion_md),
    ],
}
}

/// Language ID: or;
/// Map name: "conversion";
/// Description: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯгФЯг░\u{b4d}Яг«\u{b3e}ЯгЪ\u{b4d} Ягџ\u{b3f}Яг╣\u{b4d}ЯгеЯгЪ ЯгЋЯг░\u{b3f}Ягг\u{b3e}Яг░ЯГЄ Ягг\u{b3f}ЯгФЯг│ Яг╣ЯГЄЯг▓\u{b3e} |ЯгдЯГЪ\u{b3e}ЯгЋЯг░\u{b3f} Яг╣ЯгИ\u{b4d}ЯгцЯгЋ\u{b43}Ягц ЯгГ\u{b3e}ЯггЯг░ЯГЄ Яге\u{b3f}Яг░\u{b4d}Ягд\u{b4d}Ягд\u{b3f}Яги\u{b4d}ЯгЪ ЯгЋЯг░Яге\u{b4d}Ягц\u{b41} |");
/// ```
pub(super) const fn get_or_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 8694567506910003252,
    disps: &[
        (2, 1),
        (5, 0),
    ],
    entries: &[
        ("unknown-fmt", r##"ЯгЁЯгюЯГЇЯгъЯгЙЯгц ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ |"##),
        ("unsupported", r##"ЯгЁЯгИЯг«Яг░ЯГЇЯгЦЯг┐Ягц ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ Яг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ |"##),
        ("dst", r##"ЯгЌЯгеЯГЇЯгцЯггЯГЇЯГЪЯгИЯГЇЯгЦЯг│ ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгфЯгЦ |"##),
        ("invalid-json1.0", r##"ЯгФЯгЙЯгЄЯг▓ЯгЪЯг┐ ЯгЈЯгЋ Ягг valid ЯгД `json 1.0` ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгеЯГЂЯг╣ЯГЄЯгЂ, `JSON5` ЯгГЯгЙЯггЯг░ЯГЄ ЯггЯг┐ЯгХЯГЇЯг│ЯГЄЯгиЯгБ ЯгЋЯг░Яг┐ЯггЯгЙЯгЋЯГЂ ЯгџЯГЄЯгиЯГЇЯгЪЯгЙ ЯгЋЯг░ЯГЂЯгЏЯг┐ ..."##),
        ("not-included", r##"ЯгЈЯг╣Яг┐ ЯггЯгЙЯгЄЯгеЯгЙЯг░ЯГђ ** ЯгЁЯгеЯГЇЯгцЯг░ЯГЇЯгГЯГѓЯгЋЯГЇЯгц ЯгЋЯг░ЯГЄ ЯгеЯгЙЯг╣Яг┐ЯгЂ ** ЯгфЯГЇЯг░Яг»ЯГЂЯгюЯГЇЯГЪ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгфЯгЙЯгЄЯгЂ Яг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ ЯгЋЯгЙЯг░ЯГЇЯг»ЯГЇЯГЪЯгЋЯгЙЯг░Яг┐ЯгцЯгЙ |
ЯгцЯГЂЯг«Яг░ `ЯгЋЯгЙЯг░ЯГЇЯгЌЯГІ.ЯгЪЯГІЯг«ЯГІЯг▓Яг░ЯГЄ ЯгИЯг«ЯГЇЯгфЯГЃЯгЋЯГЇЯгц Ягг feature ЯгХЯг┐ЯгиЯГЇЯгЪЯГЇЯГЪ ЯгИЯгЋЯГЇЯгиЯг« ЯгЋЯг░Яг┐ЯггЯгЙЯгЋЯГЂ ЯгфЯгАЯг┐Ягг ЯгЈЯггЯгѓ ЯгфЯГЂЯге ompmpililed |
Яг»ЯгдЯг┐ ЯгЈЯг╣Яг┐ ЯгИЯгФЯГЇЯгЪЯГ▒ЯГЄЯг░ ЯгеЯг┐Яг░ЯГЇЯгдЯГЇЯгдЯг┐ЯгиЯГЇЯгЪ ЯгЋЯгЙЯг░ЯГЇЯг»ЯГЇЯГЪЯгЋЯгЙЯг░Яг┐ЯгцЯгЙ ЯгЁЯгеЯГЇЯгцЯг░ЯГЇЯгГЯГѓЯгЋЯГЇЯгц ЯгЋЯг░ЯГЄ ЯгеЯгЙЯг╣Яг┐ЯгЂ, ЯгдЯГЪЯгЙЯгЋЯг░Яг┐ ЯгЈЯгЋ ЯгИЯг«ЯгИЯГЇЯГЪЯгЙ ЯгдЯгЙЯгќЯг▓ ЯгЋЯг░ЯгеЯГЇЯгцЯГЂ |"##),
        ("auto-detection-failed", r##"ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгџЯг┐Яг╣ЯГЇЯгеЯгЪ ЯгЋЯг░Яг┐ЯггЯгЙЯг░ЯГЄ ЯггЯг┐ЯгФЯг│ Яг╣ЯГЄЯг▓ЯгЙ |ЯгдЯГЪЯгЙЯгЋЯг░Яг┐ Яг╣ЯгИЯГЇЯгцЯгЋЯГЃЯгц ЯгГЯгЙЯггЯг░ЯГЄ ЯгеЯг┐Яг░ЯГЇЯгдЯГЇЯгдЯг┐ЯгиЯГЇЯгЪ ЯгЋЯг░ЯгеЯГЇЯгцЯГЂ |"##),
        ("conv-error", r##"Яг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ ЯгцЯГЇЯг░ЯГЂЯгЪЯг┐ |"##),
        ("currently-supported", r##"ЯгИЯг«ЯГЇЯгфЯГЇЯг░ЯгдЯгЙЯГЪ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгцЯгЙЯг▓Яг┐ЯгЋЯгЙ:"##),
    ],
}
}

/// Language ID: or;
/// Map name: "conversion_md";
/// Description: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц;
pub(super) const fn get_or_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 8694567506910003252,
    disps: &[
        (2, 1),
        (5, 0),
    ],
    entries: &[
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯгЁЯгюЯГЇЯгъЯгЙЯгц ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯгЁЯгИЯг«Яг░ЯГЇЯгЦЯг┐Ягц ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ Яг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯгЌЯгеЯГЇЯгцЯггЯГЇЯГЪЯгИЯГЇЯгЦЯг│ ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгфЯгЦ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯгФЯгЙЯгЄЯг▓ЯгЪЯг┐ ЯгЈЯгЋ Ягг valid ЯгД [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгеЯГЂЯг╣ЯГЄЯгЂ, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯгГЯгЙЯггЯг░ЯГЄ ЯггЯг┐ЯгХЯГЇЯг│ЯГЄЯгиЯгБ ЯгЋЯг░Яг┐ЯггЯгЙЯгЋЯГЂ ЯгџЯГЄЯгиЯГЇЯгЪЯгЙ ЯгЋЯг░ЯГЂЯгЏЯг┐ ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯгЈЯг╣Яг┐ ЯггЯгЙЯгЄЯгеЯгЙЯг░ЯГђ ** ЯгЁЯгеЯГЇЯгцЯг░ЯГЇЯгГЯГѓЯгЋЯГЇЯгц ЯгЋЯг░ЯГЄ ЯгеЯгЙЯг╣Яг┐ЯгЂ ** ЯгфЯГЇЯг░Яг»ЯГЂЯгюЯГЇЯГЪ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгфЯгЙЯгЄЯгЂ Яг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ ЯгЋЯгЙЯг░ЯГЇЯг»ЯГЇЯГЪЯгЋЯгЙЯг░Яг┐ЯгцЯгЙ |
[48;2;34;34;34m[38;2;255;255;255mЯгцЯГЂЯг«Яг░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯгЋЯгЙЯг░ЯГЇЯгЌЯГІ.ЯгЪЯГІЯг«ЯГІЯг▓Яг░ЯГЄ ЯгИЯг«ЯГЇЯгфЯГЃЯгЋЯГЇЯгц Ягг feature ЯгХЯг┐ЯгиЯГЇЯгЪЯГЇЯГЪ ЯгИЯгЋЯГЇЯгиЯг« ЯгЋЯг░Яг┐ЯггЯгЙЯгЋЯГЂ ЯгфЯгАЯг┐Ягг ЯгЈЯггЯгѓ ЯгфЯГЂЯге ompmpililed |
[48;2;34;34;34m[38;2;0;255;255mЯг»ЯгдЯг┐ ЯгЈЯг╣Яг┐ ЯгИЯгФЯГЇЯгЪЯГ▒ЯГЄЯг░ ЯгеЯг┐Яг░ЯГЇЯгдЯГЇЯгдЯг┐ЯгиЯГЇЯгЪ ЯгЋЯгЙЯг░ЯГЇЯг»ЯГЇЯГЪЯгЋЯгЙЯг░Яг┐ЯгцЯгЙ ЯгЁЯгеЯГЇЯгцЯг░ЯГЇЯгГЯГѓЯгЋЯГЇЯгц ЯгЋЯг░ЯГЄ ЯгеЯгЙЯг╣Яг┐ЯгЂ, ЯгдЯГЪЯгЙЯгЋЯг░Яг┐ ЯгЈЯгЋ ЯгИЯг«ЯгИЯГЇЯГЪЯгЙ ЯгдЯгЙЯгќЯг▓ ЯгЋЯг░ЯгеЯГЇЯгцЯГЂ |[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгџЯг┐Яг╣ЯГЇЯгеЯгЪ ЯгЋЯг░Яг┐ЯггЯгЙЯг░ЯГЄ ЯггЯг┐ЯгФЯг│ Яг╣ЯГЄЯг▓ЯгЙ [48;2;34;34;34m[38;2;255;255;255m|[48;2;34;34;34m[38;2;255;255;255mЯгдЯГЪЯгЙЯгЋЯг░Яг┐ Яг╣ЯгИЯГЇЯгцЯгЋЯГЃЯгц ЯгГЯгЙЯггЯг░ЯГЄ ЯгеЯг┐Яг░ЯГЇЯгдЯГЇЯгдЯг┐ЯгиЯГЇЯгЪ ЯгЋЯг░ЯгеЯГЇЯгцЯГЂ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯг░ЯГѓЯгфЯгЙЯгеЯГЇЯгцЯг░ ЯгцЯГЇЯг░ЯГЂЯгЪЯг┐ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯгИЯг«ЯГЇЯгфЯГЇЯг░ЯгдЯгЙЯГЪ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ ЯгцЯгЙЯг▓Яг┐ЯгЋЯгЙ:[0m"##),
    ],
}
}

/// Language ID: or;
/// Map name: "set";
/// Description: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯгЁЯгг val ЯгД ЯгФ\u{b3e}ЯгЄЯг▓\u{b4d} ЯгфЯгЦ |");
/// ```
pub(super) const fn get_or_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯгфЯг░Яг┐ЯггЯг░ЯГЇЯгцЯГЇЯгцЯг┐Ягц ЯггЯг┐ЯгиЯГЪЯггЯгИЯГЇЯгцЯГЂ ** ЯгИЯгъЯГЇЯгџЯГЪ Яг╣ЯГЂЯгЈ ЯгеЯгЙЯг╣Яг┐ЯгЂ ** ЯгИЯгъЯГЇЯгџЯГЪ Яг╣ЯГЄЯгг ЯгеЯгЙЯг╣Яг┐ЯгЂ ЯгЋЯгЙЯг░ЯгБ `--sv` ЯгЋЯГЂЯг╣ЯгЙЯг»ЯгЙЯгЄ ЯгеЯгЦЯг┐Яг▓ЯгЙ |"##),
        ("new-value", r##"ЯгеЯГѓЯгцЯге Яг«ЯГѓЯг▓ЯГЇЯГЪ |"##),
        ("invalid-path", r##"ЯгЁЯгг val ЯгД ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгфЯгЦ |"##),
    ],
}
}

/// Language ID: or;
/// Map name: "set_md";
/// Description: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц;
pub(super) const fn get_or_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯгфЯг░Яг┐ЯггЯг░ЯГЇЯгцЯГЇЯгцЯг┐Ягц ЯггЯг┐ЯгиЯГЪЯггЯгИЯГЇЯгцЯГЂ ** ЯгИЯгъЯГЇЯгџЯГЪ Яг╣ЯГЂЯгЈ ЯгеЯгЙЯг╣Яг┐ЯгЂ ** ЯгИЯгъЯГЇЯгџЯГЪ Яг╣ЯГЄЯгг ЯгеЯгЙЯг╣Яг┐ЯгЂ ЯгЋЯгЙЯг░ЯгБ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯгЋЯГЂЯг╣ЯгЙЯг»ЯгЙЯгЄ ЯгеЯгЦЯг┐Яг▓ЯгЙ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯгеЯГѓЯгцЯге Яг«ЯГѓЯг▓ЯГЇЯГЪ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯгЁЯгг val ЯгД ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгфЯгЦ [48;2;34;34;34m[38;2;255;255;255m|[0m"##),
    ],
}
}

/// Language ID: or;
/// Map name: "get";
/// Description: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯгЌЯге\u{b4d}ЯгцЯгг\u{b4d}ЯГЪЯгИ\u{b4d}ЯгЦЯг│ ЯгФЯг░\u{b4d}Яг«\u{b3e}ЯгЪ\u{b4d} |");
/// ```
pub(super) const fn get_or_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯгЌЯгеЯГЇЯгцЯггЯГЇЯГЪЯгИЯГЇЯгЦЯг│ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ |"##),
        ("src-fmt", r##"ЯгЅЯгцЯГЇЯгИ ЯгФЯгЙЯгЄЯг▓ЯГЇ ЯгФЯг░ЯГЇЯг«ЯгЙЯгЪЯГЇ |"##),
    ],
}
}

/// or: ЯгЊЯгАЯг╝Яг┐Ягє, ЯгЊЯгАЯг╝Яг┐Ягє, ЯгГЯгЙЯг░Ягц
pub(super) const fn get_or_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_or_map_conversion),
        ("get", get_or_map_get),
        ("set_md", get_or_map_set_md),
        ("set", get_or_map_set),
        ("conversion_md", get_or_map_conversion_md),
    ],
}
}

/// Language ID: pa;
/// Map name: "conversion";
/// Description: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯеєЯеЪ\u{a4b}Яе«\u{a48}ЯеЪЯе┐ЯеЋЯе▓ЯЕђ ЯеФЯеЙЯе░Яе«\u{a48}ЯеЪ Яее\u{a42}\u{a70} ЯеєЯефЯеБ\u{a47} ЯеєЯеф Яеќ\u{a4b}ЯеюЯеБ ЯехЯе┐\u{a71}Яеџ ЯеЁЯеИЯеФЯе▓.ЯеЋЯе┐Яе░ЯефЯеЙ ЯеЋЯе░ЯеЋ\u{a47} Яе╣\u{a71}ЯеЦЯЕђ\u{a02} ЯееЯе┐Яе░ЯеДЯеЙЯе░Яец ЯеЋЯе░\u{a4b}.");
/// ```
pub(super) const fn get_pa_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** ЯеЁЯеюЯЕЄ ЯецЯЕ▒ЯеЋ ЯеИЯе╣Яе┐Яе»ЯЕІЯеЌЯЕђ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ **: `Яе▓Яе┐ЯеИЯеф ЯељЯеИ-ЯеИЯе«ЯЕђЯеЋЯе░Яее` ЯецЯЕІЯеѓ` Яе╣ЯЕІЯе░ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪЯеЙЯеѓ ЯехЯе┐ЯЕ▒Яеџ ЯецЯегЯедЯЕђЯе▓ ЯеЋЯе░ЯееЯеЙ"##),
        ("unknown-fmt", r##"ЯеЁЯеБЯеюЯеЙЯеБ ЯеФЯеЙЯеЄЯе▓ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ"##),
        ("currently-supported", r##"Яе«ЯЕїЯеюЯЕѓЯедЯеЙ ЯеИЯе«ЯЕЄЯеѓ ЯеИЯе╣Яе┐Яе»ЯЕІЯеЌЯЕђ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯеИЯЕѓЯеџЯЕђ:"##),
        ("auto-detection-failed", r##"ЯеєЯеЪЯЕІЯе«ЯЕѕЯеЪЯе┐ЯеЋЯе▓ЯЕђ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯееЯЕѓЯЕ░ ЯеєЯефЯеБЯЕЄ ЯеєЯеф ЯеќЯЕІЯеюЯеБ ЯехЯе┐ЯЕ▒Яеџ ЯеЁЯеИЯеФЯе▓.ЯеЋЯе┐Яе░ЯефЯеЙ ЯеЋЯе░ЯеЋЯЕЄ Яе╣ЯЕ▒ЯеЦЯЕђЯеѓ ЯееЯе┐Яе░ЯеДЯеЙЯе░Яец ЯеЋЯе░ЯЕІ."##),
        ("not-included", r##"ЯеЄЯеИ ЯегЯеЙЯеѕЯееЯе░ЯЕђ ** ЯеИЯе╝ЯеЙЯе«Яе▓ ЯееЯе╣ЯЕђЯеѓ ЯеЋЯе░ЯедЯеЙ ** ЯеИЯЕ░ЯегЯЕ░ЯеДЯе┐Яец ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ Яе▓Яеѕ ЯефЯе░Яе┐ЯехЯе░ЯецЯее ЯеЋЯеЙЯе░ЯеюЯеИЯе╝ЯЕђЯе▓ЯецЯеЙ.
ЯецЯЕЂЯе╣ЯеЙЯееЯЕѓЯЕ░ ЯеєЯефЯеБЯЕЄ `ЯеЋЯеЙЯе░ЯеЌЯЕІ.ЯеЪЯЕїЯе«Яе▓` ЯеЁЯецЯЕЄ Яе«ЯЕЂЯЕю ЯеЋЯЕ░ЯефЯеЙЯеЄЯе▓ ЯехЯе┐ЯЕ▒Яеџ ЯеИЯЕ░ЯегЯЕ░ЯеДЯе┐Яец ЯехЯе┐ЯеИЯе╝ЯЕЄЯеИЯе╝ЯецЯеЙ ЯееЯЕѓЯЕ░ ЯеИЯе«Яе░ЯЕ▒ЯеЦ ЯеЋЯе░Яее ЯедЯЕђ ЯеюЯе╝Яе░ЯЕѓЯе░Яец Яе╣ЯЕѕ.
ЯеюЯЕЄ ЯеЄЯеИ ЯеИЯеЙЯЕ▒ЯеФЯеЪЯехЯЕЄЯеЁЯе░ ЯехЯе┐ЯЕ▒Яеџ ЯеЁЯееЯЕЂЯеИЯеЙЯе░ЯЕђ ЯеЋЯеЙЯе░ЯеюЯеИЯе╝ЯЕђЯе▓ЯецЯеЙ ЯеИЯе╝ЯеЙЯе«Яе▓ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ, ЯеЋЯе┐Яе░ЯефЯеЙ ЯеЋЯе░ЯеЋЯЕЄ ЯеЄЯЕ▒ЯеЋ Яе«ЯЕЂЯЕ▒ЯедЯеЙ ЯефЯЕЄЯеИЯе╝ ЯеЋЯе░ЯЕІ."##),
        ("conv-error", r##"ЯецЯегЯедЯЕђЯе▓ЯЕђ ЯедЯЕђ ЯеЌЯе▓ЯецЯЕђ"##),
        ("dst", r##"ЯеЪЯе┐ЯеЋЯеЙЯеБЯеЙ ЯеФЯеЙЯеѕЯе▓ Яе«ЯеЙЯе░ЯеЌ"##),
        ("unsupported", r##"ЯеЁЯеИЯе«Яе░ЯеЦЯе┐Яец ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯефЯе░Яе┐ЯехЯе░ЯецЯее"##),
        ("invalid-json1.0", r##"ЯеФЯеЙЯеѕЯе▓ ЯеЄЯЕ▒ЯеЋ ЯехЯЕѕЯеД `jonn 1.0 ЯедЯеЙ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ, `json5` ЯедЯЕЄ ЯефЯеЙЯе░ЯеИ ЯеЋЯе░Яее ЯедЯЕђ ЯеЋЯЕІЯеИЯе╝Яе┐ЯеИЯе╝ ЯеЋЯе░ Яе░Яе┐Яе╣ЯеЙ Яе╣ЯЕѕ ..."##),
    ],
}
}

/// Language ID: pa;
/// Map name: "conversion_md";
/// Description: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец;
pub(super) const fn get_pa_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ЯеЁЯеюЯЕЄ ЯецЯЕ▒ЯеЋ ЯеИЯе╣Яе┐Яе»ЯЕІЯеЌЯЕђ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯе▓Яе┐ЯеИЯеф ЯељЯеИ-ЯеИЯе«ЯЕђЯеЋЯе░Яее[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ЯецЯЕІЯеѓ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Яе╣ЯЕІЯе░ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪЯеЙЯеѓ ЯехЯе┐ЯЕ▒Яеџ ЯецЯегЯедЯЕђЯе▓ ЯеЋЯе░ЯееЯеЙ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯеЁЯеБЯеюЯеЙЯеБ ЯеФЯеЙЯеЄЯе▓ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯе«ЯЕїЯеюЯЕѓЯедЯеЙ ЯеИЯе«ЯЕЄЯеѓ ЯеИЯе╣Яе┐Яе»ЯЕІЯеЌЯЕђ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯеИЯЕѓЯеџЯЕђ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯеєЯеЪЯЕІЯе«ЯЕѕЯеЪЯе┐ЯеЋЯе▓ЯЕђ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯееЯЕѓЯЕ░ ЯеєЯефЯеБЯЕЄ ЯеєЯеф ЯеќЯЕІЯеюЯеБ ЯехЯе┐ЯЕ▒Яеџ ЯеЁЯеИЯеФЯе▓.ЯеЋЯе┐Яе░ЯефЯеЙ ЯеЋЯе░ЯеЋЯЕЄ Яе╣ЯЕ▒ЯеЦЯЕђЯеѓ ЯееЯе┐Яе░ЯеДЯеЙЯе░Яец ЯеЋЯе░ЯЕІ.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯеЄЯеИ ЯегЯеЙЯеѕЯееЯе░ЯЕђ ** ЯеИЯе╝ЯеЙЯе«Яе▓ ЯееЯе╣ЯЕђЯеѓ ЯеЋЯе░ЯедЯеЙ ** ЯеИЯЕ░ЯегЯЕ░ЯеДЯе┐Яец ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ Яе▓Яеѕ ЯефЯе░Яе┐ЯехЯе░ЯецЯее ЯеЋЯеЙЯе░ЯеюЯеИЯе╝ЯЕђЯе▓ЯецЯеЙ.
[48;2;34;34;34m[38;2;255;255;255mЯецЯЕЂЯе╣ЯеЙЯееЯЕѓЯЕ░ ЯеєЯефЯеБЯЕЄ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯеЋЯеЙЯе░ЯеЌЯЕІ.ЯеЪЯЕїЯе«Яе▓[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯеЁЯецЯЕЄ Яе«ЯЕЂЯЕю ЯеЋЯЕ░ЯефЯеЙЯеЄЯе▓ ЯехЯе┐ЯЕ▒Яеџ ЯеИЯЕ░ЯегЯЕ░ЯеДЯе┐Яец ЯехЯе┐ЯеИЯе╝ЯЕЄЯеИЯе╝ЯецЯеЙ ЯееЯЕѓЯЕ░ ЯеИЯе«Яе░ЯЕ▒ЯеЦ ЯеЋЯе░Яее ЯедЯЕђ ЯеюЯе╝Яе░ЯЕѓЯе░Яец Яе╣ЯЕѕ.
[48;2;34;34;34m[38;2;255;255;255mЯеюЯЕЄ ЯеЄЯеИ ЯеИЯеЙЯЕ▒ЯеФЯеЪЯехЯЕЄЯеЁЯе░ ЯехЯе┐ЯЕ▒Яеџ ЯеЁЯееЯЕЂЯеИЯеЙЯе░ЯЕђ ЯеЋЯеЙЯе░ЯеюЯеИЯе╝ЯЕђЯе▓ЯецЯеЙ ЯеИЯе╝ЯеЙЯе«Яе▓ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ, ЯеЋЯе┐Яе░ЯефЯеЙ ЯеЋЯе░ЯеЋЯЕЄ ЯеЄЯЕ▒ЯеЋ Яе«ЯЕЂЯЕ▒ЯедЯеЙ ЯефЯЕЄЯеИЯе╝ ЯеЋЯе░ЯЕІ.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯецЯегЯедЯЕђЯе▓ЯЕђ ЯедЯЕђ ЯеЌЯе▓ЯецЯЕђ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯеЪЯе┐ЯеЋЯеЙЯеБЯеЙ ЯеФЯеЙЯеѕЯе▓ Яе«ЯеЙЯе░ЯеЌ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯеЁЯеИЯе«Яе░ЯеЦЯе┐Яец ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯефЯе░Яе┐ЯехЯе░ЯецЯее[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯеФЯеЙЯеѕЯе▓ ЯеЄЯЕ▒ЯеЋ ЯехЯЕѕЯеД [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjonn 1.0 ЯедЯеЙ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ ЯееЯе╣ЯЕђЯеѓ Яе╣ЯЕѕ, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЯедЯЕЄ ЯефЯеЙЯе░ЯеИ ЯеЋЯе░Яее ЯедЯЕђ ЯеЋЯЕІЯеИЯе╝Яе┐ЯеИЯе╝ ЯеЋЯе░ Яе░Яе┐Яе╣ЯеЙ Яе╣ЯЕѕ ...[0m"##),
    ],
}
}

/// Language ID: pa;
/// Map name: "set";
/// Description: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯеЁЯе»\u{a4b}ЯеЌ ЯеФЯеЙЯеѕЯе▓ Яе«ЯеЙЯе░ЯеЌ.");
/// ```
pub(super) const fn get_pa_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯеИЯЕІЯеДЯЕђ Яе╣ЯЕІЯеѕ ЯеИЯе«ЯЕ▒ЯеЌЯе░ЯЕђ ** ** ЯееЯе╣ЯЕђЯеѓ ЯегЯеџЯеЙЯеѕ ЯеюЯеЙЯеЈЯеЌЯЕђ ЯеЋЯе┐ЯеЅЯеѓЯеЋЯе┐ `ЯеИЯе╝ЯехЯЕђ = ЯееЯЕѓЯЕ░ ЯееЯе╣ЯЕђЯеѓ ЯегЯЕЂЯе▓ЯеЙЯеЄЯеє ЯеюЯеЙЯеЈЯеЌЯеЙ."##),
        ("new-value", r##"ЯееЯехЯеЙЯеѓ Яе«ЯЕЂЯЕ▒Яе▓"##),
        ("invalid-path", r##"ЯеЁЯе»ЯЕІЯеЌ ЯеФЯеЙЯеѕЯе▓ Яе«ЯеЙЯе░ЯеЌ."##),
    ],
}
}

/// Language ID: pa;
/// Map name: "set_md";
/// Description: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец;
pub(super) const fn get_pa_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯеИЯЕІЯеДЯЕђ Яе╣ЯЕІЯеѕ ЯеИЯе«ЯЕ▒ЯеЌЯе░ЯЕђ ** ** ЯееЯе╣ЯЕђЯеѓ ЯегЯеџЯеЙЯеѕ ЯеюЯеЙЯеЈЯеЌЯЕђ ЯеЋЯе┐ЯеЅЯеѓЯеЋЯе┐ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯеИЯе╝ЯехЯЕђ = ЯееЯЕѓЯЕ░ ЯееЯе╣ЯЕђЯеѓ ЯегЯЕЂЯе▓ЯеЙЯеЄЯеє ЯеюЯеЙЯеЈЯеЌЯеЙ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯееЯехЯеЙЯеѓ Яе«ЯЕЂЯЕ▒Яе▓[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯеЁЯе»ЯЕІЯеЌ ЯеФЯеЙЯеѕЯе▓ Яе«ЯеЙЯе░ЯеЌ.[0m"##),
    ],
}
}

/// Language ID: pa;
/// Map name: "get";
/// Description: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Яе«\u{a70}Яею\u{a3c}Яе┐Яе▓ ЯедЯеЙ ЯеФЯеЙЯе░Яе«\u{a48}ЯеЪ");
/// ```
pub(super) const fn get_pa_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Яе«ЯЕ░ЯеюЯе╝Яе┐Яе▓ ЯедЯеЙ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ"##),
        ("src-fmt", r##"ЯеИЯе░ЯЕІЯец ЯеФЯеЙЯеЄЯе▓ ЯеФЯеЙЯе░Яе«ЯЕѕЯеЪ"##),
    ],
}
}

/// pa: ЯефЯЕ░ЯеюЯеЙЯегЯЕђ, ЯеЌЯЕЂЯе░Яе«ЯЕЂЯеќЯЕђ, ЯеГЯеЙЯе░Яец
pub(super) const fn get_pa_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_pa_map_conversion),
        ("get", get_pa_map_get),
        ("set_md", get_pa_map_set_md),
        ("set", get_pa_map_set),
        ("conversion_md", get_pa_map_conversion_md),
    ],
}
}

/// Language ID: pl;
/// Map name: "conversion";
/// Description: polski, ┼ѓaci┼ёskie, Polska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nie uda┼ѓo si─Ў automatycznie wykry─Є formatu. Prosz─Ў okre┼Џli─Є go r─Ўcznie.");
/// ```
pub(super) const fn get_pl_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Ten plik nie jest w prawid┼ѓowym formacie `json 1.0`. Pr├│ba parsowania jako `json5`..."##),
        ("not-included", r##"To narz─Ўdzie **nie zawiera** funkcjonalno┼Џci konwersji dla danego formatu.
Musisz w┼ѓ─Ёczy─Є odpowiedni─Ё funkcj─Ў w pliku `Cargo.toml` i ponownie skompilowa─Є.
Je┼Џli to oprogramowanie nie zawiera odpowiedniej funkcjonalno┼Џci, zg┼ѓo┼Џ problem."##),
        ("currently-supported", r##"Aktualnie obs┼ѓugiwane formaty:"##),
        ("unsupported", r##"Konwersja nieobs┼ѓugiwanego formatu."##),
        ("auto-detection-failed", r##"Nie uda┼ѓo si─Ў automatycznie wykry─Є formatu. Prosz─Ў okre┼Џli─Є go r─Ўcznie."##),
        ("not-support-deser-sexp", r##"**Jeszcze nieobs┼ѓugiwane**: konwersja z `Lisp S-Expression` na `inne formaty`."##),
        ("unknown-fmt", r##"Nieznany format pliku."##),
        ("not-saved", r##"Nast─Ўpuj─Ёca zawarto┼Џ─Є **nie zostanie** zapisana, poniewa┼╝ nie zosta┼ѓa wywo┼ѓana opcja `--save`."##),
        ("dst", r##"┼џcie┼╝ka docelowego pliku"##),
        ("conv-error", r##"B┼ѓ─Ёd konwersji."##),
    ],
}
}

/// Language ID: pl;
/// Map name: "conversion_md";
/// Description: polski, ┼ѓaci┼ёskie, Polska;
pub(super) const fn get_pl_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mTen plik nie jest w prawid┼ѓowym formacie [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m. Pr├│ba parsowania jako [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mTo narz─Ўdzie [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnie zawiera[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m funkcjonalno┼Џci konwersji dla danego formatu.
[48;2;34;34;34m[38;2;255;255;255mMusisz w┼ѓ─Ёczy─Є odpowiedni─Ё funkcj─Ў w pliku [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m i ponownie skompilowa─Є.
[48;2;34;34;34m[38;2;255;255;255mJe┼Џli to oprogramowanie nie zawiera odpowiedniej funkcjonalno┼Џci, zg┼ѓo┼Џ problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAktualnie obs┼ѓugiwane formaty:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mKonwersja nieobs┼ѓugiwanego formatu.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNie uda┼ѓo si─Ў automatycznie wykry─Є formatu. Prosz─Ў okre┼Џli─Є go r─Ўcznie.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mJeszcze nieobs┼ѓugiwane[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: konwersja z [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m na [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255minne formaty[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNieznany format pliku.[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNast─Ўpuj─Ёca zawarto┼Џ─Є [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnie zostanie[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m zapisana, poniewa┼╝ nie zosta┼ѓa wywo┼ѓana opcja [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┼џcie┼╝ka docelowego pliku[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mB┼ѓ─Ёd konwersji.[0m"##),
    ],
}
}

/// Language ID: pl;
/// Map name: "set";
/// Description: polski, ┼ѓaci┼ёskie, Polska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Nieprawid┼ѓowa ┼Џcie┼╝ka pliku.");
/// ```
pub(super) const fn get_pl_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Zmodyfikowana zawarto┼Џ─Є **nie zostanie** zapisana, poniewa┼╝ nie zosta┼ѓa wywo┼ѓana opcja `--sv`."##),
        ("new-value", r##"Nowa warto┼Џ─Є"##),
        ("invalid-path", r##"Nieprawid┼ѓowa ┼Џcie┼╝ka pliku."##),
    ],
}
}

/// Language ID: pl;
/// Map name: "set_md";
/// Description: polski, ┼ѓaci┼ёskie, Polska;
pub(super) const fn get_pl_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mZmodyfikowana zawarto┼Џ─Є [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mnie zostanie[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m zapisana, poniewa┼╝ nie zosta┼ѓa wywo┼ѓana opcja [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNowa warto┼Џ─Є[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNieprawid┼ѓowa ┼Џcie┼╝ka pliku.[0m"##),
    ],
}
}

/// Language ID: pl;
/// Map name: "get";
/// Description: polski, ┼ѓaci┼ёskie, Polska;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format docelowy");
/// ```
pub(super) const fn get_pl_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format docelowy"##),
        ("src-fmt", r##"Format pliku ┼║r├│d┼ѓowego"##),
    ],
}
}

/// pl: polski, ┼ѓaci┼ёskie, Polska
pub(super) const fn get_pl_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_pl_map_conversion),
        ("get", get_pl_map_get),
        ("set_md", get_pl_map_set_md),
        ("set", get_pl_map_set),
        ("conversion_md", get_pl_map_conversion_md),
    ],
}
}

/// Language ID: ps;
/// Map name: "conversion";
/// Description: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "┘Й┘Є пД┘ѕпф┘ѕ┘ЁпДпф ┌Ѕ┘ѕ┘ё █ї█љ пе format ┘Є ┌Еп┤┘Ђ ┌Е┘ѕ┘ё ┘ѕ┘єп┤┘ѕ┘ё.┘Ё┘Єп▒пепД┘є┘і ┘ѕ┌Е┌Њпд ┘Й┘Є ┘ёпДп│┘і ┌Ѕ┘ѕ┘ё ┘Ёп┤п«пх ┌Е┌Њпд.");
/// ```
pub(super) const fn get_ps_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"Whoc ┘є┘Є п»█ї ┘Ё┘ёпДпф┌Њ **: п» `┘ё█ї┘Йп│ пД█їп│ пД█їп│ пД█їп│ пД█ї ┌Ёп▒┌Ф┘єп»┘ѕ┘ё 'пД┘ѕ ┘є┘ѕп▒ пе┘Ё┘ѕ┘є┘Є"##),
        ("unknown-fmt", r##"┘єпД┘Ёп╣┘ё┘ѕ┘Ё┘Є п»┘ѕпф┘є┘Є"##),
        ("currently-supported", r##"пД┘ѕп│ ┘Ё┘ЄпД┘ё п» пе█ї┘Ё█љ ┘Ё┘ёпДпф┌Њ п┤┘ѕ┘і ┘ЂпДп▒┘Ё█ї┘╝┘ѕ┘є┘ѕ ┘ё█їп│пф:"##),
        ("auto-detection-failed", r##"┘Й┘Є пД┘ѕпф┘ѕ┘ЁпДпф ┌Ѕ┘ѕ┘ё █ї█љ пе format ┘Є ┌Еп┤┘Ђ ┌Е┘ѕ┘ё ┘ѕ┘єп┤┘ѕ┘ё.┘Ё┘Єп▒пепД┘є┘і ┘ѕ┌Е┌Њпд ┘Й┘Є ┘ёпДп│┘і ┌Ѕ┘ѕ┘ё ┘Ёп┤п«пх ┌Е┌Њпд."##),
        ("not-included", r##"п»пД пепДпд┘єп▒█ї ** п» пД┌Њ┘ѕ┘єп»┘Є пе format █љ ┘ё┘ЙпДп▒┘Є п» пфпепДп»┘ё█љ ┘Ђп╣пД┘ё█їпф ┌Е█љ п┤пД┘Ё┘ё ┘єп»┘і ** п» пфпепДп»┘ё█љ ┘Ђп╣пД┘ё█їпф.
пфпДп│┘ѕ пД┌Њпф█їпД ┘ёп▒пд ┘Й┘Є п«┘Й┘ё `┌ЕпДп▒┌Ф┘ѕ пД█ї┘ѕ┘╝┘ѕ┘ё пД┘ѕ пе█їпД пф┘єпИ█ї┘Ё┘ѕ┘ё┘ѕ ┌Е█љ пД┌Њ┘ѕ┘єп»┘Є пе feature ┘Є ┘ѕ┌Њ ┌Е┌Њпд.
┌Е┘Є ┌є█їп▒█љ п»пД п│пД┘Ђ┘╝┘ѕ█їп▒ ┘ѕп▒пф┘Є ┘Ђп╣пД┘ё█їпф ┘є┘Є ┘ѕ┘іпї ┘Ё┘Єп▒пепД┘є┘і ┘ѕ┌Е┌Њпд █ї┘ѕ┘Є ┘Ёп│┘ё┘Є ┘ѕп│┘ЙпДп▒пд."##),
        ("conv-error", r##"п» пеп»┘ё┘ѕ┘ё┘ѕ пф█љп▒┘ѕпф┘є┘Є"##),
        ("dst", r##"┘Ё┘єп▓┘ё п»┘ѕпф┘є█љ ┘ёпДп▒"##),
        ("unsupported", r##"п» ┘єпД┘Ё┘ёпДпф┌Њ█ї ┘є┌џ┘Є"##),
        ("invalid-json1.0", r##"┘ЂпД█ї┘ё п» пДп╣пфпепДп▒ ┘ѕ┌Њ `JSon 1.0` пе format ┘Є ┘є┘Є п»┘Єпї ┘Є┌Ё┘Є ┌Е┘ѕ┘і п» `json5```````` ... ..."##),
    ],
}
}

/// Language ID: ps;
/// Map name: "conversion_md";
/// Description: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є;
pub(super) const fn get_ps_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255mWhoc ┘є┘Є п»█ї ┘Ё┘ёпДпф┌Њ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: п» [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m┘ё█ї┘Йп│ пД█їп│ пД█їп│ пД█їп│ пД█ї ┌Ёп▒┌Ф┘єп»┘ѕ┘ё 'пД┘ѕ ┘є┘ѕп▒ пе┘Ё┘ѕ┘є┘Є[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпД┘Ёп╣┘ё┘ѕ┘Ё┘Є п»┘ѕпф┘є┘Є[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mпД┘ѕп│ ┘Ё┘ЄпД┘ё п» пе█ї┘Ё█љ ┘Ё┘ёпДпф┌Њ п┤┘ѕ┘і ┘ЂпДп▒┘Ё█ї┘╝┘ѕ┘є┘ѕ ┘ё█їп│пф:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m┘Й┘Є пД┘ѕпф┘ѕ┘ЁпДпф ┌Ѕ┘ѕ┘ё █ї█љ пе format ┘Є ┌Еп┤┘Ђ ┌Е┘ѕ┘ё ┘ѕ┘єп┤┘ѕ┘ё.┘Ё┘Єп▒пепД┘є┘і ┘ѕ┌Е┌Њпд ┘Й┘Є ┘ёпДп│┘і ┌Ѕ┘ѕ┘ё ┘Ёп┤п«пх ┌Е┌Њпд.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mп»пД пепДпд┘єп▒█ї ** п» пД┌Њ┘ѕ┘єп»┘Є пе format █љ ┘ё┘ЙпДп▒┘Є п» пфпепДп»┘ё█љ ┘Ђп╣пД┘ё█їпф ┌Е█љ п┤пД┘Ё┘ё ┘єп»┘і ** п» пфпепДп»┘ё█љ ┘Ђп╣пД┘ё█їпф.
[48;2;34;34;34m[38;2;255;255;255mпфпДп│┘ѕ пД┌Њпф█їпД ┘ёп▒пд ┘Й┘Є п«┘Й┘ё [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m┌ЕпДп▒┌Ф┘ѕ пД█ї┘ѕ┘╝┘ѕ┘ё пД┘ѕ пе█їпД пф┘єпИ█ї┘Ё┘ѕ┘ё┘ѕ ┌Е█љ пД┌Њ┘ѕ┘єп»┘Є пе feature ┘Є ┘ѕ┌Њ ┌Е┌Њпд.
[48;2;34;34;34m[38;2;0;255;255m┌Е┘Є ┌є█їп▒█љ п»пД п│пД┘Ђ┘╝┘ѕ█їп▒ ┘ѕп▒пф┘Є ┘Ђп╣пД┘ё█їпф ┘є┘Є ┘ѕ┘іпї ┘Ё┘Єп▒пепД┘є┘і ┘ѕ┌Е┌Њпд █ї┘ѕ┘Є ┘Ёп│┘ё┘Є ┘ѕп│┘ЙпДп▒пд.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mп» пеп»┘ё┘ѕ┘ё┘ѕ пф█љп▒┘ѕпф┘є┘Є[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ё┘єп▓┘ё п»┘ѕпф┘є█љ ┘ёпДп▒[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mп» ┘єпД┘Ё┘ёпДпф┌Њ█ї ┘є┌џ┘Є[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЂпД█ї┘ё п» пДп╣пфпепДп▒ ┘ѕ┌Њ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSon 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m пе format ┘Є ┘є┘Є п»┘Єпї ┘Є┌Ё┘Є ┌Е┘ѕ┘і п» [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5```````` ... ...[0m"##),
    ],
}
}

/// Language ID: ps;
/// Map name: "set";
/// Description: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "п║┘ёпи┘Є ┘ЂпД█ї┘ё ┘ёпДп▒┘Є.");
/// ```
pub(super) const fn get_ps_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"пфп║█їп▒ п┤┘ѕ█ї ┘Ё█ї┘є┌Ђ┘ЙпД┘є┌Ф┘Є ** ┘є┘Є ┘ЙпД┌Е┘Є п┤┘ѕ█љ ┌Ђ┌Е┘Є ┌є█љ `- - - - - - - - - - - -"##),
        ("new-value", r##"┘є┘ѕ█ї пДп▒п▓┌џпф"##),
        ("invalid-path", r##"п║┘ёпи┘Є ┘ЂпД█ї┘ё ┘ёпДп▒┘Є."##),
    ],
}
}

/// Language ID: ps;
/// Map name: "set_md";
/// Description: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є;
pub(super) const fn get_ps_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mпфп║█їп▒ п┤┘ѕ█ї ┘Ё█ї┘є┌Ђ┘ЙпД┘є┌Ф┘Є ** ┘є┘Є ┘ЙпД┌Е┘Є п┤┘ѕ█љ ┌Ђ┌Е┘Є ┌є█љ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- - - - - - - - - - - -[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘є┘ѕ█ї пДп▒п▓┌џпф[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mп║┘ёпи┘Є ┘ЂпД█ї┘ё ┘ёпДп▒┘Є.[0m"##),
    ],
}
}

/// Language ID: ps;
/// Map name: "get";
/// Description: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "п» ┘Ё┘єп▓┘ё пе .┘Є");
/// ```
pub(super) const fn get_ps_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"п» ┘Ё┘єп▓┘ё пе .┘Є"##),
        ("src-fmt", r##"п» п│п▒┌є█ї┘є█љ п»┘ѕп│█ї┘Є пе .┘Є"##),
    ],
}
}

/// ps: ┘Й┌џпф┘ѕ, п╣п▒пе┘і, пД┘Ђп║пД┘єп│пфпД┘є
pub(super) const fn get_ps_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ps_map_conversion),
        ("get", get_ps_map_get),
        ("set_md", get_ps_map_set_md),
        ("set", get_ps_map_set),
        ("conversion_md", get_ps_map_conversion_md),
    ],
}
}

/// Language ID: pt;
/// Map name: "conversion";
/// Description: portugu├фs, latim, Brasil;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Falha na detec├Д├Бo autom├Аtica do formato. Por favor especifique manualmente.");
/// ```
pub(super) const fn get_pt_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"O arquivo n├Бo est├А em formato `json 1.0` v├Аlido, tentando analis├А-lo como `json5`..."##),
        ("not-included", r##"Este bin├Аrio **n├Бo inclui** a funcionalidade de convers├Бo para o formato correspondente.
Voc├ф precisa ativar a feature relevante no seu `Cargo.toml` e recompilar.
Se este software n├Бo incluir a funcionalidade correspondente, por favor, envie um problema."##),
        ("currently-supported", r##"Lista de formatos atualmente suportados:"##),
        ("unsupported", r##"Convers├Бo de formato n├Бo suportada"##),
        ("auto-detection-failed", r##"Falha na detec├Д├Бo autom├Аtica do formato. Por favor especifique manualmente."##),
        ("not-support-deser-sexp", r##"**Ainda n├Бo suportado**: convers├Бo de `Lisp S-Expression` para `outros formatos`"##),
        ("unknown-fmt", r##"Formato de arquivo desconhecido"##),
        ("not-saved", r##"O seguinte conte├║do **n├Бo ser├А** salvo porque `--save` n├Бo foi chamado."##),
        ("dst", r##"Caminho do arquivo de destino"##),
        ("conv-error", r##"Erro de convers├Бo"##),
    ],
}
}

/// Language ID: pt;
/// Map name: "conversion_md";
/// Description: portugu├фs, latim, Brasil;
pub(super) const fn get_pt_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mO arquivo n├Бo est├А em formato [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m v├Аlido, tentando analis├А-lo como [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mEste bin├Аrio [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mn├Бo inclui[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m a funcionalidade de convers├Бo para o formato correspondente.
[48;2;34;34;34m[38;2;255;255;255mVoc├ф precisa ativar a feature relevante no seu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m e recompilar.
[48;2;34;34;34m[38;2;255;255;255mSe este software n├Бo incluir a funcionalidade correspondente, por favor, envie um problema.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista de formatos atualmente suportados:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mConvers├Бo de formato n├Бo suportada[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mFalha na detec├Д├Бo autom├Аtica do formato. Por favor especifique manualmente.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mAinda n├Бo suportado[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m: convers├Бo de [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m para [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255moutros formatos[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormato de arquivo desconhecido[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mO seguinte conte├║do [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mn├Бo ser├А[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m salvo porque [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m n├Бo foi chamado.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mCaminho do arquivo de destino[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mErro de convers├Бo[0m"##),
    ],
}
}

/// Language ID: pt;
/// Map name: "get";
/// Description: portugu├фs, latim, Brasil;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Formato de destino");
/// ```
pub(super) const fn get_pt_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Formato de destino"##),
        ("src-fmt", r##"Formato do arquivo de origem"##),
    ],
}
}

/// Language ID: pt;
/// Map name: "set";
/// Description: portugu├фs, latim, Brasil;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Caminho de arquivo inv├Аlido.");
/// ```
pub(super) const fn get_pt_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"O conte├║do modificado **n├Бo ser├А** salvo porque `--save` n├Бo foi chamado."##),
        ("new-value", r##"Novo valor"##),
        ("invalid-path", r##"Caminho de arquivo inv├Аlido."##),
    ],
}
}

/// Language ID: pt;
/// Map name: "set_md";
/// Description: portugu├фs, latim, Brasil;
pub(super) const fn get_pt_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mO conte├║do modificado [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mn├Бo ser├А[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m salvo porque [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m n├Бo foi chamado.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNovo valor[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mCaminho de arquivo inv├Аlido.[0m"##),
    ],
}
}

/// pt: portugu├фs, latim, Brasil
pub(super) const fn get_pt_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_pt_map_conversion),
        ("get", get_pt_map_get),
        ("set_md", get_pt_map_set_md),
        ("set", get_pt_map_set),
        ("conversion_md", get_pt_map_conversion_md),
    ],
}
}

/// Language ID: ro;
/// Map name: "conversion";
/// Description: rom├бn─Ѓ, latin─Ѓ, Rom├бnia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "nu a reu╚Ўit s─Ѓ detecteze automat formatul.V─Ѓ rug─Ѓm s─Ѓ specifica╚Џi manual.");
/// ```
pub(super) const fn get_ro_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Fi╚Ўierul nu este un format valabil РђъJSON 1.0`, ├«ncerc├бnd s─Ѓ analizeze ca `JSON5` ..."##),
        ("not-included", r##"Acest binar ** nu include ** func╚Џionalitatea de conversie pentru formatul relevant.
Trebuie s─Ѓ activa╚Џi func╚Џia relevant─Ѓ ├«n РђъCargo.tomlРђЮ ╚Ўi s─Ѓ v─Ѓ recompila╚Џi.
Dac─Ѓ acest software nu include func╚Џionalitatea corespunz─Ѓtoare, v─Ѓ rug─Ѓm s─Ѓ trimite╚Џi o problem─Ѓ."##),
        ("currently-supported", r##"Lista formatelor acceptate ├«n prezent:"##),
        ("unsupported", r##"conversia formatului neacceptat"##),
        ("auto-detection-failed", r##"nu a reu╚Ўit s─Ѓ detecteze automat formatul.V─Ѓ rug─Ѓm s─Ѓ specifica╚Џi manual."##),
        ("not-support-deser-sexp", r##"** Nu este acceptat ├«nc─Ѓ **: Conversia de la `Lisp S-Expresie` ├«n` Alte formate`"##),
        ("unknown-fmt", r##"Format de fi╚Ўier necunoscut"##),
        ("not-saved", r##"Urm─Ѓtorul con╚Џinut nu va fi salvat pentru c─Ѓ Рђъ`--save` nu a fost apelat."##),
        ("dst", r##"Calea fi╚Ўierului de destina╚Џie"##),
        ("conv-error", r##"eroare de conversie"##),
    ],
}
}

/// Language ID: ro;
/// Map name: "conversion_md";
/// Description: rom├бn─Ѓ, latin─Ѓ, Rom├бnia;
pub(super) const fn get_ro_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFi╚Ўierul nu este un format valabil РђъJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m, ├«ncerc├бnd s─Ѓ analizeze ca [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mAcest binar ** nu include ** func╚Џionalitatea de conversie pentru formatul relevant.
[48;2;34;34;34m[38;2;255;255;255mTrebuie s─Ѓ activa╚Џi func╚Џia relevant─Ѓ ├«n РђъCargo.tomlРђЮ ╚Ўi s─Ѓ v─Ѓ recompila╚Џi.
[48;2;34;34;34m[38;2;255;255;255mDac─Ѓ acest software nu include func╚Џionalitatea corespunz─Ѓtoare, v─Ѓ rug─Ѓm s─Ѓ trimite╚Џi o problem─Ѓ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista formatelor acceptate ├«n prezent:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mconversia formatului neacceptat[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mnu a reu╚Ўit s─Ѓ detecteze automat formatul.V─Ѓ rug─Ѓm s─Ѓ specifica╚Џi manual.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Nu este acceptat ├«nc─Ѓ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Conversia de la [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expresie[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ├«n[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Alte formate[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormat de fi╚Ўier necunoscut[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mUrm─Ѓtorul con╚Џinut nu va fi salvat pentru c─Ѓ Рђъ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nu a fost apelat.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mCalea fi╚Ўierului de destina╚Џie[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255meroare de conversie[0m"##),
    ],
}
}

/// Language ID: ro;
/// Map name: "set";
/// Description: rom├бn─Ѓ, latin─Ѓ, Rom├бnia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "calea de fi╚Ўier nevalid.");
/// ```
pub(super) const fn get_ro_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Con╚Џinutul modificat ** nu va fi salvat pentru c─Ѓ `--sv` nu a fost apelat."##),
        ("new-value", r##"Valoare nou─Ѓ"##),
        ("invalid-path", r##"calea de fi╚Ўier nevalid."##),
    ],
}
}

/// Language ID: ro;
/// Map name: "set_md";
/// Description: rom├бn─Ѓ, latin─Ѓ, Rom├бnia;
pub(super) const fn get_ro_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mCon╚Џinutul modificat ** nu va fi salvat pentru c─Ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nu a fost apelat.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mValoare nou─Ѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mcalea de fi╚Ўier nevalid.[0m"##),
    ],
}
}

/// Language ID: ro;
/// Map name: "get";
/// Description: rom├бn─Ѓ, latin─Ѓ, Rom├бnia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format de destina╚Џie");
/// ```
pub(super) const fn get_ro_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format de destina╚Џie"##),
        ("src-fmt", r##"Format de fi╚Ўier surs─Ѓ"##),
    ],
}
}

/// ro: rom├бn─Ѓ, latin─Ѓ, Rom├бnia
pub(super) const fn get_ro_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ro_map_conversion),
        ("get", get_ro_map_get),
        ("set_md", get_ro_map_set_md),
        ("set", get_ro_map_set),
        ("conversion_md", get_ro_map_conversion_md),
    ],
}
}

/// Language ID: ru;
/// Map name: "conversion";
/// Description: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлх ЛЃл┤л░л╗лЙЛЂЛї л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлхЛЂл║лИ лЙл▒лйл░ЛђЛЃлХлИЛѓЛї ЛёлЙЛђл╝л░Лѓ.лЪлЙлХл░л╗ЛЃл╣ЛЂЛѓл░, ЛЃл║л░лХлИЛѓлх л▓ЛђЛЃЛЄлйЛЃЛј.");
/// ```
pub(super) const fn get_ru_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лцл░л╣л╗ лйлх ЛЈл▓л╗ЛЈлхЛѓЛЂЛЈ л┤лхл╣ЛЂЛѓл▓лИЛѓлхл╗ЛїлйЛІл╝ ЛёлЙЛђл╝л░ЛѓлЙл╝ `json 1.0`, л┐ЛІЛѓл░ЛЈЛЂЛї л░лйл░л╗лИлилИЛђлЙл▓л░ЛѓЛї л║л░л║ `json5` ..."##),
        ("not-included", r##"лГЛѓлЙЛѓ л┤л▓лЙлИЛЄлйЛІл╣ ** лйлх л▓л║л╗ЛјЛЄл░лхЛѓ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗ЛїлйлЙЛЂЛѓЛї л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИЛЈ л┤л╗ЛЈ ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅлхл│лЙ ЛёлЙЛђл╝л░Лѓл░.
лњл░л╝ лйлхлЙл▒ЛЁлЙл┤лИл╝лЙ л▓л║л╗ЛјЛЄлИЛѓЛї ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅЛЃЛј ЛёЛЃлйл║ЛєлИЛј л▓ л▓л░Лѕлхл╝ `Cargo.toml` лИ л┐лхЛђлхл║лЙл╝л┐лИл╗лИЛђлЙл▓л░ЛѓЛї.
лЋЛЂл╗лИ ЛЇЛѓлЙ л┐ЛђлЙл│Лђл░л╝л╝лйлЙлх лЙл▒лхЛЂл┐лхЛЄлхлйлИлх лйлх л▓л║л╗ЛјЛЄл░лхЛѓ ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅЛЃЛј ЛёЛЃлйл║ЛєлИлЙлйл░л╗ЛїлйлЙЛЂЛѓЛї, лЙЛѓл┐Лђл░л▓ЛїЛѓлх л┐ЛђлЙл▒л╗лхл╝ЛЃ."##),
        ("currently-supported", r##"лАл┐лИЛЂлЙл║ ЛёлЙЛђл╝л░ЛѓлЙл▓ л┐лЙл┤л┤лхЛђлХлИл▓л░лхл╝ЛІЛЁ л▓ лйл░ЛЂЛѓлЙЛЈЛЅлхлх л▓Лђлхл╝ЛЈ:"##),
        ("unsupported", r##"лЮлхл┐лЙл┤л┤лхЛђлХлИл▓л░лхл╝лЙлх л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИлх ЛёлЙЛђл╝л░Лѓл░"##),
        ("auto-detection-failed", r##"лЮлх ЛЃл┤л░л╗лЙЛЂЛї л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлхЛЂл║лИ лЙл▒лйл░ЛђЛЃлХлИЛѓЛї ЛёлЙЛђл╝л░Лѓ.лЪлЙлХл░л╗ЛЃл╣ЛЂЛѓл░, ЛЃл║л░лХлИЛѓлх л▓ЛђЛЃЛЄлйЛЃЛј."##),
        ("not-support-deser-sexp", r##"** лхЛЅлх лйлх л┐лЙл┤л┤лхЛђлХлИл▓л░лхЛѓЛЂЛЈ **: л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИлх лИли `lisp s-expression` л▓ л┤ЛђЛЃл│лИлх ЛёлЙЛђл╝л░ЛѓЛІ"##),
        ("unknown-fmt", r##"лЮлхлИлил▓лхЛЂЛѓлйЛІл╣ ЛёлЙЛђл╝л░Лѓ Лёл░л╣л╗л░"##),
        ("not-saved", r##"лАл╗лхл┤ЛЃЛјЛЅлИл╣ ЛЂлЙл┤лхЛђлХлИл╝лЙлх ** лйлх л▒ЛЃл┤лхЛѓ ЛЂлЙЛЁЛђл░лйлхлйлЙ, л┐лЙЛѓлЙл╝ЛЃ ЛЄЛѓлЙ `--save` лйлх л▒ЛІл╗ л▓ЛІлил▓л░лй."##),
        ("dst", r##"лЪЛЃЛѓЛї Лёл░л╣л╗л░ лйл░лилйл░ЛЄлхлйлИЛЈ"##),
        ("conv-error", r##"лЙЛѕлИл▒л║л░ л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИЛЈ"##),
    ],
}
}

/// Language ID: ru;
/// Map name: "conversion_md";
/// Description: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ;
pub(super) const fn get_ru_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ лйлх ЛЈл▓л╗ЛЈлхЛѓЛЂЛЈ л┤лхл╣ЛЂЛѓл▓лИЛѓлхл╗ЛїлйЛІл╝ ЛёлЙЛђл╝л░ЛѓлЙл╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, л┐ЛІЛѓл░ЛЈЛЂЛї л░лйл░л╗лИлилИЛђлЙл▓л░ЛѓЛї л║л░л║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлГЛѓлЙЛѓ л┤л▓лЙлИЛЄлйЛІл╣ ** лйлх л▓л║л╗ЛјЛЄл░лхЛѓ ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗ЛїлйлЙЛЂЛѓЛї л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИЛЈ л┤л╗ЛЈ ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅлхл│лЙ ЛёлЙЛђл╝л░Лѓл░.
[48;2;34;34;34m[38;2;255;255;255mлњл░л╝ лйлхлЙл▒ЛЁлЙл┤лИл╝лЙ л▓л║л╗ЛјЛЄлИЛѓЛї ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅЛЃЛј ЛёЛЃлйл║ЛєлИЛј л▓ л▓л░Лѕлхл╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лИ л┐лхЛђлхл║лЙл╝л┐лИл╗лИЛђлЙл▓л░ЛѓЛї.
[48;2;34;34;34m[38;2;255;255;255mлЋЛЂл╗лИ ЛЇЛѓлЙ л┐ЛђлЙл│Лђл░л╝л╝лйлЙлх лЙл▒лхЛЂл┐лхЛЄлхлйлИлх лйлх л▓л║л╗ЛјЛЄл░лхЛѓ ЛЂлЙлЙЛѓл▓лхЛѓЛЂЛѓл▓ЛЃЛјЛЅЛЃЛј ЛёЛЃлйл║ЛєлИлЙлйл░л╗ЛїлйлЙЛЂЛѓЛї, лЙЛѓл┐Лђл░л▓ЛїЛѓлх л┐ЛђлЙл▒л╗лхл╝ЛЃ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлАл┐лИЛЂлЙл║ ЛёлЙЛђл╝л░ЛѓлЙл▓ л┐лЙл┤л┤лхЛђлХлИл▓л░лхл╝ЛІЛЁ л▓ лйл░ЛЂЛѓлЙЛЈЛЅлхлх л▓Лђлхл╝ЛЈ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐лЙл┤л┤лхЛђлХлИл▓л░лхл╝лЙлх л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИлх ЛёлЙЛђл╝л░Лѓл░[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлх ЛЃл┤л░л╗лЙЛЂЛї л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлхЛЂл║лИ лЙл▒лйл░ЛђЛЃлХлИЛѓЛї ЛёлЙЛђл╝л░Лѓ.лЪлЙлХл░л╗ЛЃл╣ЛЂЛѓл░, ЛЃл║л░лХлИЛѓлх л▓ЛђЛЃЛЄлйЛЃЛј.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лхЛЅлх лйлх л┐лЙл┤л┤лхЛђлХлИл▓л░лхЛѓЛЂЛЈ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИлх лИли [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m л▓ л┤ЛђЛЃл│лИлх ЛёлЙЛђл╝л░ЛѓЛІ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхлИлил▓лхЛЂЛѓлйЛІл╣ ЛёлЙЛђл╝л░Лѓ Лёл░л╣л╗л░[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлАл╗лхл┤ЛЃЛјЛЅлИл╣ ЛЂлЙл┤лхЛђлХлИл╝лЙлх ** лйлх л▒ЛЃл┤лхЛѓ ЛЂлЙЛЁЛђл░лйлхлйлЙ, л┐лЙЛѓлЙл╝ЛЃ ЛЄЛѓлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх л▒ЛІл╗ л▓ЛІлил▓л░лй.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mлЪЛЃЛѓЛї Лёл░л╣л╗л░ лйл░лилйл░ЛЄлхлйлИЛЈ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЙЛѕлИл▒л║л░ л┐ЛђлхлЙл▒Лђл░лилЙл▓л░лйлИЛЈ[0m"##),
    ],
}
}

/// Language ID: ru;
/// Map name: "set";
/// Description: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхл▓лхЛђлйЛІл╣ л┐ЛЃЛѓЛї л║ Лёл░л╣л╗ЛЃ.");
/// ```
pub(super) const fn get_ru_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"лЮлхл▓лхЛђлйЛІл╣ л┐ЛЃЛѓЛї л║ Лёл░л╣л╗ЛЃ."##),
        ("new-value", r##"лЮлЙл▓лЙлх лилйл░ЛЄлхлйлИлх"##),
        ("unsave-warn", r##"лўлил╝лхлйлхлйлйлЙлх ЛЂлЙл┤лхЛђлХлИл╝лЙлх **лйлх л▒ЛЃл┤лхЛѓ** ЛЂлЙЛЁЛђл░лйлхлйлЙ, л┐лЙЛѓлЙл╝ЛЃ ЛЄЛѓлЙ лйлх л▒ЛІл╗л░ лИЛЂл┐лЙл╗ЛїлилЙл▓л░лйл░ лЙл┐ЛєлИЛЈ `--sv`."##),
        ("type", r##"лблИл┐"##),
    ],
}
}

/// Language ID: ru;
/// Map name: "set_md";
/// Description: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ;
pub(super) const fn get_ru_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓лхЛђлйЛІл╣ л┐ЛЃЛѓЛї л║ Лёл░л╣л╗ЛЃ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлЙл▓лЙлх лилйл░ЛЄлхлйлИлх[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлўлил╝лхлйлхлйлйлЙлх ЛЂлЙл┤лхЛђлХлИл╝лЙлх [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mлйлх л▒ЛЃл┤лхЛѓ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m ЛЂлЙЛЁЛђл░лйлхлйлЙ, л┐лЙЛѓлЙл╝ЛЃ ЛЄЛѓлЙ лйлх л▒ЛІл╗л░ лИЛЂл┐лЙл╗ЛїлилЙл▓л░лйл░ лЙл┐ЛєлИЛЈ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mлблИл┐[0m"##),
    ],
}
}

/// Language ID: ru;
/// Map name: "get";
/// Description: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░Лѓ лйл░лилйл░ЛЄлхлйлИЛЈ");
/// ```
pub(super) const fn get_ru_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцлЙЛђл╝л░Лѓ лйл░лилйл░ЛЄлхлйлИЛЈ"##),
        ("src-fmt", r##"лцлЙЛђл╝л░Лѓ лИЛЂЛЁлЙл┤лйлЙл│лЙ Лёл░л╣л╗л░"##),
    ],
}
}

/// ru: ЛђЛЃЛЂЛЂл║лИл╣, л║лИЛђлИл╗л╗лИЛєл░, лалЙЛЂЛЂлИЛЈ
pub(super) const fn get_ru_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ru_map_conversion),
        ("get", get_ru_map_get),
        ("set_md", get_ru_map_set_md),
        ("set", get_ru_map_set),
        ("conversion_md", get_ru_map_conversion_md),
    ],
}
}

/// Language ID: sd;
/// Map name: "conversion";
/// Description: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "п«┘ѕп»┌фпДп▒ пип▒┘і┘ѓ┘і п│пД┘є пфп▒пф┘іпе ┌Ј┘і┌╗ █Й ┘єпД┌фпД┘Ё.┘Ё┘Єп▒пепД┘є┘і ┌фп▒┘і п»п│пф┘і пи┘ѕп▒ пф┘і ┘ѕпХпДпГпф ┌фп▒┘і┘ѕ.");
/// ```
pub(super) const fn get_sd_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** пД┌ЃпД пфпДпд┘і┘є п│┘Й┘ѕп▒┘й ┘єпД┘Є┘і ┌фпд┘і ┘ѕпд┘і **: ┘ё┘іп│ пД┘іп│ пДпИ┘ЄпДп▒ "┌Е┘і" ┘╗┘і┘є п┤┌ф┘ё┘є ┌Е┘і ""##),
        ("unknown-fmt", r##"┘єпД┘Ёп╣┘ё┘ѕ┘Ё ┘ЂпДпд┘ё ┘ЂпДп▒┘Ё┘і┘й"##),
        ("currently-supported", r##"┘Ђ┘і пД┘ёпГпД┘ё п│┘Й┘ѕп▒┘й ┘┐┘і┘ё ┘ЂпДп▒┘Ё┘і┘йп│ ┘ёп│┘й:"##),
        ("auto-detection-failed", r##"п«┘ѕп»┌фпДп▒ пип▒┘і┘ѓ┘і п│пД┘є пфп▒пф┘іпе ┌Ј┘і┌╗ █Й ┘єпД┌фпД┘Ё.┘Ё┘Єп▒пепД┘є┘і ┌фп▒┘і п»п│пф┘і пи┘ѕп▒ пф┘і ┘ѕпХпДпГпф ┌фп▒┘і┘ѕ."##),
        ("not-included", r##"┘Є┘і пепДпд┘єп▒┘і ** п┤пД┘Ё┘ё ┘є┘Є пб┘Є┘і ** ┘ёпД┌│пД┘Й┘і┘ё п┤┌ф┘ё ┘ёпДпА пфпеп»┘і┘ё┘і пг┘і ┌фпДп▒┌фп▒п»┌»┘і.
пф┘ѕ┘ЄпД┘є ┌Е┘і пф┘ѕ┘ЄпД┘є пг┘і "┌фпДп▒┌»┘ѕ пф┘і ┘ёпД┌│пД┘Й┘і┘ё ┘Ђ┘і┌єп▒ ┌Е┘і ┘Ђп╣пД┘ё ┌фп▒┌╗ пг┘і пХп▒┘ѕп▒пф пб┘Є┘і █й ┘╗┘і┘Єп▒ пГпДпх┘ё ┌ф┘і┘ѕ.
пг┘і┌ф┌Ј┘Є┘є ┘Є┘є п│пД┘Ђ┘й ┘ѕ┘іпдп▒ ┌Е┘і ┘Ё┘ё┘єп»┌Ў ┌фпДп▒┌фп▒п»┌»┘і п┤пД┘Ё┘ё ┘є┘Є ┘Єпг┘іпї ┘Ё┘Єп▒пепД┘є┘і ┌фп▒┘і ┘Є┌ф ┘Ёп│пд┘ё┘ѕ пг┘Ёп╣ ┌фп▒пД┘і┘ѕ."##),
        ("conv-error", r##"пфпеп»┘і┘ё┘і пг┘і п║┘ёпи┘і"##),
        ("dst", r##"┘Ё┘єп▓┘ё ┘ЂпДпд┘ё пг┘ѕ п▒п│пф┘ѕ"##),
        ("unsupported", r##"п│┘Є┌фпДп▒ ┘ѕпДп▒┘і ┘ЂпДп▒┘Ё┘і┘й пг┘і пфпеп»┘і┘ё┘і"##),
        ("invalid-json1.0", r##"┘ЂпДпд┘ё ┘Є┌ф пхпГ┘іпГ ┘є┘Є пб┘Є┘і `JSON 1.0` ┘ЂпДп▒┘Ё┘і┘йпї JSON5 "пг┘і ┌ф┘ѕп┤п┤ ┌ф┘єп»┘і ..."##),
    ],
}
}

/// Language ID: sd;
/// Map name: "conversion_md";
/// Description: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є;
pub(super) const fn get_sd_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** пД┌ЃпД пфпДпд┘і┘є п│┘Й┘ѕп▒┘й ┘єпД┘Є┘і ┌фпд┘і ┘ѕпд┘і [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ┘ё┘іп│ пД┘іп│ пДпИ┘ЄпДп▒ "┌Е┘і" ┘╗┘і┘є п┤┌ф┘ё┘є ┌Е┘і "[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпД┘Ёп╣┘ё┘ѕ┘Ё ┘ЂпДпд┘ё ┘ЂпДп▒┘Ё┘і┘й[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ђ┘і пД┘ёпГпД┘ё п│┘Й┘ѕп▒┘й ┘┐┘і┘ё ┘ЂпДп▒┘Ё┘і┘йп│ ┘ёп│┘й:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mп«┘ѕп»┌фпДп▒ пип▒┘і┘ѓ┘і п│пД┘є пфп▒пф┘іпе ┌Ј┘і┌╗ █Й ┘єпД┌фпД┘Ё.┘Ё┘Єп▒пепД┘є┘і ┌фп▒┘і п»п│пф┘і пи┘ѕп▒ пф┘і ┘ѕпХпДпГпф ┌фп▒┘і┘ѕ.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255m┘Є┘і пепДпд┘єп▒┘і ** п┤пД┘Ё┘ё ┘є┘Є пб┘Є┘і ** ┘ёпД┌│пД┘Й┘і┘ё п┤┌ф┘ё ┘ёпДпА пфпеп»┘і┘ё┘і пг┘і ┌фпДп▒┌фп▒п»┌»┘і.
[48;2;34;34;34m[38;2;255;255;255mпф┘ѕ┘ЄпД┘є ┌Е┘і пф┘ѕ┘ЄпД┘є пг┘і "┌фпДп▒┌»┘ѕ пф┘і ┘ёпД┌│пД┘Й┘і┘ё ┘Ђ┘і┌єп▒ ┌Е┘і ┘Ђп╣пД┘ё ┌фп▒┌╗ пг┘і пХп▒┘ѕп▒пф пб┘Є┘і █й ┘╗┘і┘Єп▒ пГпДпх┘ё ┌ф┘і┘ѕ.
[48;2;34;34;34m[38;2;255;255;255mпг┘і┌ф┌Ј┘Є┘є ┘Є┘є п│пД┘Ђ┘й ┘ѕ┘іпдп▒ ┌Е┘і ┘Ё┘ё┘єп»┌Ў ┌фпДп▒┌фп▒п»┌»┘і п┤пД┘Ё┘ё ┘є┘Є ┘Єпг┘іпї ┘Ё┘Єп▒пепД┘є┘і ┌фп▒┘і ┘Є┌ф ┘Ёп│пд┘ё┘ѕ пг┘Ёп╣ ┌фп▒пД┘і┘ѕ.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mпфпеп»┘і┘ё┘і пг┘і п║┘ёпи┘і[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ё┘єп▓┘ё ┘ЂпДпд┘ё пг┘ѕ п▒п│пф┘ѕ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mп│┘Є┌фпДп▒ ┘ѕпДп▒┘і ┘ЂпДп▒┘Ё┘і┘й пг┘і пфпеп»┘і┘ё┘і[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЂпДпд┘ё ┘Є┌ф пхпГ┘іпГ ┘є┘Є пб┘Є┘і [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┘ЂпДп▒┘Ё┘і┘йпї JSON5 "пг┘і ┌ф┘ѕп┤п┤ ┌ф┘єп»┘і ...[0m"##),
    ],
}
}

/// Language ID: sd;
/// Map name: "set";
/// Description: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "п║┘ёпи ┘ЂпДпд┘ё пг┘ѕ п▒п│пф┘ѕ.");
/// ```
pub(super) const fn get_sd_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"пфпеп»┘і┘ё ┘┐┘і┘ё ┘Ё┘ѕпДп» ** ** ** ┘ЁпГ┘Ђ┘ѕпИ ┘є┘Є ┘┐┘і┘єп»┘ѕпї ┌ЄпД┌фпД┌╗ пф┘Є - пД┘іп│ ┘ѕ┘і "┘є┘Є п│┌Ј┘і┘ѕ ┘ѕ┘і┘ѕ."##),
        ("new-value", r##"┘єпд┘і┘є ┘ѓ┘і┘Ёпф"##),
        ("invalid-path", r##"п║┘ёпи ┘ЂпДпд┘ё пг┘ѕ п▒п│пф┘ѕ."##),
    ],
}
}

/// Language ID: sd;
/// Map name: "set_md";
/// Description: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є;
pub(super) const fn get_sd_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mпфпеп»┘і┘ё ┘┐┘і┘ё ┘Ё┘ѕпДп» ** ** ** ┘ЁпГ┘Ђ┘ѕпИ ┘є┘Є ┘┐┘і┘єп»┘ѕпї ┌ЄпД┌фпД┌╗ пф┘Є - пД┘іп│ ┘ѕ┘і "┘є┘Є п│┌Ј┘і┘ѕ ┘ѕ┘і┘ѕ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпд┘і┘є ┘ѓ┘і┘Ёпф[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mп║┘ёпи ┘ЂпДпд┘ё пг┘ѕ п▒п│пф┘ѕ.[0m"##),
    ],
}
}

/// Language ID: sd;
/// Map name: "get";
/// Description: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "┘Ё┘єп▓┘ё пг┘і п┤┌ф┘ё");
/// ```
pub(super) const fn get_sd_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"┘Ё┘єп▓┘ё пг┘і п┤┌ф┘ё"##),
        ("src-fmt", r##"┘ЁпДп«п░ ┘ЂпДпд┘ё ┘ЂпДп▒┘Ё┘і┘й"##),
    ],
}
}

/// sd: п│┘є┌ї┘і, п╣п▒пе┘і, ┘ЙпД┌фп│пфпД┘є
pub(super) const fn get_sd_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sd_map_conversion),
        ("get", get_sd_map_get),
        ("set_md", get_sd_map_set_md),
        ("set", get_sd_map_set),
        ("conversion_md", get_sd_map_conversion_md),
    ],
}
}

/// Language ID: si;
/// Map name: "conversion";
/// Description: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ЯХєЯХџЯиўЯХГ\u{dd2}ЯХ║ ЯиЃ\u{dca}ЯиђЯХ║ЯХѓЯХџ\u{dca}ЯХ╗\u{dd3}ЯХ║Яиђ ЯиёЯХ│\u{dd4}ЯХ▒\u{dcf} ЯХюЯиљЯХ▒\u{dd3}ЯХИЯХД ЯХЁЯХ┤ЯиюЯиёЯиюЯиЃЯХГ\u{dca} Яиђ\u{dd2}ЯХ║.ЯХџЯХ╗\u{dd4}ЯХФ\u{dcf}ЯХџЯХ╗ ЯХЁЯХГ\u{dd2}ЯХ▒\u{dca} ЯиЃЯХ│ЯиёЯХ▒\u{dca} ЯХџЯХ╗ЯХ▒\u{dca}ЯХ▒.");
/// ```
pub(super) const fn get_si_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** ЯХГЯиђЯХИЯХГЯиі ЯиЃЯиёЯХ║ ЯХ▒ЯиюЯХ»ЯХџЯиіЯиђЯиЈ ЯХ▒ЯиљЯХГ **:: lisp s ЯХ┤ЯиіЯХ╗ЯХџЯиЈЯиЂЯХ▒ЯХ║ 'ЯиђЯиЎЯХГЯињЯХ▒Яиі ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ЯХ║ ЯХџЯињЯХ╗ЯиЊЯХИ `ЯиђЯиЎЯХ▒ЯХГЯиі ЯХєЯХџЯиўЯХГЯињ'"##),
        ("unknown-fmt", r##"ЯХ▒ЯиюЯХ»ЯХ▒ЯиіЯХ▒ЯиЈ ЯХюЯиюЯХ▒Яић ЯХєЯХџЯиўЯХГЯињЯХ║"##),
        ("currently-supported", r##"ЯХ»ЯиљЯХ▒ЯХД ЯиЃЯиёЯиЈЯХ║ ЯХ»ЯХџЯиіЯиђЯХ▒ ЯХєЯХџЯиўЯХГЯињ ЯХйЯиљЯХ║ЯињЯиЃЯиіЯХГЯићЯиђ:"##),
        ("auto-detection-failed", r##"ЯХєЯХџЯиўЯХГЯињЯХ║ ЯиЃЯиіЯиђЯХ║ЯХѓЯХџЯиіЯХ╗ЯиЊЯХ║Яиђ ЯиёЯХ│ЯићЯХ▒ЯиЈ ЯХюЯиљЯХ▒ЯиЊЯХИЯХД ЯХЁЯХ┤ЯиюЯиёЯиюЯиЃЯХГЯиі ЯиђЯињЯХ║.ЯХџЯХ╗ЯићЯХФЯиЈЯХџЯХ╗ ЯХЁЯХГЯињЯХ▒Яиі ЯиЃЯХ│ЯиёЯХ▒Яиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒."##),
        ("not-included", r##"ЯХИЯиЎЯХИ ЯХ»ЯиіЯиђЯињЯХИЯХ║ ** ЯХЁЯХ»ЯиЈЯиЁ ЯХєЯХџЯиўЯХГЯињЯХ║ ЯиЃЯХ│ЯиёЯиЈ ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ ЯХџЯиіЯХ╗ЯињЯХ║ЯиЈЯХџЯиЈЯХ╗ЯињЯХГЯиіЯиђЯХ║ ЯХЄЯХГЯићЯиЁЯХГЯиі ЯХ▒ЯиюЯиђЯиџ.
ЯХћЯХХЯХюЯиџ `CARGO.OML`L ЯиёЯињ ЯХЁЯХ»ЯиЈЯиЁ ЯХЁЯХѓЯХюЯХ║ ЯХћЯХХЯХД ЯиЃЯХџЯиіЯХ╗ЯиЊЯХ║ ЯХџЯХ╗ ЯХ▒ЯиљЯиђЯХГ ЯиЃЯХџЯиЃЯиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒.
ЯХИЯиЎЯХИ ЯХИЯиўЯХ»ЯићЯХџЯиЈЯХѓЯХюЯХ║ЯХД ЯХЁЯХ▒ЯићЯХ╗ЯиќЯХ┤ ЯХџЯиіЯХ╗ЯињЯХ║ЯиЈЯХџЯиЈЯХ╗ЯињЯХГЯиіЯиђЯХ║ ЯХЄЯХГЯићЯиЁЯХГЯиі ЯХ▒ЯиюЯиђЯиџ ЯХ▒ЯХИЯиі, ЯХџЯХ╗ЯићЯХФЯиЈЯХџЯХ╗ ЯХюЯиљЯХДЯХйЯићЯиђЯХџЯиі ЯХЅЯХ»ЯињЯХ╗ЯињЯХ┤ЯХГЯиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒."##),
        ("conv-error", r##"ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ ЯХ»ЯиЮЯиѓЯХ║ЯХџЯињ"##),
        ("dst", r##"ЯХюЯХИЯХ▒ЯиЈЯХ▒ЯиіЯХГ ЯХюЯиюЯХ▒Яић ЯХИЯиЈЯХ╗ЯиіЯХюЯХ║"##),
        ("unsupported", r##"ЯиЃЯиёЯиЈЯХ║ ЯХ▒ЯиюЯХ»ЯХџЯиіЯиђЯХ▒ ЯХєЯХџЯиўЯХГЯињЯХ║ ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ЯХ║"##),
        ("invalid-json1.0", r##"ЯХюЯиюЯХ▒ЯићЯиђ ЯиђЯХйЯХѓЯХюЯић `JSON 1.0` ЯХєЯХџЯиўЯХГЯињЯХ║ЯХџЯиі ЯХ▒ЯиюЯиђЯХ▒ ЯХЁЯХГЯХ╗ ЯХЉЯХ║ json5` ЯХйЯиЎЯиЃ ЯиђЯињЯХюЯиіЯХ╗Яиё ЯХџЯињЯХ╗ЯиЊЯХИЯХД ЯХІЯХГЯиіЯиЃЯиЈЯиё ЯХџЯХ╗ЯХ║Яињ."##),
    ],
}
}

/// Language ID: si;
/// Map name: "conversion_md";
/// Description: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ;
pub(super) const fn get_si_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ЯХГЯиђЯХИЯХГЯиі ЯиЃЯиёЯХ║ ЯХ▒ЯиюЯХ»ЯХџЯиіЯиђЯиЈ ЯХ▒ЯиљЯХГ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m:: lisp s ЯХ┤ЯиіЯХ╗ЯХџЯиЈЯиЂЯХ▒ЯХ║ 'ЯиђЯиЎЯХГЯињЯХ▒Яиі ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ЯХ║ ЯХџЯињЯХ╗ЯиЊЯХИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯиђЯиЎЯХ▒ЯХГЯиі ЯХєЯХџЯиўЯХГЯињ'[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯХ▒ЯиюЯХ»ЯХ▒ЯиіЯХ▒ЯиЈ ЯХюЯиюЯХ▒Яић ЯХєЯХџЯиўЯХГЯињЯХ║[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯХ»ЯиљЯХ▒ЯХД ЯиЃЯиёЯиЈЯХ║ ЯХ»ЯХџЯиіЯиђЯХ▒ ЯХєЯХџЯиўЯХГЯињ ЯХйЯиљЯХ║ЯињЯиЃЯиіЯХГЯићЯиђ:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯХєЯХџЯиўЯХГЯињЯХ║ ЯиЃЯиіЯиђЯХ║ЯХѓЯХџЯиіЯХ╗ЯиЊЯХ║Яиђ ЯиёЯХ│ЯићЯХ▒ЯиЈ ЯХюЯиљЯХ▒ЯиЊЯХИЯХД ЯХЁЯХ┤ЯиюЯиёЯиюЯиЃЯХГЯиі ЯиђЯињЯХ║.ЯХџЯХ╗ЯићЯХФЯиЈЯХџЯХ╗ ЯХЁЯХГЯињЯХ▒Яиі ЯиЃЯХ│ЯиёЯХ▒Яиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯХИЯиЎЯХИ ЯХ»ЯиіЯиђЯињЯХИЯХ║ ** ЯХЁЯХ»ЯиЈЯиЁ ЯХєЯХџЯиўЯХГЯињЯХ║ ЯиЃЯХ│ЯиёЯиЈ ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ ЯХџЯиіЯХ╗ЯињЯХ║ЯиЈЯХџЯиЈЯХ╗ЯињЯХГЯиіЯиђЯХ║ ЯХЄЯХГЯићЯиЁЯХГЯиі ЯХ▒ЯиюЯиђЯиџ.
[48;2;34;34;34m[38;2;255;255;255mЯХћЯХХЯХюЯиџ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCARGO.OML[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mL ЯиёЯињ ЯХЁЯХ»ЯиЈЯиЁ ЯХЁЯХѓЯХюЯХ║ ЯХћЯХХЯХД ЯиЃЯХџЯиіЯХ╗ЯиЊЯХ║ ЯХџЯХ╗ ЯХ▒ЯиљЯиђЯХГ ЯиЃЯХџЯиЃЯиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒.
[48;2;34;34;34m[38;2;255;255;255mЯХИЯиЎЯХИ ЯХИЯиўЯХ»ЯићЯХџЯиЈЯХѓЯХюЯХ║ЯХД ЯХЁЯХ▒ЯићЯХ╗ЯиќЯХ┤ ЯХџЯиіЯХ╗ЯињЯХ║ЯиЈЯХџЯиЈЯХ╗ЯињЯХГЯиіЯиђЯХ║ ЯХЄЯХГЯићЯиЁЯХГЯиі ЯХ▒ЯиюЯиђЯиџ ЯХ▒ЯХИЯиі, ЯХџЯХ╗ЯићЯХФЯиЈЯХџЯХ╗ ЯХюЯиљЯХДЯХйЯићЯиђЯХџЯиі ЯХЅЯХ»ЯињЯХ╗ЯињЯХ┤ЯХГЯиі ЯХџЯХ╗ЯХ▒ЯиіЯХ▒.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ ЯХ»ЯиЮЯиѓЯХ║ЯХџЯињ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯХюЯХИЯХ▒ЯиЈЯХ▒ЯиіЯХГ ЯХюЯиюЯХ▒Яић ЯХИЯиЈЯХ╗ЯиіЯХюЯХ║[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯиЃЯиёЯиЈЯХ║ ЯХ▒ЯиюЯХ»ЯХџЯиіЯиђЯХ▒ ЯХєЯХџЯиўЯХГЯињЯХ║ ЯХ┤ЯХ╗ЯињЯиђЯХ╗ЯиіЯХГЯХ▒ЯХ║[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯХюЯиюЯХ▒ЯићЯиђ ЯиђЯХйЯХѓЯХюЯић [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯХєЯХџЯиўЯХГЯињЯХ║ЯХџЯиі ЯХ▒ЯиюЯиђЯХ▒ ЯХЁЯХГЯХ╗ ЯХЉЯХ║ json5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЯХйЯиЎЯиЃ ЯиђЯињЯХюЯиіЯХ╗Яиё ЯХџЯињЯХ╗ЯиЊЯХИЯХД ЯХІЯХГЯиіЯиЃЯиЈЯиё ЯХџЯХ╗ЯХ║Яињ.[0m"##),
    ],
}
}

/// Language ID: si;
/// Map name: "set";
/// Description: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ЯХЁЯиђЯХйЯХѓЯХю\u{dd4} ЯХюЯиюЯХ▒\u{dd4} ЯХИ\u{dcf}ЯХ╗\u{dca}ЯХюЯХ║ЯХџ\u{dca}.");
/// ```
pub(super) const fn get_si_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ЯХ▒ЯиђЯиЊЯХџЯХ╗ЯХФЯХ║ ЯХџЯХ╗ЯХ▒ ЯХйЯХ» ЯХЁЯХ▒ЯиіЯХГЯХ╗ЯиіЯХюЯХГЯХ║ *** `--sv` ЯХ▒ЯиюЯХџЯињЯХ║ЯиЈ" ** ЯХюЯиљЯиЁЯиђЯиЎЯХ▒ЯиіЯХ▒Яиџ ЯХ▒ЯиљЯХГ."##),
        ("new-value", r##"ЯХ▒Яиђ ЯХЁЯХюЯХ║"##),
        ("invalid-path", r##"ЯХЁЯиђЯХйЯХѓЯХюЯић ЯХюЯиюЯХ▒Яић ЯХИЯиЈЯХ╗ЯиіЯХюЯХ║ЯХџЯиі."##),
    ],
}
}

/// Language ID: si;
/// Map name: "set_md";
/// Description: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ;
pub(super) const fn get_si_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯХ▒ЯиђЯиЊЯХџЯХ╗ЯХФЯХ║ ЯХџЯХ╗ЯХ▒ ЯХйЯХ» ЯХЁЯХ▒ЯиіЯХГЯХ╗ЯиіЯХюЯХГЯХ║ *** [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯХ▒ЯиюЯХџЯињЯХ║ЯиЈ" ** ЯХюЯиљЯиЁЯиђЯиЎЯХ▒ЯиіЯХ▒Яиџ ЯХ▒ЯиљЯХГ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯХ▒Яиђ ЯХЁЯХюЯХ║[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯХЁЯиђЯХйЯХѓЯХюЯић ЯХюЯиюЯХ▒Яић ЯХИЯиЈЯХ╗ЯиіЯХюЯХ║ЯХџЯиі.[0m"##),
    ],
}
}

/// Language ID: si;
/// Map name: "get";
/// Description: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯХюЯХИЯХ▒\u{dcf}ЯХ▒\u{dca}ЯХГ ЯХєЯХџЯиўЯХГ\u{dd2}ЯХ║");
/// ```
pub(super) const fn get_si_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯХюЯХИЯХ▒ЯиЈЯХ▒ЯиіЯХГ ЯХєЯХџЯиўЯХГЯињЯХ║"##),
        ("src-fmt", r##"ЯХ┤ЯиіЯХ╗ЯХиЯиђ ЯХюЯиюЯХ▒Яић ЯХєЯХџЯиўЯХГЯињЯХ║"##),
    ],
}
}

/// si: ЯиЃЯињЯХѓЯиёЯХй, ЯиЃЯињЯХѓЯиёЯХй, ЯиЂЯиіРђЇЯХ╗ЯиЊ ЯХйЯХѓЯХџЯиЈЯиђ
pub(super) const fn get_si_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_si_map_conversion),
        ("get", get_si_map_get),
        ("set_md", get_si_map_set_md),
        ("set", get_si_map_set),
        ("conversion_md", get_si_map_conversion_md),
    ],
}
}

/// Language ID: sk;
/// Map name: "conversion";
/// Description: sloven─Їina, latinka, Slovensko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nepodarilo sa automaticky zisti┼Ц form├Аt.Zadajte ru─Їne.");
/// ```
pub(super) const fn get_sk_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"S├║bor nie je platn├й form├Аt `json 1.0`, ktor├й sa sna┼Й├Г analyzova┼Ц ako `json5` ..."##),
        ("not-included", r##"Tento bin├Аrny ** nezah┼Ћ┼ѕa ** funk─Їnos┼Ц konverzie pre pr├Гslu┼Аn├й form├Аt.
Mus├Гte povoli┼Ц relevantn├║ funkciu vo svojom `CARGO.Toml` a rekompilova┼Ц.
Ak tento softv├Еr nezah┼Ћ┼ѕa zodpovedaj├║cu funk─Їnos┼Ц, predlo┼Йte probl├Еm."##),
        ("currently-supported", r##"V s├║─Їasnosti podporovan├й zoznam form├Аtov:"##),
        ("unsupported", r##"Nepodporovan├й konverzia form├Аtu"##),
        ("auto-detection-failed", r##"Nepodarilo sa automaticky zisti┼Ц form├Аt.Zadajte ru─Їne."##),
        ("not-support-deser-sexp", r##"** e┼Аte nie je podporovan├й **: Konverzia z `lisp s-expression` na` ─Јal┼Аie form├Аty`"##),
        ("unknown-fmt", r##"Form├Аt nezn├Аmeho s├║boru"##),
        ("not-saved", r##"Nasleduj├║ci obsah ** sa neulo┼Й├Г **, preto┼Йe `--save` nebol zavolan├й."##),
        ("dst", r##"Cesta cie─Йov├Еho s├║boru"##),
        ("conv-error", r##"Chyba konverzie"##),
    ],
}
}

/// Language ID: sk;
/// Map name: "conversion_md";
/// Description: sloven─Їina, latinka, Slovensko;
pub(super) const fn get_sk_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mS├║bor nie je platn├й form├Аt [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ktor├й sa sna┼Й├Г analyzova┼Ц ako [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mTento bin├Аrny ** nezah┼Ћ┼ѕa ** funk─Їnos┼Ц konverzie pre pr├Гslu┼Аn├й form├Аt.
[48;2;34;34;34m[38;2;255;255;255mMus├Гte povoli┼Ц relevantn├║ funkciu vo svojom [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCARGO.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m a rekompilova┼Ц.
[48;2;34;34;34m[38;2;255;255;255mAk tento softv├Еr nezah┼Ћ┼ѕa zodpovedaj├║cu funk─Їnos┼Ц, predlo┼Йte probl├Еm.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mV s├║─Їasnosti podporovan├й zoznam form├Аtov:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mNepodporovan├й konverzia form├Аtu[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNepodarilo sa automaticky zisti┼Ц form├Аt.Zadajte ru─Їne.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** e┼Аte nie je podporovan├й [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konverzia z [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m na[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ─Јal┼Аie form├Аty[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mForm├Аt nezn├Аmeho s├║boru[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNasleduj├║ci obsah ** sa neulo┼Й├Г [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, preto┼Йe [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m nebol zavolan├й.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mCesta cie─Йov├Еho s├║boru[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mChyba konverzie[0m"##),
    ],
}
}

/// Language ID: sk;
/// Map name: "set";
/// Description: sloven─Їina, latinka, Slovensko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neplatn├А cesta s├║borov.");
/// ```
pub(super) const fn get_sk_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Upraven├й obsah ** nebude ulo┼Йen├й, preto┼Йe `--sv` sa nezavolal."##),
        ("new-value", r##"nov├А hodnota"##),
        ("invalid-path", r##"Neplatn├А cesta s├║borov."##),
    ],
}
}

/// Language ID: sk;
/// Map name: "set_md";
/// Description: sloven─Їina, latinka, Slovensko;
pub(super) const fn get_sk_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mUpraven├й obsah ** nebude ulo┼Йen├й, preto┼Йe [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m sa nezavolal.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnov├А hodnota[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeplatn├А cesta s├║borov.[0m"##),
    ],
}
}

/// Language ID: sk;
/// Map name: "get";
/// Description: sloven─Їina, latinka, Slovensko;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Cie─Йov├й form├Аt");
/// ```
pub(super) const fn get_sk_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Cie─Йov├й form├Аt"##),
        ("src-fmt", r##"Zdrojov├й form├Аt s├║boru"##),
    ],
}
}

/// sk: sloven─Їina, latinka, Slovensko
pub(super) const fn get_sk_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sk_map_conversion),
        ("get", get_sk_map_get),
        ("set_md", get_sk_map_set_md),
        ("set", get_sk_map_set),
        ("conversion_md", get_sk_map_conversion_md),
    ],
}
}

/// Language ID: sl;
/// Map name: "conversion";
/// Description: sloven┼А─Їina, latinica, Slovenija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ni uspelo samodejno zaznati oblike.Prosimo, navedite ro─Їno.");
/// ```
pub(super) const fn get_sl_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Datoteka ni veljavna oblika `json 1.0`, ki posku┼Аa raz─Їleniti kot `json5` ..."##),
        ("not-included", r##"Ta binarni ** ne vklju─Їuje ** funkcionalnosti pretvorbe za ustrezno obliko.
Ustrezno funkcijo morate omogo─Їiti v svojem `tovoru.Toml` in prekucljati.
─їe ta programska oprema ne vklju─Їuje ustrezne funkcionalnosti, po┼Аljite te┼Йavo."##),
        ("currently-supported", r##"Trenutno podprti seznam formati:"##),
        ("unsupported", r##"Pretvorba nepodprte oblike"##),
        ("auto-detection-failed", r##"ni uspelo samodejno zaznati oblike.Prosimo, navedite ro─Їno."##),
        ("not-support-deser-sexp", r##"** ┼Аe ni podprta **: pretvorba iz `lisp s-expression" v `drugi formati`"##),
        ("unknown-fmt", r##"Neznana oblika datoteke"##),
        ("not-saved", r##"Naslednja vsebina ** ne bo ** shranjena, ker `--save` ni bilo poklicano."##),
        ("dst", r##"pot ciljne datoteke"##),
        ("conv-error", r##"Napaka pretvorbe"##),
    ],
}
}

/// Language ID: sl;
/// Map name: "conversion_md";
/// Description: sloven┼А─Їina, latinica, Slovenija;
pub(super) const fn get_sl_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDatoteka ni veljavna oblika [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ki posku┼Аa raz─Їleniti kot [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mTa binarni ** ne vklju─Їuje ** funkcionalnosti pretvorbe za ustrezno obliko.
[48;2;34;34;34m[38;2;255;255;255mUstrezno funkcijo morate omogo─Їiti v svojem [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mtovoru.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m in prekucljati.
[48;2;34;34;34m[38;2;255;255;255m─їe ta programska oprema ne vklju─Їuje ustrezne funkcionalnosti, po┼Аljite te┼Йavo.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mTrenutno podprti seznam formati:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mPretvorba nepodprte oblike[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mni uspelo samodejno zaznati oblike.Prosimo, navedite ro─Їno.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ┼Аe ni podprta [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: pretvorba iz [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression" v [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114mdrugi formati[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNeznana oblika datoteke[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNaslednja vsebina ** ne bo ** shranjena, ker [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ni bilo poklicano.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mpot ciljne datoteke[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mNapaka pretvorbe[0m"##),
    ],
}
}

/// Language ID: sl;
/// Map name: "set";
/// Description: sloven┼А─Їina, latinica, Slovenija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Neveljavna pot datoteke.");
/// ```
pub(super) const fn get_sl_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Spremenjena vsebina ** ne bo ** shranjena, ker `--sv` ni bil poklican."##),
        ("new-value", r##"nova vrednost"##),
        ("invalid-path", r##"Neveljavna pot datoteke."##),
    ],
}
}

/// Language ID: sl;
/// Map name: "set_md";
/// Description: sloven┼А─Їina, latinica, Slovenija;
pub(super) const fn get_sl_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mSpremenjena vsebina ** ne bo ** shranjena, ker [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ni bil poklican.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnova vrednost[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNeveljavna pot datoteke.[0m"##),
    ],
}
}

/// Language ID: sl;
/// Map name: "get";
/// Description: sloven┼А─Їina, latinica, Slovenija;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Ciljni format");
/// ```
pub(super) const fn get_sl_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Ciljni format"##),
        ("src-fmt", r##"Oblika izvorne datoteke"##),
    ],
}
}

/// sl: sloven┼А─Їina, latinica, Slovenija
pub(super) const fn get_sl_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sl_map_conversion),
        ("get", get_sl_map_get),
        ("set_md", get_sl_map_set_md),
        ("set", get_sl_map_set),
        ("conversion_md", get_sl_map_conversion_md),
    ],
}
}

/// Language ID: sm;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Ua le mafai ona otometi iloa le foliga.Fa╩╗amolemole fa╩╗amanino le lima.");
/// ```
pub(super) const fn get_sm_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"Suiga sese"##),
        ("not-support-deser-sexp", r##"** E le lagolagoina A **: Liliu mai le `O Lisp S-Exp` of` o isi ituaiga o"##),
        ("dst", r##"Nofoaga faila faila"##),
        ("unsupported", r##"le lagolagoina o le suiga"##),
        ("auto-detection-failed", r##"Ua le mafai ona otometi iloa le foliga.Fa╩╗amolemole fa╩╗amanino le lima."##),
        ("currently-supported", r##"O lo╩╗o lagolagoina nei pepa fa╩╗avae:"##),
        ("not-included", r##"O lenei binary ** e le aofia ai ** o le tagata fa╩╗atau galuega mo le talafeagai lelei.
E mana╩╗omia ona e fa╩╗atagaina le mea talafeagai i lau `` Cargo.toml `reco
Afai e le aofia ai le polokalama lea e feso╩╗ota╩╗i ma le talafeagai, fa╩╗amolemole aumai se mataupu."##),
        ("unknown-fmt", r##"le le iloa faila faila"##),
    ],
}
}

/// Language ID: sm;
/// Map name: "conversion_md";
pub(super) const fn get_sm_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mSuiga sese[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** E le lagolagoina A [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Liliu mai le [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mO Lisp S-Exp[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m of[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m o isi ituaiga o[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mNofoaga faila faila[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mle lagolagoina o le suiga[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mUa le mafai ona otometi iloa le foliga.Fa╩╗amolemole fa╩╗amanino le lima.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mO lo╩╗o lagolagoina nei pepa fa╩╗avae:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mO lenei binary ** e le aofia ai ** o le tagata fa╩╗atau galuega mo le talafeagai lelei.
[48;2;34;34;34m[38;2;255;255;255mE mana╩╗omia ona e fa╩╗atagaina le mea talafeagai i lau [48;2;34;34;34m[38;2;0;255;255m``[48;2;34;34;34m[38;2;0;255;255m Cargo.toml `reco
[48;2;34;34;34m[38;2;0;255;255mAfai e le aofia ai le polokalama lea e feso╩╗ota╩╗i ma le talafeagai, fa╩╗amolemole aumai se mataupu.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mle le iloa faila faila[0m"##),
    ],
}
}

/// Language ID: sm;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "le aoga faila o le faila.");
/// ```
pub(super) const fn get_sm_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"o le toe fa╩╗aleleia o mea ** o le a leai **"##),
        ("new-value", r##"Taua fou"##),
        ("invalid-path", r##"le aoga faila o le faila."##),
    ],
}
}

/// Language ID: sm;
/// Map name: "set_md";
pub(super) const fn get_sm_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mo le toe fa╩╗aleleia o mea ** o le a leai **[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mTaua fou[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mle aoga faila o le faila.[0m"##),
    ],
}
}

/// Language ID: sm;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Nofoaga Taunuuga");
/// ```
pub(super) const fn get_sm_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Nofoaga Taunuuga"##),
        ("src-fmt", r##"Punaoa faila faila"##),
    ],
}
}

/// sm: sm-Latn-WS
pub(super) const fn get_sm_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sm_map_conversion),
        ("get", get_sm_map_get),
        ("set_md", get_sm_map_set_md),
        ("set", get_sm_map_set),
        ("conversion_md", get_sm_map_conversion_md),
    ],
}
}

/// Language ID: sn;
/// Map name: "conversion";
/// Description: chiShona, Latn, Zimbabwe;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Yakundikana kuti uzivewo chimiro.Ndokumbira utaure nemaoko.");
/// ```
pub(super) const fn get_sn_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"* isingatsigirwe parizvino **: Kushandurwa kubva ku `lisp S-Expression` kune mamwe mafomati`"##),
        ("unknown-fmt", r##"isingazivikanwe faira fomati"##),
        ("currently-supported", r##"parizvino inotsigirwa fomu rondedzero:"##),
        ("auto-detection-failed", r##"Yakundikana kuti uzivewo chimiro.Ndokumbira utaure nemaoko."##),
        ("not-included", r##"Iyi binary ** haina kusanganisira iyo yekushandura mashandiro emhando yakakodzera.
Iwe unofanirwa kugonesa chinhu chakakodzera mune yako `cargo.Toml` uye kudzoreredza.
Kana software iyi isingasanganisiri zvinowirirana kushanda, ndapota tumira nyaya."##),
        ("conv-error", r##"Kukanganisa Kukanganisa"##),
        ("dst", r##"nzira yekuenda faira"##),
        ("unsupported", r##"Isingatauriki Fomati Kutendeuka"##),
        ("invalid-json1.0", r##"faira haisi yechokwadi `json 1.0` fomati, kuyedza parse se `json5` ..."##),
    ],
}
}

/// Language ID: sn;
/// Map name: "conversion_md";
/// Description: chiShona, Latn, Zimbabwe;
pub(super) const fn get_sn_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;119;119;119m*[48;2;34;34;34m[38;2;255;255;255m [48;2;34;34;34m[38;2;255;255;255misingatsigirwe parizvino [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Kushandurwa kubva ku [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m kune mamwe mafomati[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255misingazivikanwe faira fomati[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mparizvino inotsigirwa fomu rondedzero:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mYakundikana kuti uzivewo chimiro.Ndokumbira utaure nemaoko.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mIyi binary ** haina kusanganisira iyo yekushandura mashandiro emhando yakakodzera.
[48;2;34;34;34m[38;2;255;255;255mIwe unofanirwa kugonesa chinhu chakakodzera mune yako [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mcargo.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m uye kudzoreredza.
[48;2;34;34;34m[38;2;255;255;255mKana software iyi isingasanganisiri zvinowirirana kushanda, ndapota tumira nyaya.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKukanganisa Kukanganisa[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mnzira yekuenda faira[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mIsingatauriki Fomati Kutendeuka[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mfaira haisi yechokwadi [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m fomati, kuyedza parse se [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
    ],
}
}

/// Language ID: sn;
/// Map name: "set";
/// Description: chiShona, Latn, Zimbabwe;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Isingabvumirwe Faira nzira.");
/// ```
pub(super) const fn get_sn_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Zvinyorwa zvakagadziridzwa"##),
        ("new-value", r##"New Kukosha"##),
        ("invalid-path", r##"Isingabvumirwe Faira nzira."##),
    ],
}
}

/// Language ID: sn;
/// Map name: "set_md";
/// Description: chiShona, Latn, Zimbabwe;
pub(super) const fn get_sn_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mZvinyorwa zvakagadziridzwa[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mNew Kukosha[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mIsingabvumirwe Faira nzira.[0m"##),
    ],
}
}

/// Language ID: sn;
/// Map name: "get";
/// Description: chiShona, Latn, Zimbabwe;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Kuenda kuFomments");
/// ```
pub(super) const fn get_sn_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Kuenda kuFomments"##),
        ("src-fmt", r##"Tsime faira fomati"##),
    ],
}
}

/// sn: chiShona, Latn, Zimbabwe
pub(super) const fn get_sn_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sn_map_conversion),
        ("get", get_sn_map_get),
        ("set_md", get_sn_map_set_md),
        ("set", get_sn_map_set),
        ("conversion_md", get_sn_map_conversion_md),
    ],
}
}

/// Language ID: so;
/// Map name: "conversion";
/// Description: Soomaali, Laatiin, Soomaaliya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Ku guuldareystay in si otomaatig ah loo ogaado qaabka.Fadlan gacanta ku sheeg.");
/// ```
pub(super) const fn get_so_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"Waxyaabaha soo socda ee soo socda ** Ma badbaadin doono sababtoo ah `--save` weli lama wicin."##),
        ("unknown-fmt", r##"Qaabka feylasha aan la aqoon"##),
        ("currently-supported", r##"Hadda la taageeray liiska qaabab qaabab:"##),
        ("auto-detection-failed", r##"Ku guuldareystay in si otomaatig ah loo ogaado qaabka.Fadlan gacanta ku sheeg."##),
        ("not-included", r##"Binary-gu ** kuma jiraan ** waxqabadka beddelka ee qaabka ay khusayso.
Waxaad u baahan tahay inaad awood u yeelatid muuqaalka ku habboon 'xamuul'
Haddii software-kan uusan ku darin waxqabadka u dhigma, fadlan soo gudbi arin."##),
        ("conv-error", r##"Khaladka is-beddelka"##),
        ("dst", r##"Jidka faylka loo aado"##),
        ("unsupported", r##"Samee loo beddelo qaab aan la taageerin"##),
        ("invalid-json1.0", r##"Faylku ma aha mid ansax ah `JSON 1.0` qaabka, isku dayga inuu yahay sida `JSON5` ..."##),
    ],
}
}

/// Language ID: so;
/// Map name: "conversion_md";
/// Description: Soomaali, Laatiin, Soomaaliya;
pub(super) const fn get_so_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mWaxyaabaha soo socda ee soo socda ** Ma badbaadin doono sababtoo ah [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m weli lama wicin.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mQaabka feylasha aan la aqoon[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mHadda la taageeray liiska qaabab qaabab:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mKu guuldareystay in si otomaatig ah loo ogaado qaabka.Fadlan gacanta ku sheeg.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary-gu ** kuma jiraan ** waxqabadka beddelka ee qaabka ay khusayso.
[48;2;34;34;34m[38;2;255;255;255mWaxaad u baahan tahay inaad awood u yeelatid muuqaalka ku habboon 'xamuul'
[48;2;34;34;34m[38;2;255;255;255mHaddii software-kan uusan ku darin waxqabadka u dhigma, fadlan soo gudbi arin.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKhaladka is-beddelka[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mJidka faylka loo aado[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mSamee loo beddelo qaab aan la taageerin[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFaylku ma aha mid ansax ah [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m qaabka, isku dayga inuu yahay sida [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
    ],
}
}

/// Language ID: so;
/// Map name: "set";
/// Description: Soomaali, Laatiin, Soomaaliya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Jid aan sax ahayn.");
/// ```
pub(super) const fn get_so_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Waxyaabaha wax laga beddelay **Ma badbaadin** doono maxaa yeelay `--sv` lama wicin."##),
        ("new-value", r##"Qiimo cusub"##),
        ("invalid-path", r##"Jid aan sax ahayn."##),
    ],
}
}

/// Language ID: so;
/// Map name: "set_md";
/// Description: Soomaali, Laatiin, Soomaaliya;
pub(super) const fn get_so_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mWaxyaabaha wax laga beddelay [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mMa badbaadin[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m doono maxaa yeelay [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m lama wicin.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mQiimo cusub[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mJid aan sax ahayn.[0m"##),
    ],
}
}

/// Language ID: so;
/// Map name: "get";
/// Description: Soomaali, Laatiin, Soomaaliya;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Qaabka loo socdo");
/// ```
pub(super) const fn get_so_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Qaabka loo socdo"##),
        ("src-fmt", r##"Qaabka faylka ee isha"##),
    ],
}
}

/// so: Soomaali, Laatiin, Soomaaliya
pub(super) const fn get_so_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_so_map_conversion),
        ("get", get_so_map_get),
        ("set_md", get_so_map_set_md),
        ("set", get_so_map_set),
        ("conversion_md", get_so_map_conversion_md),
    ],
}
}

/// Language ID: sq;
/// Map name: "conversion";
/// Description: shqip, latin, Shqip├Фri;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Nuk arriti t├Ф zbuloj├Ф automatikisht formatin.Ju lutemi specifikoni manualisht.");
/// ```
pub(super) const fn get_sq_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Skedari nuk ├Фsht├Ф nj├Ф format i vlefsh├Фm `JSON 1.0`, duke u p├Фrpjekur t├Ф analizoj├Ф si `JSON5` ..."##),
        ("not-included", r##"Ky binar ** nuk p├Фrfshin ** funksionalitetin e konvertimit p├Фr formatin p├Фrkat├Фs.
Ju duhet t├Ф aktivizoni ve├Дorin├Ф p├Фrkat├Фse n├Ф `Cargo.Toml` tuaj dhe t├Ф rikompiloni.
N├Фse ky softuer nuk p├Фrfshin funksionalitetin p├Фrkat├Фs, ju lutemi paraqisni nj├Ф ├Д├Фshtje."##),
        ("currently-supported", r##"Lista e formateve t├Ф mb├Фshtetur aktualisht:"##),
        ("unsupported", r##"Konvertimi i formatit t├Ф pamb├Фshtetur"##),
        ("auto-detection-failed", r##"Nuk arriti t├Ф zbuloj├Ф automatikisht formatin.Ju lutemi specifikoni manualisht."##),
        ("not-support-deser-sexp", r##"** Nuk ├Фsht├Ф mb├Фshtetur akoma **: Konvertimi nga `lisp s-shprehje` n├Ф` formate t├Ф tjera '"##),
        ("unknown-fmt", r##"Formati i panjohur i skedarit"##),
        ("not-saved", r##"p├Фrmbajtja e m├Фposhtme ** nuk do t├Ф ruhet sepse `--save` nuk u thirr."##),
        ("dst", r##"Rruga e skedarit t├Ф destinacionit"##),
        ("conv-error", r##"Gabim i Konvertimit"##),
    ],
}
}

/// Language ID: sq;
/// Map name: "conversion_md";
/// Description: shqip, latin, Shqip├Фri;
pub(super) const fn get_sq_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mSkedari nuk ├Фsht├Ф nj├Ф format i vlefsh├Фm [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, duke u p├Фrpjekur t├Ф analizoj├Ф si [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mKy binar ** nuk p├Фrfshin ** funksionalitetin e konvertimit p├Фr formatin p├Фrkat├Фs.
[48;2;34;34;34m[38;2;255;255;255mJu duhet t├Ф aktivizoni ve├Дorin├Ф p├Фrkat├Фse n├Ф [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m tuaj dhe t├Ф rikompiloni.
[48;2;34;34;34m[38;2;255;255;255mN├Фse ky softuer nuk p├Фrfshin funksionalitetin p├Фrkat├Фs, ju lutemi paraqisni nj├Ф ├Д├Фshtje.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLista e formateve t├Ф mb├Фshtetur aktualisht:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mKonvertimi i formatit t├Ф pamb├Фshtetur[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mNuk arriti t├Ф zbuloj├Ф automatikisht formatin.Ju lutemi specifikoni manualisht.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Nuk ├Фsht├Ф mb├Фshtetur akoma [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konvertimi nga [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-shprehje[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m n├Ф[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m formate t├Ф tjera '[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFormati i panjohur i skedarit[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mp├Фrmbajtja e m├Фposhtme ** nuk do t├Ф ruhet sepse [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nuk u thirr.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mRruga e skedarit t├Ф destinacionit[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mGabim i Konvertimit[0m"##),
    ],
}
}

/// Language ID: sq;
/// Map name: "set";
/// Description: shqip, latin, Shqip├Фri;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Rruga e pavlefshme e skedarit.");
/// ```
pub(super) const fn get_sq_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"P├Фrmbajtja e modifikuar ** nuk do t├Ф ruhet sepse `--sv` nuk u thirr."##),
        ("new-value", r##"Vlera e Re"##),
        ("invalid-path", r##"Rruga e pavlefshme e skedarit."##),
    ],
}
}

/// Language ID: sq;
/// Map name: "set_md";
/// Description: shqip, latin, Shqip├Фri;
pub(super) const fn get_sq_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mP├Фrmbajtja e modifikuar ** nuk do t├Ф ruhet sepse [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m nuk u thirr.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mVlera e Re[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mRruga e pavlefshme e skedarit.[0m"##),
    ],
}
}

/// Language ID: sq;
/// Map name: "get";
/// Description: shqip, latin, Shqip├Фri;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format i destinacionit");
/// ```
pub(super) const fn get_sq_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format i destinacionit"##),
        ("src-fmt", r##"Format i skedarit burimor"##),
    ],
}
}

/// sq: shqip, latin, Shqip├Фri
pub(super) const fn get_sq_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sq_map_conversion),
        ("get", get_sq_map_get),
        ("set_md", get_sq_map_set_md),
        ("set", get_sq_map_set),
        ("conversion_md", get_sq_map_conversion_md),
    ],
}
}

/// Language ID: sr;
/// Map name: "conversion";
/// Description: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлИЛўлх ЛЃЛЂл┐лхл╗лЙ л░ЛЃЛѓлЙл╝л░ЛѓЛЂл║лИ лЙЛѓл║ЛђлИЛѓлИ ЛёлЙЛђл╝л░Лѓ.люлЙл╗лИл╝лЙ лйл░л▓лхл┤лИЛѓлх ЛђЛЃЛЄлйлЙ.");
/// ```
pub(super) const fn get_sr_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лћл░ЛѓлЙЛѓлхл║л░ лйлИЛўлх л▓л░л╗лИл┤лйл░ ЛёлЙЛђл╝л░Лѓл░ `лѕЛЂлЙлй 1.0`, л┐лЙл║ЛЃЛѕл░л▓л░ЛўЛЃЛЏлИ л┤л░ л░лйл░л╗лИлилИЛђл░ л║л░лЙ` лѕлАлълЮ5` ..."##),
        ("not-included", r##"лъл▓л░Лў л▒лИлйл░ЛђлйлИ ** лйлх ЛЃл║ЛЎЛЃЛЄЛЃЛўлх ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ л║лЙлйл▓лхЛђлилИЛўлх лил░ лЙл┤л│лЙл▓л░Лђл░ЛўЛЃЛЏлИ ЛёлЙЛђл╝л░Лѓ.
люлЙЛђл░Лѓлх л┤л░ лЙл╝лЙл│ЛЃЛЏлИЛѓлх Лђлхл╗лхл▓л░лйЛѓлйЛЃ л║л░Лђл░л║ЛѓлхЛђлИЛЂЛѓлИл║ЛЃ ЛЃ л▓л░Лѕлхл╝ `лдл░Лђл│лЙ.лблЙл╝л╗` лИ л┐лЙлйлЙл▓лйлЙЛў л║лЙл╝л┐лЙлилИЛєлИЛўлИ.
лљл║лЙ лЙл▓л░Лў ЛЂлЙЛёЛѓл▓лхЛђ лйлх ЛЃл║ЛЎЛЃЛЄЛЃЛўлх лЙл┤л│лЙл▓л░Лђл░ЛўЛЃЛЏЛЃ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л╝лЙл╗лИл╝лЙ л┤л░ л┐лЙл┤лйлхЛЂлхЛѓлх л┐ЛђлЙл▒л╗лхл╝."##),
        ("currently-supported", r##"лбЛђлхлйЛЃЛѓлйлЙ л┐лЙл┤ЛђлХл░лйл░ л╗лИЛЂЛѓл░ ЛёлЙЛђл╝л░Лѓл░:"##),
        ("unsupported", r##"лЮлхл┐лЙл┤ЛђлХл░лйлИ ЛёлЙЛђл╝л░Лѓ ЛёлЙЛђл╝л░Лѓ"##),
        ("auto-detection-failed", r##"лЮлИЛўлх ЛЃЛЂл┐лхл╗лЙ л░ЛЃЛѓлЙл╝л░ЛѓЛЂл║лИ лЙЛѓл║ЛђлИЛѓлИ ЛёлЙЛђл╝л░Лѓ.люлЙл╗лИл╝лЙ лйл░л▓лхл┤лИЛѓлх ЛђЛЃЛЄлйлЙ."##),
        ("not-support-deser-sexp", r##"** лѕлЙЛѕ лйлИЛўлх л┐лЙл┤ЛђлХл░лйл░ **: лЪЛђлхЛѓл▓л░Лђл░Лџлх лИли `лЏлўлАлЪ лА-лхл║ЛЂл┐ЛђлхЛЂлИЛўлх` ЛЃ` лЙЛЂЛѓл░л╗лх ЛёлЙЛђл╝л░Лѓлх`"##),
        ("unknown-fmt", r##"лЮлхл┐лЙлилйл░ЛѓлИ ЛёлЙЛђл╝л░Лѓ л┤л░ЛѓлЙЛѓлхл║лх"##),
        ("not-saved", r##"лАл╗лхл┤лхЛЏлИ ЛЂл░л┤ЛђлХл░Лў ** лйлхЛЏлх ** л▒лИЛѓлИ ЛЂл░ЛЄЛЃл▓л░лй ЛўлхЛђ `--save` лйлИЛўлх лил▓л░лЙ."##),
        ("dst", r##"лАЛѓл░лил░ лЙл┤Лђлхл┤лИЛѕЛѓл░ лЙл┤Лђлхл┤лИЛѕЛѓл░"##),
        ("conv-error", r##"лЊЛђлхЛѕл║л░ ЛЃ л║лЙлйл▓лхЛђлилИЛўлИ"##),
    ],
}
}

/// Language ID: sr;
/// Map name: "conversion_md";
/// Description: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░;
pub(super) const fn get_sr_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлћл░ЛѓлЙЛѓлхл║л░ лйлИЛўлх л▓л░л╗лИл┤лйл░ ЛёлЙЛђл╝л░Лѓл░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mлѕЛЂлЙлй 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, л┐лЙл║ЛЃЛѕл░л▓л░ЛўЛЃЛЏлИ л┤л░ л░лйл░л╗лИлилИЛђл░ л║л░лЙ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m лѕлАлълЮ5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлъл▓л░Лў л▒лИлйл░ЛђлйлИ ** лйлх ЛЃл║ЛЎЛЃЛЄЛЃЛўлх ** ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ л║лЙлйл▓лхЛђлилИЛўлх лил░ лЙл┤л│лЙл▓л░Лђл░ЛўЛЃЛЏлИ ЛёлЙЛђл╝л░Лѓ.
[48;2;34;34;34m[38;2;255;255;255mлюлЙЛђл░Лѓлх л┤л░ лЙл╝лЙл│ЛЃЛЏлИЛѓлх Лђлхл╗лхл▓л░лйЛѓлйЛЃ л║л░Лђл░л║ЛѓлхЛђлИЛЂЛѓлИл║ЛЃ ЛЃ л▓л░Лѕлхл╝ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mлдл░Лђл│лЙ.лблЙл╝л╗[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лИ л┐лЙлйлЙл▓лйлЙЛў л║лЙл╝л┐лЙлилИЛєлИЛўлИ.
[48;2;34;34;34m[38;2;255;255;255mлљл║лЙ лЙл▓л░Лў ЛЂлЙЛёЛѓл▓лхЛђ лйлх ЛЃл║ЛЎЛЃЛЄЛЃЛўлх лЙл┤л│лЙл▓л░Лђл░ЛўЛЃЛЏЛЃ ЛёЛЃлйл║ЛєлИлЙлйл░л╗лйлЙЛЂЛѓ, л╝лЙл╗лИл╝лЙ л┤л░ л┐лЙл┤лйлхЛЂлхЛѓлх л┐ЛђлЙл▒л╗лхл╝.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлбЛђлхлйЛЃЛѓлйлЙ л┐лЙл┤ЛђлХл░лйл░ л╗лИЛЂЛѓл░ ЛёлЙЛђл╝л░Лѓл░:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐лЙл┤ЛђлХл░лйлИ ЛёлЙЛђл╝л░Лѓ ЛёлЙЛђл╝л░Лѓ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлИЛўлх ЛЃЛЂл┐лхл╗лЙ л░ЛЃЛѓлЙл╝л░ЛѓЛЂл║лИ лЙЛѓл║ЛђлИЛѓлИ ЛёлЙЛђл╝л░Лѓ.люлЙл╗лИл╝лЙ лйл░л▓лхл┤лИЛѓлх ЛђЛЃЛЄлйлЙ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** лѕлЙЛѕ лйлИЛўлх л┐лЙл┤ЛђлХл░лйл░ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: лЪЛђлхЛѓл▓л░Лђл░Лџлх лИли [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mлЏлўлАлЪ лА-лхл║ЛЂл┐ЛђлхЛЂлИЛўлх[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ЛЃ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m лЙЛЂЛѓл░л╗лх ЛёлЙЛђл╝л░Лѓлх[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┐лЙлилйл░ЛѓлИ ЛёлЙЛђл╝л░Лѓ л┤л░ЛѓлЙЛѓлхл║лх[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлАл╗лхл┤лхЛЏлИ ЛЂл░л┤ЛђлХл░Лў ** лйлхЛЏлх ** л▒лИЛѓлИ ЛЂл░ЛЄЛЃл▓л░лй ЛўлхЛђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлИЛўлх лил▓л░лЙ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mлАЛѓл░лил░ лЙл┤Лђлхл┤лИЛѕЛѓл░ лЙл┤Лђлхл┤лИЛѕЛѓл░[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЊЛђлхЛѕл║л░ ЛЃ л║лЙлйл▓лхЛђлилИЛўлИ[0m"##),
    ],
}
}

/// Language ID: sr;
/// Map name: "set";
/// Description: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхл▓л░лХлхЛЏлИ л┐ЛЃЛѓ л┤л░ЛѓлЙЛѓлхл║л░.");
/// ```
pub(super) const fn get_sr_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"люлЙл┤лИЛёлИл║лЙл▓л░лйлИ ЛЂл░л┤ЛђлХл░Лў ** лйлхЛЏлх ЛЂлх ЛЂл░ЛЄЛЃл▓л░ЛѓлИ ЛўлхЛђ `-лАл▓` лйлИЛўлх лил▓л░лЙ."##),
        ("new-value", r##"лЮлЙл▓л░ л▓Лђлхл┤лйлЙЛЂЛѓ"##),
        ("invalid-path", r##"лЮлхл▓л░лХлхЛЏлИ л┐ЛЃЛѓ л┤л░ЛѓлЙЛѓлхл║л░."##),
    ],
}
}

/// Language ID: sr;
/// Map name: "set_md";
/// Description: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░;
pub(super) const fn get_sr_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлюлЙл┤лИЛёлИл║лЙл▓л░лйлИ ЛЂл░л┤ЛђлХл░Лў ** лйлхЛЏлх ЛЂлх ЛЂл░ЛЄЛЃл▓л░ЛѓлИ ЛўлхЛђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-лАл▓[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлИЛўлх лил▓л░лЙ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлЙл▓л░ л▓Лђлхл┤лйлЙЛЂЛѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓л░лХлхЛЏлИ л┐ЛЃЛѓ л┤л░ЛѓлЙЛѓлхл║л░.[0m"##),
    ],
}
}

/// Language ID: sr;
/// Map name: "get";
/// Description: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лъл┤Лђлхл┤лИЛѕлйлИ ЛёлЙЛђл╝л░Лѓ");
/// ```
pub(super) const fn get_sr_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лъл┤Лђлхл┤лИЛѕлйлИ ЛёлЙЛђл╝л░Лѓ"##),
        ("src-fmt", r##"лўлил▓лЙЛђлйлИ ЛёлЙЛђл╝л░Лѓ л┤л░ЛѓлЙЛѓлхл║лх"##),
    ],
}
}

/// sr: ЛЂЛђл┐ЛЂл║лИ, ЛЏлИЛђлИл╗лИЛєл░, лАЛђл▒лИЛўл░
pub(super) const fn get_sr_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sr_map_conversion),
        ("get", get_sr_map_get),
        ("set_md", get_sr_map_set_md),
        ("set", get_sr_map_set),
        ("conversion_md", get_sr_map_conversion_md),
    ],
}
}

/// Language ID: st;
/// Map name: "conversion";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "E ile ea hloleha ho fumana sebopeho.Ka kopo bolela ka boomo.");
/// ```
pub(super) const fn get_st_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Faele ha se sebopeho se sebetsang sa `Json 1."##),
        ("not-included", r##"Binary ena ** ha e kenyeletse ** ts'ebetso ea phetoho bakeng sa sebopeho se amehang.
U hloka ho nolofalletsa karolo e loketseng ho `cego.toml` le hape.
Haeba software ena e sa kenyeletse ts'ebetso e lumellanang, ka kopo fana ka bothata."##),
        ("currently-supported", r##"Hajoale lenane la lifoto tsa formats:"##),
        ("unsupported", r##"Ho fetola sebopeho sa sebopeho sa"##),
        ("auto-detection-failed", r##"E ile ea hloleha ho fumana sebopeho.Ka kopo bolela ka boomo."##),
        ("not-support-deser-sexp", r##"** ha e t┼Аehelitsoe empa ** ha e t┼Аehelitsoe"##),
        ("unknown-fmt", r##"Forama e sa tsejoeng"##),
        ("not-saved", r##"Mathata a latelang ** a ke ke a pholoha hobane `--save` e ne e sa bitsoa."##),
        ("dst", r##"Tsela ea faele ea faele"##),
        ("conv-error", r##"Phoso ea ho soka"##),
    ],
}
}

/// Language ID: st;
/// Map name: "conversion_md";
pub(super) const fn get_st_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFaele ha se sebopeho se sebetsang sa [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJson 1.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary ena ** ha e kenyeletse ** ts'ebetso ea phetoho bakeng sa sebopeho se amehang.
[48;2;34;34;34m[38;2;255;255;255mU hloka ho nolofalletsa karolo e loketseng ho [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mcego.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m le hape.
[48;2;34;34;34m[38;2;255;255;255mHaeba software ena e sa kenyeletse ts'ebetso e lumellanang, ka kopo fana ka bothata.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mHajoale lenane la lifoto tsa formats:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mHo fetola sebopeho sa sebopeho sa[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mE ile ea hloleha ho fumana sebopeho.Ka kopo bolela ka boomo.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ha e t┼Аehelitsoe empa ** ha e t┼Аehelitsoe[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mForama e sa tsejoeng[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mMathata a latelang ** a ke ke a pholoha hobane [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m e ne e sa bitsoa.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mTsela ea faele ea faele[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mPhoso ea ho soka[0m"##),
    ],
}
}

/// Language ID: st;
/// Map name: "set";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Tsela ea faele e sa sebetseng.");
/// ```
pub(super) const fn get_st_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Likahare tse fetotsoeng ** li ke ke tsa pholosoa hobane `--sv li ne li sa bitsoa."##),
        ("new-value", r##"boleng bo bocha"##),
        ("invalid-path", r##"Tsela ea faele e sa sebetseng."##),
    ],
}
}

/// Language ID: st;
/// Map name: "set_md";
pub(super) const fn get_st_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mLikahare tse fetotsoeng ** li ke ke tsa pholosoa hobane [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv li ne li sa bitsoa.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mboleng bo bocha[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mTsela ea faele e sa sebetseng.[0m"##),
    ],
}
}

/// Language ID: st;
/// Map name: "get";
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Sebopeho sa ho ea");
/// ```
pub(super) const fn get_st_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Sebopeho sa ho ea"##),
        ("src-fmt", r##"Sebopeho sa faele sa Mohloli"##),
    ],
}
}

/// st: st-Latn-ZA
pub(super) const fn get_st_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_st_map_conversion),
        ("get", get_st_map_get),
        ("set_md", get_st_map_set_md),
        ("set", get_st_map_set),
        ("conversion_md", get_st_map_conversion_md),
    ],
}
}

/// Language ID: su;
/// Map name: "conversion";
/// Description: Basa Sunda, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Gagal sacara otomatis pikeun ngadeteksi format.Punten tulis sacara manual.");
/// ```
pub(super) const fn get_su_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (4, 5),
        (4, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"** moal dirojong **: Ngarobih tina `Inkputi S-Unpr├Еsi"##),
        ("unknown-fmt", r##"format file anu teu dipikanyaho"##),
        ("not-included", r##"Binary ** moal kalebet ** S├Еktipsi konvensional pikeun format anu relevan.
Anjeun kedah ngaktipkeun fitur anu relevan dina `kargo anjeun.Toml` sareng recomplile.
Upami perangkat lunak ieu henteu kalebet fungsionalitas anu pakait, punten ngalebetkeun masalah."##),
        ("conv-error", r##"Kasalahan konv├Еrsi"##),
        ("unsupported", r##"konv├Еrsi format"##),
        ("auto-detection-failed", r##"Gagal sacara otomatis pikeun ngadeteksi format.Punten tulis sacara manual."##),
        ("dst", r##"jalur file tujuan"##),
    ],
}
}

/// Language ID: su;
/// Map name: "conversion_md";
/// Description: Basa Sunda, Latin, Indonesia;
pub(super) const fn get_su_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (4, 5),
        (4, 0),
    ],
    entries: &[
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** moal dirojong [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Ngarobih tina [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mInkputi S-Unpr├Еsi[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mformat file anu teu dipikanyaho[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary ** moal kalebet ** S├Еktipsi konvensional pikeun format anu relevan.
[48;2;34;34;34m[38;2;255;255;255mAnjeun kedah ngaktipkeun fitur anu relevan dina [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mkargo anjeun.Toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m sareng recomplile.
[48;2;34;34;34m[38;2;255;255;255mUpami perangkat lunak ieu henteu kalebet fungsionalitas anu pakait, punten ngalebetkeun masalah.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKasalahan konv├Еrsi[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mkonv├Еrsi format[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mGagal sacara otomatis pikeun ngadeteksi format.Punten tulis sacara manual.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mjalur file tujuan[0m"##),
    ],
}
}

/// Language ID: su;
/// Map name: "set";
/// Description: Basa Sunda, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "jalur file anu salah.");
/// ```
pub(super) const fn get_su_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Eusi anu dirobih ** moal ** bakal disimpen kusabab `--sv` henteu disebut."##),
        ("new-value", r##"nilai anyar"##),
        ("invalid-path", r##"jalur file anu salah."##),
    ],
}
}

/// Language ID: su;
/// Map name: "set_md";
/// Description: Basa Sunda, Latin, Indonesia;
pub(super) const fn get_su_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mEusi anu dirobih ** moal ** bakal disimpen kusabab [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m henteu disebut.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnilai anyar[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mjalur file anu salah.[0m"##),
    ],
}
}

/// Language ID: su;
/// Map name: "get";
/// Description: Basa Sunda, Latin, Indonesia;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Format tujuan");
/// ```
pub(super) const fn get_su_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Format tujuan"##),
        ("src-fmt", r##"Format file sumber"##),
    ],
}
}

/// su: Basa Sunda, Latin, Indonesia
pub(super) const fn get_su_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_su_map_conversion),
        ("get", get_su_map_get),
        ("set_md", get_su_map_set_md),
        ("set", get_su_map_set),
        ("conversion_md", get_su_map_conversion_md),
    ],
}
}

/// Language ID: sv;
/// Map name: "conversion";
/// Description: svenska, latinska, Sverige;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Det gick inte automatiskt att uppt├цcka formatet.V├цnligen ange manuellt.");
/// ```
pub(super) const fn get_sv_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Filen ├цr inte ett giltigt `JSON 1.0` -format, f├Хrs├Хker analysera som `json5` ..."##),
        ("not-included", r##"Denna bin├цra ** inkluderar inte ** Konverteringsfunktionen f├Хr det relevanta formatet.
Du m├Цste aktivera den relevanta funktionen i din `Cargo.toml` och kompilera om.
Om den h├цr programvaran inte inkluderar motsvarande funktionalitet, skicka ett problem."##),
        ("currently-supported", r##"F├Хr n├цrvarande st├Хdda formatlista:"##),
        ("unsupported", r##"Osledat formatkonvertering"##),
        ("auto-detection-failed", r##"Det gick inte automatiskt att uppt├цcka formatet.V├цnligen ange manuellt."##),
        ("not-support-deser-sexp", r##"** St├Хds ├цnnu inte **: Konvertering fr├Цn `lisp s-expression` till` andra format`"##),
        ("unknown-fmt", r##"ok├цnt filformat"##),
        ("not-saved", r##"F├Хljande inneh├Цll ** kommer inte ** att sparas eftersom `--save` inte kallades."##),
        ("dst", r##"Destinationsfilv├цg"##),
        ("conv-error", r##"Konverteringsfel"##),
    ],
}
}

/// Language ID: sv;
/// Map name: "conversion_md";
/// Description: svenska, latinska, Sverige;
pub(super) const fn get_sv_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFilen ├цr inte ett giltigt [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m -format, f├Хrs├Хker analysera som [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mDenna bin├цra ** inkluderar inte ** Konverteringsfunktionen f├Хr det relevanta formatet.
[48;2;34;34;34m[38;2;255;255;255mDu m├Цste aktivera den relevanta funktionen i din [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m och kompilera om.
[48;2;34;34;34m[38;2;255;255;255mOm den h├цr programvaran inte inkluderar motsvarande funktionalitet, skicka ett problem.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mF├Хr n├цrvarande st├Хdda formatlista:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mOsledat formatkonvertering[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mDet gick inte automatiskt att uppt├цcka formatet.V├цnligen ange manuellt.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** St├Хds ├цnnu inte [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Konvertering fr├Цn [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp s-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m till[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m andra format[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mok├цnt filformat[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mF├Хljande inneh├Цll ** kommer inte ** att sparas eftersom [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m inte kallades.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mDestinationsfilv├цg[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonverteringsfel[0m"##),
    ],
}
}

/// Language ID: sv;
/// Map name: "set";
/// Description: svenska, latinska, Sverige;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ogiltig filv├цg.");
/// ```
pub(super) const fn get_sv_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Det modifierade inneh├Цllet ** kommer inte ** att sparas eftersom `--sv` inte kallades."##),
        ("new-value", r##"nytt v├цrde"##),
        ("invalid-path", r##"Ogiltig filv├цg."##),
    ],
}
}

/// Language ID: sv;
/// Map name: "set_md";
/// Description: svenska, latinska, Sverige;
pub(super) const fn get_sv_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDet modifierade inneh├Цllet ** kommer inte ** att sparas eftersom [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m inte kallades.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mnytt v├цrde[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mOgiltig filv├цg.[0m"##),
    ],
}
}

/// Language ID: sv;
/// Map name: "get";
/// Description: svenska, latinska, Sverige;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Destinationsformat");
/// ```
pub(super) const fn get_sv_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Destinationsformat"##),
        ("src-fmt", r##"K├цllfilformat"##),
    ],
}
}

/// sv: svenska, latinska, Sverige
pub(super) const fn get_sv_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sv_map_conversion),
        ("get", get_sv_map_get),
        ("set_md", get_sv_map_set_md),
        ("set", get_sv_map_set),
        ("conversion_md", get_sv_map_conversion_md),
    ],
}
}

/// Language ID: sw;
/// Map name: "conversion";
/// Description: Kiswahili, Kilatini, Tanzania;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Imeshindwa kugundua kiotomatiki muundo.Tafadhali taja mwenyewe.");
/// ```
pub(super) const fn get_sw_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"Yaliyomo ** hayataokolewa kwa sababu `--save` haikuitwa."##),
        ("unknown-fmt", r##"Fomati ya faili isiyojulikana"##),
        ("currently-supported", r##"Orodha ya Fomati inayoungwa mkono kwa sasa:"##),
        ("auto-detection-failed", r##"Imeshindwa kugundua kiotomatiki muundo.Tafadhali taja mwenyewe."##),
        ("not-included", r##"Hii binary ** haijumuishi ** utendaji wa ubadilishaji kwa muundo husika.
Unahitaji kuwezesha kipengee kinachofaa katika `Cargo.toml` yako na kurudisha.
Ikiwa programu hii haijumuishi utendaji unaolingana, tafadhali wasilisha suala."##),
        ("conv-error", r##"kosa la ubadilishaji"##),
        ("dst", r##"Njia ya faili ya marudio"##),
        ("unsupported", r##"Ubadilishaji wa muundo ambao haujasaidiwa"##),
        ("invalid-json1.0", r##"Faili sio muundo halali wa `json 1.0`, kujaribu kujaribu kama `json5` ..."##),
    ],
}
}

/// Language ID: sw;
/// Map name: "conversion_md";
/// Description: Kiswahili, Kilatini, Tanzania;
pub(super) const fn get_sw_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mYaliyomo ** hayataokolewa kwa sababu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m haikuitwa.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mFomati ya faili isiyojulikana[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mOrodha ya Fomati inayoungwa mkono kwa sasa:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mImeshindwa kugundua kiotomatiki muundo.Tafadhali taja mwenyewe.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mHii binary ** haijumuishi ** utendaji wa ubadilishaji kwa muundo husika.
[48;2;34;34;34m[38;2;255;255;255mUnahitaji kuwezesha kipengee kinachofaa katika [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m yako na kurudisha.
[48;2;34;34;34m[38;2;255;255;255mIkiwa programu hii haijumuishi utendaji unaolingana, tafadhali wasilisha suala.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mkosa la ubadilishaji[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mNjia ya faili ya marudio[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mUbadilishaji wa muundo ambao haujasaidiwa[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFaili sio muundo halali wa [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, kujaribu kujaribu kama [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
    ],
}
}

/// Language ID: sw;
/// Map name: "set";
/// Description: Kiswahili, Kilatini, Tanzania;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Njia batili ya faili.");
/// ```
pub(super) const fn get_sw_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Yaliyorekebishwa ** hayataokolewa kwa sababu `--sv` haikuitwa."##),
        ("new-value", r##"Thamani mpya"##),
        ("invalid-path", r##"Njia batili ya faili."##),
    ],
}
}

/// Language ID: sw;
/// Map name: "set_md";
/// Description: Kiswahili, Kilatini, Tanzania;
pub(super) const fn get_sw_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mYaliyorekebishwa ** hayataokolewa kwa sababu [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m haikuitwa.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mThamani mpya[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNjia batili ya faili.[0m"##),
    ],
}
}

/// Language ID: sw;
/// Map name: "get";
/// Description: Kiswahili, Kilatini, Tanzania;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Muundo wa marudio");
/// ```
pub(super) const fn get_sw_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Muundo wa marudio"##),
        ("src-fmt", r##"Muundo wa faili ya chanzo"##),
    ],
}
}

/// sw: Kiswahili, Kilatini, Tanzania
pub(super) const fn get_sw_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_sw_map_conversion),
        ("get", get_sw_map_get),
        ("set_md", get_sw_map_set_md),
        ("set", get_sw_map_set),
        ("conversion_md", get_sw_map_conversion_md),
    ],
}
}

/// Language ID: ta;
/// Map name: "conversion";
/// Description: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«ф\u{bcd}Я«фЯ»ѕ Я«ц\u{bbe}Я«Е\u{bbe}Я«ЋЯ«хЯ»Є Я«ЋЯ«Б\u{bcd}Я«ЪЯ«▒Я«┐Я«»Я«ц\u{bcd} Я«цЯ«хЯ«▒Я«┐Я«хЯ«┐Я«Ъ\u{bcd}Я«ЪЯ«цЯ»Ђ.Я«ЋЯ»ѕЯ««Я»ЂЯ«▒Я»ѕЯ«»\u{bbe}Я«Ћ Я«ЋЯ»ЂЯ«▒Я«┐Я«ф\u{bcd}Я«фЯ«┐Я«ЪЯ«хЯ»ЂЯ««\u{bcd}.");
/// ```
pub(super) const fn get_ta_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«џЯ«░Я«┐Я«»Я«ЙЯ«Е `JSON 1.0` Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї Я«ЁЯ«▓Я»ЇЯ«▓, `json5` Я«јЯ«Е Я«ЁЯ«▓Я«џ Я««Я»ЂЯ«»Я«▒Я»ЇЯ«џЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«┐Я«▒Я«цЯ»Ђ ..."##),
        ("not-included", r##"Я«ЄЯ«еЯ»ЇЯ«ц Я«фЯ»ѕЯ«ЕЯ«░Я«┐ ** ** Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ«┐Я«▒Я»ЇЯ«ЋЯ«ЙЯ«Е Я««Я«ЙЯ«▒Я»ЇЯ«▒Я»Ђ Я«џЯ»єЯ«»Я«▓Я»ЇЯ«фЯ«ЙЯ«ЪЯ»Ђ Я«ЄЯ«▓Я»ЇЯ«▓Я»ѕ.
Я«ЅЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї `Я«џЯ«░Я«ЋЯ»ЇЯ«ЋЯ»Ђ.Я«ЪЯ»ІЯ««Я»ЇЯ«▓Я»Ї` Я«ЄЯ«▓Я»Ї Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«ЁЯ««Я»ЇЯ«џЯ«цЯ»ЇЯ«цЯ»ѕ Я«еЯ»ђЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї Я«ЄЯ«»Я«ЋЯ»ЇЯ«Ћ Я«хЯ»ЄЯ«БЯ»ЇЯ«ЪЯ»ЂЯ««Я»Ї.
Я«ЄЯ«еЯ»ЇЯ«ц Я««Я»єЯ«ЕЯ»ЇЯ«фЯ»іЯ«░Я»ЂЯ«│Я«┐Я«▓Я»Ї Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«џЯ»єЯ«»Я«▓Я»ЇЯ«фЯ«ЙЯ«ЪЯ»Ђ Я«ЄЯ«▓Я»ЇЯ«▓Я»ѕ Я«јЯ«ЕЯ»ЇЯ«▒Я«ЙЯ«▓Я»Ї, Я«цЯ«»Я«хЯ»ЂЯ«џЯ»єЯ«»Я»ЇЯ«цЯ»Ђ Я«њЯ«░Я»Ђ Я«џЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«▓Я»ѕЯ«џЯ»Ї Я«џЯ««Я«░Я»ЇЯ«фЯ»ЇЯ«фЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«хЯ»ЂЯ««Я»Ї."##),
        ("currently-supported", r##"Я«цЯ«▒Я»ЇЯ«фЯ»ІЯ«цЯ»Ђ Я«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ»ЂЯ««Я»Ї Я«хЯ«ЪЯ«┐Я«хЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї Я«фЯ«ЪЯ»ЇЯ«ЪЯ«┐Я«»Я«▓Я»Ї:"##),
        ("unsupported", r##"Я«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«ц Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ»Ђ Я««Я«ЙЯ«▒Я»ЇЯ«▒Я««Я»Ї"##),
        ("auto-detection-failed", r##"Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ»ѕ Я«цЯ«ЙЯ«ЕЯ«ЙЯ«ЋЯ«хЯ»Є Я«ЋЯ«БЯ»ЇЯ«ЪЯ«▒Я«┐Я«»Я«цЯ»Ї Я«цЯ«хЯ«▒Я«┐Я«хЯ«┐Я«ЪЯ»ЇЯ«ЪЯ«цЯ»Ђ.Я«ЋЯ»ѕЯ««Я»ЂЯ«▒Я»ѕЯ«»Я«ЙЯ«Ћ Я«ЋЯ»ЂЯ«▒Я«┐Я«фЯ»ЇЯ«фЯ«┐Я«ЪЯ«хЯ»ЂЯ««Я»Ї."##),
        ("not-support-deser-sexp", r##"** Я«ЄЯ«ЕЯ»ЇЯ«ЕЯ»ЂЯ««Я»Ї Я«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ **: `Я«▓Я«┐Я«ИЯ»ЇЯ«фЯ»Ї Я«јЯ«ИЯ»Ї-Я«јЯ«ЋЯ»ЇЯ«ИЯ»ЇЯ«фЯ«┐Я«░Я«иЯ«ЕЯ»Ї` Я«ЄЯ«▓Я«┐Я«░Я»ЂЯ«еЯ»ЇЯ«цЯ»Ђ` Я«фЯ«┐Я«▒ Я«хЯ«ЪЯ«┐Я«хЯ«ЎЯ»ЇЯ«ЋЯ«│Я»ЂЯ«ЋЯ»ЇЯ«ЋЯ»Ђ` Я««Я«ЙЯ«▒Я»ЇЯ«▒Я»ЂЯ«ЋЯ«┐Я«▒Я«цЯ»Ђ"##),
        ("unknown-fmt", r##"Я«цЯ»єЯ«░Я«┐Я«»Я«ЙЯ«ц Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї"##),
        ("not-saved", r##"Я«фЯ«┐Я«ЕЯ»ЇЯ«хЯ«░Я»ЂЯ««Я»Ї Я«ЅЯ«│Я»ЇЯ«│Я«ЪЯ«ЋЯ»ЇЯ«ЋЯ««Я»Ї ** ** Я«џЯ»ЄЯ««Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«цЯ»Ђ, Я«ЈЯ«ЕЯ»єЯ«ЕЯ«┐Я«▓Я»Ї `--save` Я«ЁЯ«┤Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ."##),
        ("dst", r##"Я«ЄЯ«▓Я«ЋЯ»ЇЯ«ЋЯ»Ђ Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«фЯ«ЙЯ«цЯ»ѕ"##),
        ("conv-error", r##"Я««Я«ЙЯ«▒Я»ЇЯ«▒Я»Ђ Я«фЯ«┐Я«┤Я»ѕ"##),
    ],
}
}

/// Language ID: ta;
/// Map name: "conversion_md";
/// Description: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й;
pub(super) const fn get_ta_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«џЯ«░Я«┐Я«»Я«ЙЯ«Е [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї Я«ЁЯ«▓Я»ЇЯ«▓, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я«јЯ«Е Я«ЁЯ«▓Я«џ Я««Я»ЂЯ«»Я«▒Я»ЇЯ«џЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«┐Я«▒Я«цЯ»Ђ ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«ЄЯ«еЯ»ЇЯ«ц Я«фЯ»ѕЯ«ЕЯ«░Я«┐ ** ** Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ«┐Я«▒Я»ЇЯ«ЋЯ«ЙЯ«Е Я««Я«ЙЯ«▒Я»ЇЯ«▒Я»Ђ Я«џЯ»єЯ«»Я«▓Я»ЇЯ«фЯ«ЙЯ«ЪЯ»Ђ Я«ЄЯ«▓Я»ЇЯ«▓Я»ѕ.
[48;2;34;34;34m[38;2;255;255;255mЯ«ЅЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ«џЯ«░Я«ЋЯ»ЇЯ«ЋЯ»Ђ.Я«ЪЯ»ІЯ««Я»ЇЯ«▓Я»Ї[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я«ЄЯ«▓Я»Ї Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«ЁЯ««Я»ЇЯ«џЯ«цЯ»ЇЯ«цЯ»ѕ Я«еЯ»ђЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї Я«ЄЯ«»Я«ЋЯ»ЇЯ«Ћ Я«хЯ»ЄЯ«БЯ»ЇЯ«ЪЯ»ЂЯ««Я»Ї.
[48;2;34;34;34m[38;2;255;255;255mЯ«ЄЯ«еЯ»ЇЯ«ц Я««Я»єЯ«ЕЯ»ЇЯ«фЯ»іЯ«░Я»ЂЯ«│Я«┐Я«▓Я»Ї Я«цЯ»іЯ«ЪЯ«░Я»ЇЯ«фЯ»ЂЯ«ЪЯ»ѕЯ«» Я«џЯ»єЯ«»Я«▓Я»ЇЯ«фЯ«ЙЯ«ЪЯ»Ђ Я«ЄЯ«▓Я»ЇЯ«▓Я»ѕ Я«јЯ«ЕЯ»ЇЯ«▒Я«ЙЯ«▓Я»Ї, Я«цЯ«»Я«хЯ»ЂЯ«џЯ»єЯ«»Я»ЇЯ«цЯ»Ђ Я«њЯ«░Я»Ђ Я«џЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«▓Я»ѕЯ«џЯ»Ї Я«џЯ««Я«░Я»ЇЯ«фЯ»ЇЯ«фЯ«┐Я«ЋЯ»ЇЯ«ЋЯ«хЯ»ЂЯ««Я»Ї.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«цЯ«▒Я»ЇЯ«фЯ»ІЯ«цЯ»Ђ Я«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ»ЂЯ««Я»Ї Я«хЯ«ЪЯ«┐Я«хЯ«ЎЯ»ЇЯ«ЋЯ«│Я»Ї Я«фЯ«ЪЯ»ЇЯ«ЪЯ«┐Я«»Я«▓Я»Ї:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«ц Я«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ»Ђ Я««Я«ЙЯ«▒Я»ЇЯ«▒Я««Я»Ї[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«хЯ«ЪЯ«┐Я«хЯ««Я»ѕЯ«фЯ»ЇЯ«фЯ»ѕ Я«цЯ«ЙЯ«ЕЯ«ЙЯ«ЋЯ«хЯ»Є Я«ЋЯ«БЯ»ЇЯ«ЪЯ«▒Я«┐Я«»Я«цЯ»Ї Я«цЯ«хЯ«▒Я«┐Я«хЯ«┐Я«ЪЯ»ЇЯ«ЪЯ«цЯ»Ђ.Я«ЋЯ»ѕЯ««Я»ЂЯ«▒Я»ѕЯ«»Я«ЙЯ«Ћ Я«ЋЯ»ЂЯ«▒Я«┐Я«фЯ»ЇЯ«фЯ«┐Я«ЪЯ«хЯ»ЂЯ««Я»Ї.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Я«ЄЯ«ЕЯ»ЇЯ«ЕЯ»ЂЯ««Я»Ї Я«єЯ«цЯ«░Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ«▓Я«┐Я«ИЯ»ЇЯ«фЯ»Ї Я«јЯ«ИЯ»Ї-Я«јЯ«ЋЯ»ЇЯ«ИЯ»ЇЯ«фЯ«┐Я«░Я«иЯ«ЕЯ»Ї[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я«ЄЯ«▓Я«┐Я«░Я»ЂЯ«еЯ»ЇЯ«цЯ»Ђ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Я«фЯ«┐Я«▒ Я«хЯ«ЪЯ«┐Я«хЯ«ЎЯ»ЇЯ«ЋЯ«│Я»ЂЯ«ЋЯ»ЇЯ«ЋЯ»Ђ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я««Я«ЙЯ«▒Я»ЇЯ«▒Я»ЂЯ«ЋЯ«┐Я«▒Я«цЯ»Ђ[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«цЯ»єЯ«░Я«┐Я«»Я«ЙЯ«ц Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«фЯ«┐Я«ЕЯ»ЇЯ«хЯ«░Я»ЂЯ««Я»Ї Я«ЅЯ«│Я»ЇЯ«│Я«ЪЯ«ЋЯ»ЇЯ«ЋЯ««Я»Ї ** ** Я«џЯ»ЄЯ««Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«цЯ»Ђ, Я«ЈЯ«ЕЯ»єЯ«ЕЯ«┐Я«▓Я»Ї [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я«ЁЯ«┤Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«ЄЯ«▓Я«ЋЯ»ЇЯ«ЋЯ»Ђ Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«фЯ«ЙЯ«цЯ»ѕ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯ««Я«ЙЯ«▒Я»ЇЯ«▒Я»Ђ Я«фЯ«┐Я«┤Я»ѕ[0m"##),
    ],
}
}

/// Language ID: ta;
/// Map name: "set";
/// Description: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я«цЯ«хЯ«▒\u{bbe}Я«Е Я«ЋЯ»ІЯ«ф\u{bcd}Я«фЯ»Ђ Я«ф\u{bbe}Я«цЯ»ѕ.");
/// ```
pub(super) const fn get_ta_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я««Я«ЙЯ«▒Я»ЇЯ«▒Я«┐Я«»Я««Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ»ЇЯ«Ъ Я«ЅЯ«│Я»ЇЯ«│Я«ЪЯ«ЋЯ»ЇЯ«ЋЯ««Я»Ї ** ** Я«џЯ»ЄЯ««Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«цЯ»Ђ, Я«ЈЯ«ЕЯ»єЯ«ЕЯ«┐Я«▓Я»Ї `--sv` Я«ЁЯ«┤Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ."##),
        ("new-value", r##"Я«фЯ»ЂЯ«цЯ«┐Я«» Я««Я«цЯ«┐Я«фЯ»ЇЯ«фЯ»Ђ"##),
        ("invalid-path", r##"Я«цЯ«хЯ«▒Я«ЙЯ«Е Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«фЯ«ЙЯ«цЯ»ѕ."##),
    ],
}
}

/// Language ID: ta;
/// Map name: "set_md";
/// Description: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й;
pub(super) const fn get_ta_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ««Я«ЙЯ«▒Я»ЇЯ«▒Я«┐Я«»Я««Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ»ЇЯ«Ъ Я«ЅЯ«│Я»ЇЯ«│Я«ЪЯ«ЋЯ»ЇЯ«ЋЯ««Я»Ї ** ** Я«џЯ»ЄЯ««Я«┐Я«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«ЙЯ«цЯ»Ђ, Я«ЈЯ«ЕЯ»єЯ«ЕЯ«┐Я«▓Я»Ї [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я«ЁЯ«┤Я»ѕЯ«ЋЯ»ЇЯ«ЋЯ«фЯ»ЇЯ«фЯ«ЪЯ«хЯ«┐Я«▓Я»ЇЯ«▓Я»ѕ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«фЯ»ЂЯ«цЯ«┐Я«» Я««Я«цЯ«┐Я«фЯ»ЇЯ«фЯ»Ђ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ«цЯ«хЯ«▒Я«ЙЯ«Е Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«фЯ«ЙЯ«цЯ»ѕ.[0m"##),
    ],
}
}

/// Language ID: ta;
/// Map name: "get";
/// Description: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Я«ЄЯ«▓Я«Ћ\u{bcd}Я«ЋЯ»Ђ Я«хЯ«ЪЯ«┐Я«хЯ««\u{bcd}");
/// ```
pub(super) const fn get_ta_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Я«ЄЯ«▓Я«ЋЯ»ЇЯ«ЋЯ»Ђ Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї"##),
        ("src-fmt", r##"Я««Я»ѓЯ«▓ Я«ЋЯ»ІЯ«фЯ»ЇЯ«фЯ»Ђ Я«хЯ«ЪЯ«┐Я«хЯ««Я»Ї"##),
    ],
}
}

/// ta: Я«цЯ««Я«┐Я«┤Я»Ї, Я«цЯ««Я«┐Я«┤Я»Ї, Я«ЄЯ«еЯ»ЇЯ«цЯ«┐Я«»Я«Й
pub(super) const fn get_ta_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ta_map_conversion),
        ("get", get_ta_map_get),
        ("set_md", get_ta_map_set_md),
        ("set", get_ta_map_set),
        ("conversion_md", get_ta_map_conversion_md),
    ],
}
}

/// Language ID: te;
/// Map name: "conversion";
/// Description: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я░єЯ░ЋЯ▒ЃЯ░ц\u{c3f}Я░е\u{c3f} Я░И\u{c4d}Я░хЯ░»Я░ѓЯ░џ\u{c3e}Я░▓Я░ЋЯ░ѓЯ░Ќ\u{c3e} Я░ЌЯ▒ЂЯ░░\u{c4d}Я░ц\u{c3f}Я░ѓЯ░џЯ░АЯ░ѓЯ░▓\u{c4b} Я░х\u{c3f}Я░ФЯ░▓Я░«\u{c48}Я░ѓЯ░д\u{c3f}.Я░дЯ░»Я░џ\u{c47}Я░И\u{c3f} Я░«\u{c3e}Я░еЯ░х\u{c40}Я░»Я░ѓЯ░Ќ\u{c3e} Я░ф\u{c47}Я░░\u{c4d}Я░Ћ\u{c4a}Я░еЯ░ѓЯ░А\u{c3f}.");
/// ```
pub(super) const fn get_te_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"Я░ѕ Я░гЯ▒ѕЯ░еЯ░░Я▒ђ ** ** Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї Я░ЋЯ▒ІЯ░ИЯ░ѓ Я░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐ Я░ЋЯ░ЙЯ░░Я▒ЇЯ░»Я░ЙЯ░џЯ░░Я░БЯ░еЯ▒Ђ Я░ЋЯ░▓Я░┐Я░ЌЯ░┐ Я░▓Я▒ЄЯ░дЯ▒Ђ.
Я░«Я▒ђЯ░░Я▒Ђ Я░«Я▒ђ `Cargo.toml` Я░▓Я▒І Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░▓Я░ЋЯ▒ЇЯ░иЯ░БЯ░ЙЯ░еЯ▒ЇЯ░еЯ░┐ Я░фЯ▒ЇЯ░░Я░ЙЯ░░Я░ѓЯ░ГЯ░┐Я░ѓЯ░џЯ░ЙЯ░▓Я░┐ Я░«Я░░Я░┐Я░»Я▒Ђ Я░цЯ░┐Я░░Я░┐Я░ЌЯ░┐ Я░ЋЯ░ѓЯ░фЯ▒ѕЯ░▓Я▒Ї Я░џЯ▒ЄЯ░»Я░ЙЯ░▓Я░┐.
Я░ѕ Я░ИЯ░ЙЯ░ФЯ▒ЇЯ░ЪЯ▒ЇРђїЯ░хЯ▒ЄЯ░░Я▒Ї Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░ЋЯ░ЙЯ░░Я▒ЇЯ░»Я░ЙЯ░џЯ░░Я░БЯ░еЯ▒Ђ Я░ЋЯ░▓Я░┐Я░ЌЯ░┐ Я░ЅЯ░ѓЯ░АЯ░ЋЯ░фЯ▒ІЯ░цЯ▒Є, Я░дЯ░»Я░џЯ▒ЄЯ░ИЯ░┐ Я░ИЯ░«Я░ИЯ▒ЇЯ░»Я░еЯ▒Ђ Я░ИЯ░«Я░░Я▒ЇЯ░фЯ░┐Я░ѓЯ░џЯ░ѓЯ░АЯ░┐."##),
        ("auto-detection-failed", r##"Я░єЯ░ЋЯ▒ЃЯ░цЯ░┐Я░еЯ░┐ Я░ИЯ▒ЇЯ░хЯ░»Я░ѓЯ░џЯ░ЙЯ░▓Я░ЋЯ░ѓЯ░ЌЯ░Й Я░ЌЯ▒ЂЯ░░Я▒ЇЯ░цЯ░┐Я░ѓЯ░џЯ░АЯ░ѓЯ░▓Я▒І Я░хЯ░┐Я░ФЯ░▓Я░«Я▒ѕЯ░ѓЯ░дЯ░┐.Я░дЯ░»Я░џЯ▒ЄЯ░ИЯ░┐ Я░«Я░ЙЯ░еЯ░хЯ▒ђЯ░»Я░ѓЯ░ЌЯ░Й Я░фЯ▒ЄЯ░░Я▒ЇЯ░ЋЯ▒іЯ░еЯ░ѓЯ░АЯ░┐."##),
        ("not-support-deser-sexp", r##"** Я░ЄЯ░ѓЯ░ЋЯ░Й Я░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░▓Я▒ЄЯ░дЯ▒Ђ **: `Я░▓Я░┐Я░ИЯ▒ЇЯ░фЯ▒Ї Я░јЯ░ИЯ▒Ї-Я░јЯ░ЋЯ▒ЇЯ░ИЯ▒ЇРђїЯ░фЯ▒ЇЯ░░Я▒єЯ░иЯ░еЯ▒Ї` Я░еЯ▒ЂЯ░ѓЯ░АЯ░┐` Я░ЄЯ░цЯ░░ Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒ЇРђїЯ░▓Я░ЋЯ▒Ђ Я░«Я░ЙЯ░░Я▒ЇЯ░џЯ░АЯ░ѓ"##),
        ("dst", r##"Я░ЌЯ░«Я▒ЇЯ░»Я░ѓ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░ЌЯ░ѓ"##),
        ("unsupported", r##"Я░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░▓Я▒ЄЯ░еЯ░┐ Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐"##),
        ("currently-supported", r##"Я░фЯ▒ЇЯ░░Я░ИЯ▒ЇЯ░цЯ▒ЂЯ░цЯ░ѓ Я░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░ЅЯ░еЯ▒ЇЯ░е Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒ЇЯ░▓ Я░юЯ░ЙЯ░гЯ░┐Я░цЯ░Й:"##),
        ("not-saved", r##"Я░ЋЯ░┐Я░ѓЯ░дЯ░┐ Я░ЋЯ░ѓЯ░ЪЯ▒єЯ░ѓЯ░ЪЯ▒Ї ** ** Я░ИЯ▒ЄЯ░хЯ▒Ї Я░џЯ▒ЄЯ░»Я░гЯ░АЯ░дЯ▒Ђ Я░јЯ░ѓЯ░дЯ▒ЂЯ░ЋЯ░ѓЯ░ЪЯ▒Є `--save` Я░ЁЯ░еЯ░┐ Я░фЯ░┐Я░▓Я░хЯ░гЯ░АЯ░▓Я▒ЄЯ░дЯ▒Ђ."##),
        ("unknown-fmt", r##"Я░цЯ▒єЯ░▓Я░┐Я░»Я░еЯ░┐ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї"##),
        ("conv-error", r##"Я░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐ Я░▓Я▒ІЯ░фЯ░ѓ"##),
    ],
}
}

/// Language ID: te;
/// Map name: "conversion_md";
/// Description: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ;
pub(super) const fn get_te_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░ѕ Я░гЯ▒ѕЯ░еЯ░░Я▒ђ ** ** Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї Я░ЋЯ▒ІЯ░ИЯ░ѓ Я░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐ Я░ЋЯ░ЙЯ░░Я▒ЇЯ░»Я░ЙЯ░џЯ░░Я░БЯ░еЯ▒Ђ Я░ЋЯ░▓Я░┐Я░ЌЯ░┐ Я░▓Я▒ЄЯ░дЯ▒Ђ.
[48;2;34;34;34m[38;2;255;255;255mЯ░«Я▒ђЯ░░Я▒Ђ Я░«Я▒ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я░▓Я▒І Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░▓Я░ЋЯ▒ЇЯ░иЯ░БЯ░ЙЯ░еЯ▒ЇЯ░еЯ░┐ Я░фЯ▒ЇЯ░░Я░ЙЯ░░Я░ѓЯ░ГЯ░┐Я░ѓЯ░џЯ░ЙЯ░▓Я░┐ Я░«Я░░Я░┐Я░»Я▒Ђ Я░цЯ░┐Я░░Я░┐Я░ЌЯ░┐ Я░ЋЯ░ѓЯ░фЯ▒ѕЯ░▓Я▒Ї Я░џЯ▒ЄЯ░»Я░ЙЯ░▓Я░┐.
[48;2;34;34;34m[38;2;255;255;255mЯ░ѕ Я░ИЯ░ЙЯ░ФЯ▒ЇЯ░ЪЯ▒ЇРђїЯ░хЯ▒ЄЯ░░Я▒Ї Я░ИЯ░ѓЯ░гЯ░ѓЯ░ДЯ░┐Я░ц Я░ЋЯ░ЙЯ░░Я▒ЇЯ░»Я░ЙЯ░џЯ░░Я░БЯ░еЯ▒Ђ Я░ЋЯ░▓Я░┐Я░ЌЯ░┐ Я░ЅЯ░ѓЯ░АЯ░ЋЯ░фЯ▒ІЯ░цЯ▒Є, Я░дЯ░»Я░џЯ▒ЄЯ░ИЯ░┐ Я░ИЯ░«Я░ИЯ▒ЇЯ░»Я░еЯ▒Ђ Я░ИЯ░«Я░░Я▒ЇЯ░фЯ░┐Я░ѓЯ░џЯ░ѓЯ░АЯ░┐.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░єЯ░ЋЯ▒ЃЯ░цЯ░┐Я░еЯ░┐ Я░ИЯ▒ЇЯ░хЯ░»Я░ѓЯ░џЯ░ЙЯ░▓Я░ЋЯ░ѓЯ░ЌЯ░Й Я░ЌЯ▒ЂЯ░░Я▒ЇЯ░цЯ░┐Я░ѓЯ░џЯ░АЯ░ѓЯ░▓Я▒І Я░хЯ░┐Я░ФЯ░▓Я░«Я▒ѕЯ░ѓЯ░дЯ░┐.Я░дЯ░»Я░џЯ▒ЄЯ░ИЯ░┐ Я░«Я░ЙЯ░еЯ░хЯ▒ђЯ░»Я░ѓЯ░ЌЯ░Й Я░фЯ▒ЄЯ░░Я▒ЇЯ░ЋЯ▒іЯ░еЯ░ѓЯ░АЯ░┐.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Я░ЄЯ░ѓЯ░ЋЯ░Й Я░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░▓Я▒ЄЯ░дЯ▒Ђ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mЯ░▓Я░┐Я░ИЯ▒ЇЯ░фЯ▒Ї Я░јЯ░ИЯ▒Ї-Я░јЯ░ЋЯ▒ЇЯ░ИЯ▒ЇРђїЯ░фЯ▒ЇЯ░░Я▒єЯ░иЯ░еЯ▒Ї[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я░еЯ▒ЂЯ░ѓЯ░АЯ░┐[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m Я░ЄЯ░цЯ░░ Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒ЇРђїЯ░▓Я░ЋЯ▒Ђ Я░«Я░ЙЯ░░Я▒ЇЯ░џЯ░АЯ░ѓ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░ЌЯ░«Я▒ЇЯ░»Я░ѓ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░ЌЯ░ѓ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░▓Я▒ЄЯ░еЯ░┐ Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░фЯ▒ЇЯ░░Я░ИЯ▒ЇЯ░цЯ▒ЂЯ░цЯ░ѓ Я░«Я░дЯ▒ЇЯ░дЯ░цЯ▒Ђ Я░ЅЯ░еЯ▒ЇЯ░е Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒ЇЯ░▓ Я░юЯ░ЙЯ░гЯ░┐Я░цЯ░Й:[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░ЋЯ░┐Я░ѓЯ░дЯ░┐ Я░ЋЯ░ѓЯ░ЪЯ▒єЯ░ѓЯ░ЪЯ▒Ї ** ** Я░ИЯ▒ЄЯ░хЯ▒Ї Я░џЯ▒ЄЯ░»Я░гЯ░АЯ░дЯ▒Ђ Я░јЯ░ѓЯ░дЯ▒ЂЯ░ЋЯ░ѓЯ░ЪЯ▒Є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я░ЁЯ░еЯ░┐ Я░фЯ░┐Я░▓Я░хЯ░гЯ░АЯ░▓Я▒ЄЯ░дЯ▒Ђ.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░цЯ▒єЯ░▓Я░┐Я░»Я░еЯ░┐ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░«Я░ЙЯ░░Я▒ЇЯ░фЯ░┐Я░АЯ░┐ Я░▓Я▒ІЯ░фЯ░ѓ[0m"##),
    ],
}
}

/// Language ID: te;
/// Map name: "set";
/// Description: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я░џ\u{c46}Я░▓\u{c4d}Я░▓Я░е\u{c3f} Я░Ф\u{c48}Я░▓\u{c4d} Я░«\u{c3e}Я░░\u{c4d}Я░ЌЯ░ѓ.");
/// ```
pub(super) const fn get_te_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я░ИЯ░хЯ░░Я░┐Я░ѓЯ░џЯ░┐Я░е Я░ЋЯ░ѓЯ░ЪЯ▒єЯ░ѓЯ░ЪЯ▒Ї ** ** Я░ИЯ▒ЄЯ░хЯ▒Ї Я░џЯ▒ЄЯ░»Я░гЯ░АЯ░дЯ▒Ђ Я░јЯ░ѓЯ░дЯ▒ЂЯ░ЋЯ░ѓЯ░ЪЯ▒Є `--sv` Я░ЁЯ░еЯ░┐ Я░фЯ░┐Я░▓Я░хЯ░гЯ░АЯ░▓Я▒ЄЯ░дЯ▒Ђ."##),
        ("new-value", r##"Я░ЋЯ▒ЇЯ░░Я▒іЯ░цЯ▒ЇЯ░ц Я░хЯ░┐Я░▓Я▒ЂЯ░х"##),
        ("invalid-path", r##"Я░џЯ▒єЯ░▓Я▒ЇЯ░▓Я░еЯ░┐ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░ЌЯ░ѓ."##),
    ],
}
}

/// Language ID: te;
/// Map name: "set_md";
/// Description: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ;
pub(super) const fn get_te_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░ИЯ░хЯ░░Я░┐Я░ѓЯ░џЯ░┐Я░е Я░ЋЯ░ѓЯ░ЪЯ▒єЯ░ѓЯ░ЪЯ▒Ї ** ** Я░ИЯ▒ЄЯ░хЯ▒Ї Я░џЯ▒ЄЯ░»Я░гЯ░АЯ░дЯ▒Ђ Я░јЯ░ѓЯ░дЯ▒ЂЯ░ЋЯ░ѓЯ░ЪЯ▒Є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я░ЁЯ░еЯ░┐ Я░фЯ░┐Я░▓Я░хЯ░гЯ░АЯ░▓Я▒ЄЯ░дЯ▒Ђ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░ЋЯ▒ЇЯ░░Я▒іЯ░цЯ▒ЇЯ░ц Я░хЯ░┐Я░▓Я▒ЂЯ░х[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ░џЯ▒єЯ░▓Я▒ЇЯ░▓Я░еЯ░┐ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░«Я░ЙЯ░░Я▒ЇЯ░ЌЯ░ѓ.[0m"##),
    ],
}
}

/// Language ID: te;
/// Map name: "get";
/// Description: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Я░ЌЯ░«\u{c4d}Я░»Я░ѓ Я░єЯ░ЋЯ▒ЃЯ░ц\u{c3f}");
/// ```
pub(super) const fn get_te_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Я░ЌЯ░«Я▒ЇЯ░»Я░ѓ Я░єЯ░ЋЯ▒ЃЯ░цЯ░┐"##),
        ("src-fmt", r##"Я░«Я▒ѓЯ░▓ Я░ФЯ▒ѕЯ░▓Я▒Ї Я░ФЯ░ЙЯ░░Я▒ЇЯ░«Я░ЙЯ░ЪЯ▒Ї"##),
    ],
}
}

/// te: Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░цЯ▒єЯ░▓Я▒ЂЯ░ЌЯ▒Ђ, Я░ГЯ░ЙЯ░░Я░цЯ░дЯ▒ЄЯ░ХЯ░ѓ
pub(super) const fn get_te_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_te_map_conversion),
        ("get", get_te_map_get),
        ("set_md", get_te_map_set_md),
        ("set", get_te_map_set),
        ("conversion_md", get_te_map_conversion_md),
    ],
}
}

/// Language ID: tg;
/// Map name: "conversion";
/// Description: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮл░л▒ЛЃл┤л░лйлИ ЛёлЙЛђл╝л░Лѓ л▒л░ Лѓл░л▓ЛђлИ ЛЁЛЃл┤л║лЙЛђ л╝ЛЃл░л╣ЛЈлй л║л░Лђл┤л░ лйл░ЛѕЛЃл┤.лЏЛЃЛѓЛёл░лй л┤л░ЛЂЛѓМБ л╝ЛЃл░л╣ЛЈлй л║ЛЃлйлхл┤.");
/// ```
pub(super) const fn get_tg_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
        (0, 0),
    ],
    entries: &[
        ("currently-supported", r##"лаМ»л╣ЛЁл░ЛѓлИ ЛёлЙЛђл╝л░Лѓм│лЙлИ ЛёлЙЛђл╝л░ЛѓЛђлЙ л┤л░Лђ л░л╣лйлИ лил░л╝лЙлй л┤л░ЛЂЛѓл│лИЛђМБ л╝лхл║ЛЃлйл░л┤:"##),
        ("unsupported", r##"лбл░л▒л┤лИл╗лИ ЛёлЙЛђл╝л░ЛѓлИ л┤л░ЛЂЛѓл│лИЛђМБлйл░Лѕл░л▓л░лйл┤л░"##),
        ("unknown-fmt", r##"лцл░л╣лилИ Лёл░л╣л╗лИ лйлЙл╝л░Ліл╗ЛЃл╝"##),
        ("not-support-deser-sexp", r##"** м▓л░лйМ»ли л┤л░ЛЂЛѓл│лИЛђМБ лйл░л╝лхЛѕл░л▓л░л┤ **: лбл░л▒л┤лИл╗л┤лИм│МБ л░ли `lisp S-Mounce's 'л▒л░' л┤лИл│л░Лђ ЛёлЙЛђл╝л░Лѓм│лЙ┬╗"##),
        ("conv-error", r##"лЦл░ЛѓлЙлИ л║лЙлйл▓лхЛђЛЂлИЛЈ"##),
        ("invalid-json1.0", r##"лцл░л╣л╗ ЛёлЙЛђл╝л░ЛѓлИ "Json 1.0" лйлхЛЂЛѓ"##),
        ("auto-detection-failed", r##"лЮл░л▒ЛЃл┤л░лйлИ ЛёлЙЛђл╝л░Лѓ л▒л░ Лѓл░л▓ЛђлИ ЛЁЛЃл┤л║лЙЛђ л╝ЛЃл░л╣ЛЈлй л║л░Лђл┤л░ лйл░ЛѕЛЃл┤.лЏЛЃЛѓЛёл░лй л┤л░ЛЂЛѓМБ л╝ЛЃл░л╣ЛЈлй л║ЛЃлйлхл┤."##),
    ],
}
}

/// Language ID: tg;
/// Map name: "conversion_md";
/// Description: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй;
pub(super) const fn get_tg_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
        (0, 0),
    ],
    entries: &[
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлаМ»л╣ЛЁл░ЛѓлИ ЛёлЙЛђл╝л░Лѓм│лЙлИ ЛёлЙЛђл╝л░ЛѓЛђлЙ л┤л░Лђ л░л╣лйлИ лил░л╝лЙлй л┤л░ЛЂЛѓл│лИЛђМБ л╝лхл║ЛЃлйл░л┤:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлбл░л▒л┤лИл╗лИ ЛёлЙЛђл╝л░ЛѓлИ л┤л░ЛЂЛѓл│лИЛђМБлйл░Лѕл░л▓л░лйл┤л░[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣лилИ Лёл░л╣л╗лИ лйлЙл╝л░Ліл╗ЛЃл╝[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** м▓л░лйМ»ли л┤л░ЛЂЛѓл│лИЛђМБ лйл░л╝лхЛѕл░л▓л░л┤ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: лбл░л▒л┤лИл╗л┤лИм│МБ л░ли [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mlisp S-Mounce's 'л▒л░' л┤лИл│л░Лђ ЛёлЙЛђл╝л░Лѓм│лЙ┬╗[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЦл░ЛѓлЙлИ л║лЙлйл▓лхЛђЛЂлИЛЈ[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ ЛёлЙЛђл╝л░ЛѓлИ "Json 1.0" лйлхЛЂЛѓ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮл░л▒ЛЃл┤л░лйлИ ЛёлЙЛђл╝л░Лѓ л▒л░ Лѓл░л▓ЛђлИ ЛЁЛЃл┤л║лЙЛђ л╝ЛЃл░л╣ЛЈлй л║л░Лђл┤л░ лйл░ЛѕЛЃл┤.лЏЛЃЛѓЛёл░лй л┤л░ЛЂЛѓМБ л╝ЛЃл░л╣ЛЈлй л║ЛЃлйлхл┤.[0m"##),
    ],
}
}

/// Language ID: tg;
/// Map name: "set";
/// Description: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лбл░лйлилИл╝лЙЛѓлИ Лёл░л╣л╗лИлИ лйлЙл┤ЛЃЛђЛЃЛЂЛѓлИ Лёл░л╣л╗.");
/// ```
pub(super) const fn get_tg_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"люМ»м│Лѓл░л▓лЙлИ Лѓл░мЊлИЛђЛЉЛёЛѓл░ ** лйл░ЛЁлЙм│л░л┤ ЛѕЛЃл┤ ** лйл░милЙЛѓ л┤лЙл┤л░ лйл░л╝лхЛѕл░л▓л░л┤, лилхЛђлЙ `--sv` лйлЙл╝лИл┤л░ лйл░л╝лхЛѕл░л▓л░л┤."##),
        ("new-value", r##"лљЛђлилИЛѕлИ лйл░л▓"##),
        ("invalid-path", r##"лбл░лйлилИл╝лЙЛѓлИ Лёл░л╣л╗лИлИ лйлЙл┤ЛЃЛђЛЃЛЂЛѓлИ Лёл░л╣л╗."##),
    ],
}
}

/// Language ID: tg;
/// Map name: "set_md";
/// Description: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй;
pub(super) const fn get_tg_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлюМ»м│Лѓл░л▓лЙлИ Лѓл░мЊлИЛђЛЉЛёЛѓл░ ** лйл░ЛЁлЙм│л░л┤ ЛѕЛЃл┤ ** лйл░милЙЛѓ л┤лЙл┤л░ лйл░л╝лхЛѕл░л▓л░л┤, лилхЛђлЙ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлЙл╝лИл┤л░ лйл░л╝лхЛѕл░л▓л░л┤.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлљЛђлилИЛѕлИ лйл░л▓[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлбл░лйлилИл╝лЙЛѓлИ Лёл░л╣л╗лИлИ лйлЙл┤ЛЃЛђЛЃЛЂЛѓлИ Лёл░л╣л╗.[0m"##),
    ],
}
}

/// Language ID: tg;
/// Map name: "get";
/// Description: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░ЛѓлИ Лѓл░ЛілИлйлЙЛѓ");
/// ```
pub(super) const fn get_tg_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцлЙЛђл╝л░ЛѓлИ Лѓл░ЛілИлйлЙЛѓ"##),
        ("src-fmt", r##"лцлЙЛђл╝л░ЛѓлИ л┤лИЛЂл║м│лЙ л╝л░лйл▒л░Лі"##),
    ],
}
}

/// tg: ЛѓлЙмилИл║МБ, лџлИЛђлИл╗л╗МБ, лблЙмилИл║лИЛЂЛѓлЙлй
pub(super) const fn get_tg_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_tg_map_conversion),
        ("get", get_tg_map_get),
        ("set_md", get_tg_map_set_md),
        ("set", get_tg_map_set),
        ("conversion_md", get_tg_map_conversion_md),
    ],
}
}

/// Language ID: th;
/// Map name: "conversion";
/// Description: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Я╣ёЯИА\u{e48}ЯИфЯИ▓ЯИАЯИ▓ЯИБЯИќЯИЋЯИБЯИДЯИѕЯИѕ\u{e31}ЯИџЯИБ\u{e39}ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИћ\u{e49}Я╣ѓЯИћЯИбЯИГ\u{e31}ЯИЋЯ╣ѓЯИЎЯИА\u{e31}ЯИЋ\u{e34}Я╣ѓЯИЏЯИБЯИћЯИБЯИ░ЯИџ\u{e38}ЯИћ\u{e49}ЯИДЯИбЯИЋЯИЎЯ╣ђЯИГЯИЄ");
/// ```
pub(super) const fn get_th_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Я╣ёЯИЪЯИЦЯ╣їЯ╣ёЯИАЯ╣ѕЯ╣ёЯИћЯ╣ЅЯ╣ђЯИЏЯ╣ЄЯИЎЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџ `JSON 1.0` ЯИЌЯИхЯ╣ѕЯИќЯИ╣ЯИЂЯИЋЯ╣ЅЯИГЯИЄЯИъЯИбЯИ▓ЯИбЯИ▓ЯИАЯ╣ЂЯИбЯИЂЯИДЯИ┤Я╣ђЯИёЯИБЯИ▓ЯИ░ЯИФЯ╣їЯ╣ђЯИЏЯ╣ЄЯИЎ `json5` ..."##),
        ("not-included", r##"Я╣ёЯИџЯИЎЯИ▓ЯИБЯИх ** ЯИЎЯИхЯ╣ЅЯ╣ёЯИАЯ╣ѕЯИБЯИДЯИА ** ЯИЪЯИ▒ЯИЄЯИЂЯ╣їЯИіЯИ▒Я╣ѕЯИЎЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИфЯИ│ЯИФЯИБЯИ▒ЯИџЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄ
ЯИёЯИИЯИЊЯИЋЯ╣ЅЯИГЯИЄЯ╣ђЯИЏЯИ┤ЯИћЯ╣ЃЯИіЯ╣ЅЯИЄЯИ▓ЯИЎЯИёЯИИЯИЊЯИфЯИАЯИџЯИ▒ЯИЋЯИ┤ЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄЯ╣ЃЯИЎ `Cargo.toml` Я╣ЂЯИЦЯИ░ repompile
ЯИФЯИ▓ЯИЂЯИІЯИГЯИЪЯИЋЯ╣їЯ╣ЂЯИДЯИБЯ╣їЯИЎЯИхЯ╣ЅЯ╣ёЯИАЯ╣ѕЯИБЯИДЯИАЯИЪЯИ▒ЯИЄЯИЂЯ╣їЯИіЯИ▒Я╣ѕЯИЎЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄЯ╣ѓЯИЏЯИБЯИћЯИфЯ╣ѕЯИЄЯИЏЯИ▒ЯИЇЯИФЯИ▓"##),
        ("currently-supported", r##"ЯИБЯИ▓ЯИбЯИЂЯИ▓ЯИБЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯИБЯИГЯИЄЯИБЯИ▒ЯИџЯ╣ЃЯИЎЯИЏЯИ▒ЯИѕЯИѕЯИИЯИџЯИ▒ЯИЎ:"##),
        ("unsupported", r##"ЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯ╣ёЯИћЯ╣ЅЯИБЯИ▒ЯИџЯИЂЯИ▓ЯИБЯИфЯИЎЯИ▒ЯИџЯИфЯИЎЯИИЯИЎ"##),
        ("auto-detection-failed", r##"Я╣ёЯИАЯ╣ѕЯИфЯИ▓ЯИАЯИ▓ЯИБЯИќЯИЋЯИБЯИДЯИѕЯИѕЯИ▒ЯИџЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИћЯ╣ЅЯ╣ѓЯИћЯИбЯИГЯИ▒ЯИЋЯ╣ѓЯИЎЯИАЯИ▒ЯИЋЯИ┤Я╣ѓЯИЏЯИБЯИћЯИБЯИ░ЯИџЯИИЯИћЯ╣ЅЯИДЯИбЯИЋЯИЎЯ╣ђЯИГЯИЄ"##),
        ("not-support-deser-sexp", r##"** ЯИбЯИ▒ЯИЄЯ╣ёЯИАЯ╣ѕЯИБЯИГЯИЄЯИБЯИ▒ЯИџ **: ЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИѕЯИ▓ЯИЂ `Lisp S-Expression` Я╣ђЯИЏЯ╣ЄЯИЎ` ЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИГЯИиЯ╣ѕЯИЎ Я╣є '"##),
        ("unknown-fmt", r##"ЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИЪЯИЦЯ╣їЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯИБЯИ╣Я╣ЅЯИѕЯИ▒ЯИЂ"##),
        ("not-saved", r##"Я╣ђЯИЎЯИиЯ╣ЅЯИГЯИФЯИ▓ЯИЋЯ╣ѕЯИГЯ╣ёЯИЏЯИЎЯИхЯ╣Ѕ ** ЯИѕЯИ░Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИџЯИ▒ЯИЎЯИЌЯИХЯИЂЯ╣ёЯИДЯ╣ЅЯ╣ђЯИъЯИБЯИ▓ЯИ░ `--save` Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯ╣ђЯИБЯИхЯИбЯИЂ"##),
        ("dst", r##"Я╣ђЯИфЯ╣ЅЯИЎЯИЌЯИ▓ЯИЄЯ╣ёЯИЪЯИЦЯ╣їЯИЏЯИЦЯИ▓ЯИбЯИЌЯИ▓ЯИЄ"##),
        ("conv-error", r##"ЯИѓЯ╣ЅЯИГЯИюЯИ┤ЯИћЯИъЯИЦЯИ▓ЯИћЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄ"##),
    ],
}
}

/// Language ID: th;
/// Map name: "conversion_md";
/// Description: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб;
pub(super) const fn get_th_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ёЯИЪЯИЦЯ╣їЯ╣ёЯИАЯ╣ѕЯ╣ёЯИћЯ╣ЅЯ╣ђЯИЏЯ╣ЄЯИЎЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ЯИЌЯИхЯ╣ѕЯИќЯИ╣ЯИЂЯИЋЯ╣ЅЯИГЯИЄЯИъЯИбЯИ▓ЯИбЯИ▓ЯИАЯ╣ЂЯИбЯИЂЯИДЯИ┤Я╣ђЯИёЯИБЯИ▓ЯИ░ЯИФЯ╣їЯ╣ђЯИЏЯ╣ЄЯИЎ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ёЯИџЯИЎЯИ▓ЯИБЯИх ** ЯИЎЯИхЯ╣ЅЯ╣ёЯИАЯ╣ѕЯИБЯИДЯИА ** ЯИЪЯИ▒ЯИЄЯИЂЯ╣їЯИіЯИ▒Я╣ѕЯИЎЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИфЯИ│ЯИФЯИБЯИ▒ЯИџЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄ
[48;2;34;34;34m[38;2;255;255;255mЯИёЯИИЯИЊЯИЋЯ╣ЅЯИГЯИЄЯ╣ђЯИЏЯИ┤ЯИћЯ╣ЃЯИіЯ╣ЅЯИЄЯИ▓ЯИЎЯИёЯИИЯИЊЯИфЯИАЯИџЯИ▒ЯИЋЯИ┤ЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄЯ╣ЃЯИЎ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я╣ЂЯИЦЯИ░ repompile
[48;2;34;34;34m[38;2;255;255;255mЯИФЯИ▓ЯИЂЯИІЯИГЯИЪЯИЋЯ╣їЯ╣ЂЯИДЯИБЯ╣їЯИЎЯИхЯ╣ЅЯ╣ёЯИАЯ╣ѕЯИБЯИДЯИАЯИЪЯИ▒ЯИЄЯИЂЯ╣їЯИіЯИ▒Я╣ѕЯИЎЯИЌЯИхЯ╣ѕЯ╣ђЯИЂЯИхЯ╣ѕЯИбЯИДЯИѓЯ╣ЅЯИГЯИЄЯ╣ѓЯИЏЯИБЯИћЯИфЯ╣ѕЯИЄЯИЏЯИ▒ЯИЇЯИФЯИ▓[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mЯИБЯИ▓ЯИбЯИЂЯИ▓ЯИБЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯИБЯИГЯИЄЯИБЯИ▒ЯИџЯ╣ЃЯИЎЯИЏЯИ▒ЯИѕЯИѕЯИИЯИџЯИ▒ЯИЎ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯ╣ёЯИћЯ╣ЅЯИБЯИ▒ЯИџЯИЂЯИ▓ЯИБЯИфЯИЎЯИ▒ЯИџЯИфЯИЎЯИИЯИЎ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ёЯИАЯ╣ѕЯИфЯИ▓ЯИАЯИ▓ЯИБЯИќЯИЋЯИБЯИДЯИѕЯИѕЯИ▒ЯИџЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИћЯ╣ЅЯ╣ѓЯИћЯИбЯИГЯИ▒ЯИЋЯ╣ѓЯИЎЯИАЯИ▒ЯИЋЯИ┤Я╣ѓЯИЏЯИБЯИћЯИБЯИ░ЯИџЯИИЯИћЯ╣ЅЯИДЯИбЯИЋЯИЎЯ╣ђЯИГЯИЄ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ЯИбЯИ▒ЯИЄЯ╣ёЯИАЯ╣ѕЯИБЯИГЯИЄЯИБЯИ▒ЯИџ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄЯИѕЯИ▓ЯИЂ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m Я╣ђЯИЏЯ╣ЄЯИЎ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИГЯИиЯ╣ѕЯИЎ Я╣є '[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИЪЯИЦЯ╣їЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯИБЯИ╣Я╣ЅЯИѕЯИ▒ЯИЂ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ђЯИЎЯИиЯ╣ЅЯИГЯИФЯИ▓ЯИЋЯ╣ѕЯИГЯ╣ёЯИЏЯИЎЯИхЯ╣Ѕ ** ЯИѕЯИ░Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИџЯИ▒ЯИЎЯИЌЯИХЯИЂЯ╣ёЯИДЯ╣ЅЯ╣ђЯИъЯИБЯИ▓ЯИ░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯ╣ђЯИБЯИхЯИбЯИЂ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ђЯИфЯ╣ЅЯИЎЯИЌЯИ▓ЯИЄЯ╣ёЯИЪЯИЦЯ╣їЯИЏЯИЦЯИ▓ЯИбЯИЌЯИ▓ЯИЄ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mЯИѓЯ╣ЅЯИГЯИюЯИ┤ЯИћЯИъЯИЦЯИ▓ЯИћЯИЂЯИ▓ЯИБЯ╣ЂЯИЏЯИЦЯИЄ[0m"##),
    ],
}
}

/// Language ID: th;
/// Map name: "set";
/// Description: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Я╣ђЯИф\u{e49}ЯИЎЯИЌЯИ▓ЯИЄЯ╣ёЯИЪЯИЦ\u{e4c}ЯИЌ\u{e35}\u{e48}Я╣ёЯИА\u{e48}ЯИќ\u{e39}ЯИЂЯИЋ\u{e49}ЯИГЯИЄ");
/// ```
pub(super) const fn get_th_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Я╣ђЯИЎЯИиЯ╣ЅЯИГЯИФЯИ▓ЯИЌЯИхЯ╣ѕЯ╣ЂЯИЂЯ╣ЅЯ╣ёЯИѓ ** ЯИѕЯИ░Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИџЯИ▒ЯИЎЯИЌЯИХЯИЂЯ╣ђЯИъЯИБЯИ▓ЯИ░ `--sv` Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯ╣ђЯИБЯИхЯИбЯИЂ"##),
        ("new-value", r##"ЯИёЯ╣ѕЯИ▓Я╣ЃЯИФЯИАЯ╣ѕ"##),
        ("invalid-path", r##"Я╣ђЯИфЯ╣ЅЯИЎЯИЌЯИ▓ЯИЄЯ╣ёЯИЪЯИЦЯ╣їЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИЋЯ╣ЅЯИГЯИЄ"##),
    ],
}
}

/// Language ID: th;
/// Map name: "set_md";
/// Description: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб;
pub(super) const fn get_th_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ђЯИЎЯИиЯ╣ЅЯИГЯИФЯИ▓ЯИЌЯИхЯ╣ѕЯ╣ЂЯИЂЯ╣ЅЯ╣ёЯИѓ ** ЯИѕЯИ░Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИџЯИ▒ЯИЎЯИЌЯИХЯИЂЯ╣ђЯИъЯИБЯИ▓ЯИ░ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Я╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯ╣ђЯИБЯИхЯИбЯИЂ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mЯИёЯ╣ѕЯИ▓Я╣ЃЯИФЯИАЯ╣ѕ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mЯ╣ђЯИфЯ╣ЅЯИЎЯИЌЯИ▓ЯИЄЯ╣ёЯИЪЯИЦЯ╣їЯИЌЯИхЯ╣ѕЯ╣ёЯИАЯ╣ѕЯИќЯИ╣ЯИЂЯИЋЯ╣ЅЯИГЯИЄ[0m"##),
    ],
}
}

/// Language ID: th;
/// Map name: "get";
/// Description: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ЯИБ\u{e39}ЯИЏЯ╣ЂЯИџЯИџЯИЏЯИЦЯИ▓ЯИбЯИЌЯИ▓ЯИЄ");
/// ```
pub(super) const fn get_th_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯИЏЯИЦЯИ▓ЯИбЯИЌЯИ▓ЯИЄ"##),
        ("src-fmt", r##"ЯИБЯИ╣ЯИЏЯ╣ЂЯИџЯИџЯ╣ёЯИЪЯИЦЯ╣їЯИЋЯ╣ЅЯИЎЯИЅЯИџЯИ▒ЯИџ"##),
    ],
}
}

/// th: Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб, Я╣ёЯИЌЯИб
pub(super) const fn get_th_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_th_map_conversion),
        ("get", get_th_map_get),
        ("set_md", get_th_map_set_md),
        ("set", get_th_map_set),
        ("conversion_md", get_th_map_conversion_md),
    ],
}
}

/// Language ID: tr;
/// Map name: "conversion";
/// Description: T├╝rk├Дe, Latin, T├╝rkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Bi├Дimi otomatik olarak alg─▒layamad─▒.L├╝tfen manuel olarak belirtin.");
/// ```
pub(super) const fn get_tr_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Dosya ge├Дerli bir `JSON 1.0` bi├Дimi de─Ъil, `json5 'olarak ayr─▒┼Ъt─▒rmaya ├Дal─▒┼Ъan ..."##),
        ("not-included", r##"Bu ikili ilgili format i├Дin d├Хn├╝┼Ъ├╝m i┼Ъlevini i├Дermez.
`Cargo.toml` ve yeniden derlemenizdeki ilgili ├Хzelli─Ъi etkinle┼Ъtirmeniz gerekir.
Bu yaz─▒l─▒m ilgili i┼Ъlevleri i├Дermiyorsa, l├╝tfen bir sorun g├Хnderin."##),
        ("currently-supported", r##"┼ъu anda Desteklenen Formatlar Listesi:"##),
        ("unsupported", r##"Desteklenmemi┼Ъ Bi├Дim D├Хn├╝┼Ъ├╝m├╝"##),
        ("auto-detection-failed", r##"Bi├Дimi otomatik olarak alg─▒layamad─▒.L├╝tfen manuel olarak belirtin."##),
        ("not-support-deser-sexp", r##"** Hen├╝z desteklenmedi **: Lisp S-ekspresyonundan `` Di─Ъer Bi├Дimler '' e d├Хn├╝┼Ъt├╝r├╝lme"##),
        ("unknown-fmt", r##"Bilinmeyen dosya bi├Дimi"##),
        ("not-saved", r##"A┼Ъa─Ъ─▒daki i├Дerik ** `--save` ├Дa─Ъr─▒lmad─▒─Ъ─▒ i├Дin ** kaydedilmez."##),
        ("dst", r##"Hedef Dosya Yolu"##),
        ("conv-error", r##"d├Хn├╝┼Ъ├╝m hatas─▒"##),
    ],
}
}

/// Language ID: tr;
/// Map name: "conversion_md";
/// Description: T├╝rk├Дe, Latin, T├╝rkiye;
pub(super) const fn get_tr_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mDosya ge├Дerli bir [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m bi├Дimi de─Ъil, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5 'olarak ayr─▒┼Ъt─▒rmaya ├Дal─▒┼Ъan ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBu ikili ilgili format i├Дin d├Хn├╝┼Ъ├╝m i┼Ъlevini i├Дermez.
[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ve yeniden derlemenizdeki ilgili ├Хzelli─Ъi etkinle┼Ъtirmeniz gerekir.
[48;2;34;34;34m[38;2;255;255;255mBu yaz─▒l─▒m ilgili i┼Ъlevleri i├Дermiyorsa, l├╝tfen bir sorun g├Хnderin.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m┼ъu anda Desteklenen Formatlar Listesi:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mDesteklenmemi┼Ъ Bi├Дim D├Хn├╝┼Ъ├╝m├╝[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mBi├Дimi otomatik olarak alg─▒layamad─▒.L├╝tfen manuel olarak belirtin.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Hen├╝z desteklenmedi [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Lisp S-ekspresyonundan [48;2;34;34;34m[38;2;0;255;255m``[48;2;34;34;34m[38;2;0;255;255m Di─Ъer Bi├Дimler '' e d├Хn├╝┼Ъt├╝r├╝lme[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mBilinmeyen dosya bi├Дimi[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mA┼Ъa─Ъ─▒daki i├Дerik ** [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ├Дa─Ъr─▒lmad─▒─Ъ─▒ i├Дin ** kaydedilmez.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mHedef Dosya Yolu[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255md├Хn├╝┼Ъ├╝m hatas─▒[0m"##),
    ],
}
}

/// Language ID: tr;
/// Map name: "set";
/// Description: T├╝rk├Дe, Latin, T├╝rkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Ge├Дersiz dosya yolu.");
/// ```
pub(super) const fn get_tr_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"De─Ъi┼Ъtirilmi┼Ъ i├Дerik **, `---sv` ├Дa─Ъr─▒lmad─▒─Ъ─▒ndan ** kaydedilmez."##),
        ("new-value", r##"yeni de─Ъer"##),
        ("invalid-path", r##"Ge├Дersiz dosya yolu."##),
    ],
}
}

/// Language ID: tr;
/// Map name: "set_md";
/// Description: T├╝rk├Дe, Latin, T├╝rkiye;
pub(super) const fn get_tr_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mDe─Ъi┼Ъtirilmi┼Ъ i├Дerik [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m, [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m---sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ├Дa─Ъr─▒lmad─▒─Ъ─▒ndan ** kaydedilmez.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255myeni de─Ъer[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mGe├Дersiz dosya yolu.[0m"##),
    ],
}
}

/// Language ID: tr;
/// Map name: "get";
/// Description: T├╝rk├Дe, Latin, T├╝rkiye;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Hedef bi├Дimi");
/// ```
pub(super) const fn get_tr_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Hedef bi├Дimi"##),
        ("src-fmt", r##"Kaynak Dosya Bi├Дimi"##),
    ],
}
}

/// tr: T├╝rk├Дe, Latin, T├╝rkiye
pub(super) const fn get_tr_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_tr_map_conversion),
        ("get", get_tr_map_get),
        ("set_md", get_tr_map_set_md),
        ("set", get_tr_map_set),
        ("conversion_md", get_tr_map_conversion_md),
    ],
}
}

/// Language ID: ug;
/// Map name: "conversion";
/// Description: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "┘Ђ┘ѕп▒┘ЁпДпф┘Ѕ┘є┘Ѕ пдпД┘Йпф┘ѕ┘ЁпДпф┘Ѕ┘Ѓ пепД┘і┘ѓпДп┤ ┘Ё█Ћп║┘ё█Єпе пе┘ѕ┘ёп»┘Ѕ.┘ѓ┘ѕ┘ёп»пД пе█Ћ┘ё┌»┘Ѕ┘ё█Ћ┌Г.");
/// ```
pub(super) const fn get_ug_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (5, 6),
    ],
    entries: &[
        ("invalid-json1.0", r##"┌Й█єпгпг█Ћпф пд┘Ѕ┘єпД█І█Ћпф┘ё┘Ѕ┘Ѓ ` `JSON 1.0 ┘Ђ┘ѕп▒┘ЁпДпф пд█Ћ┘Ё█Ћп│, ┬ФJSONEN5`┬╗ п»█Ћ┘Й пф█Ћп▒┘Ѕ█ІпД┘ё┘ЁпД┘ѓ┌є┘Ѕ."##),
        ("not-saved", r##"пф█є█І█Ћ┘єп»┘Ѕ┘Ѓ┘Ѕ ┘Ё█Ћп▓┘Ё█Є┘є *** ┘є┘Ѕ **** ┘є┘Ѕ п│пД┘ѓ┘ё┘Ѕ┘ЁпД┘іп»█Є ** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є."##),
        ("dst", r##"┘є┘Ѕп┤пД┘є ┌Й█єпгпг█Ћпф ┘і┘ѕ┘ё┘Ѕ"##),
        ("not-included", r##"пе█Є пд┘Ѕ┘Ѓ┘Ѓ┘Ѕ┘ё┘Ѕ┘Ѓ ** ** п│█єп▓┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘ЁпД┘іп»█Є ** ┘Ё█Є┘єпДп│┘Ѕ█І█Ћпф┘ё┘Ѕ┘Ѓ ┘Ђ┘ѕп▒┘ЁпДпф┘є┘Ѕ┌Г пдпД┘і┘ёпД┘є┘ЁпД пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘Ѕ┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘ЁпД┘іп»█Є.
┬Ф┘і█ѕ┘Ѓ п│пД┘єп»█Є┘ѓ┘Ѕ┌Г┘Ѕп▓ пе┘Ѕ┘ё█Ћ┘є ┘Ё█Є┘єпДп│┘Ѕ█І█Ћпф┘ё┘Ѕ┘Ѓ пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘є┘Ѕ ┘ѓ┘ѕп▓п║┘Ѕпф┘Ѕп┤┘Ѕ┌Г┘Ѕп▓ ┘Ѓ█љп▒█Ћ┘Ѓ. █І█Ћ ┘ѓпД┘іпфпД ┘і█љп▓┘Ѕ┘ёп║пД┘є.
пд█Ћ┌»█Ћп▒ пе█Є ┘і█Є┘Ёп┤пД┘ѓ п»█љпфпД┘ё ┘Ё█Є┘єпДп│┘Ѕ┘Й пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘Ё┘Ѕп│пД, пе┘Ѕп▒ ┘Ё█Ћп│┘Ѕ┘ё┘Ѕ┘є┘Ѕ ┘і┘ѕ┘ё┘ёпД┌Г."##),
        ("unknown-fmt", r##"┘єпД┘Ё█Ћ┘ё█Є┘Ё ┌Й█єпгпг█Ћпф п┤█Ћ┘Ѓ┘ё┘Ѕ"##),
        ("unsupported", r##"┘ѓ┘ѕ┘ё┘ё┘Ѕ┘ЁпД┘іп»┘Ѕп║пД┘є ┘Ђ┘ѕп▒┘ЁпДпф пд█єп▓┌»█Ћп▒пф┘Ѕп┤"##),
        ("conv-error", r##"пдпД┘і┘ёпД┘єп»█Єп▒█Єп┤ п«пДпфпД┘ё┘Ѕ┘ѓ┘Ѕ"##),
        ("auto-detection-failed", r##"┘Ђ┘ѕп▒┘ЁпДпф┘Ѕ┘є┘Ѕ пдпД┘Йпф┘ѕ┘ЁпДпф┘Ѕ┘Ѓ пепД┘і┘ѓпДп┤ ┘Ё█Ћп║┘ё█Єпе пе┘ѕ┘ёп»┘Ѕ.┘ѓ┘ѕ┘ёп»пД пе█Ћ┘ё┌»┘Ѕ┘ё█Ћ┌Г."##),
    ],
}
}

/// Language ID: ug;
/// Map name: "conversion_md";
/// Description: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ;
pub(super) const fn get_ug_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (5, 6),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m┌Й█єпгпг█Ћпф пд┘Ѕ┘єпД█І█Ћпф┘ё┘Ѕ┘Ѓ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mJSON 1.0 ┘Ђ┘ѕп▒┘ЁпДпф пд█Ћ┘Ё█Ћп│, ┬ФJSONEN5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m┬╗ п»█Ћ┘Й пф█Ћп▒┘Ѕ█ІпД┘ё┘ЁпД┘ѓ┌є┘Ѕ.[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mпф█є█І█Ћ┘єп»┘Ѕ┘Ѓ┘Ѕ ┘Ё█Ћп▓┘Ё█Є┘є *** ┘є┘Ѕ **** ┘є┘Ѕ п│пД┘ѓ┘ё┘Ѕ┘ЁпД┘іп»█Є ** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘є┘Ѕп┤пД┘є ┌Й█єпгпг█Ћпф ┘і┘ѕ┘ё┘Ѕ[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mпе█Є пд┘Ѕ┘Ѓ┘Ѓ┘Ѕ┘ё┘Ѕ┘Ѓ ** ** п│█єп▓┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘ЁпД┘іп»█Є ** ┘Ё█Є┘єпДп│┘Ѕ█І█Ћпф┘ё┘Ѕ┘Ѓ ┘Ђ┘ѕп▒┘ЁпДпф┘є┘Ѕ┌Г пдпД┘і┘ёпД┘є┘ЁпД пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘Ѕ┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘ЁпД┘іп»█Є.
[48;2;34;34;34m[38;2;255;255;255m┬Ф┘і█ѕ┘Ѓ п│пД┘єп»█Є┘ѓ┘Ѕ┌Г┘Ѕп▓ пе┘Ѕ┘ё█Ћ┘є ┘Ё█Є┘єпДп│┘Ѕ█І█Ћпф┘ё┘Ѕ┘Ѓ пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘є┘Ѕ ┘ѓ┘ѕп▓п║┘Ѕпф┘Ѕп┤┘Ѕ┌Г┘Ѕп▓ ┘Ѓ█љп▒█Ћ┘Ѓ. █І█Ћ ┘ѓпД┘іпфпД ┘і█љп▓┘Ѕ┘ёп║пД┘є.
[48;2;34;34;34m[38;2;255;255;255mпд█Ћ┌»█Ћп▒ пе█Є ┘і█Є┘Ёп┤пД┘ѓ п»█љпфпД┘ё ┘Ё█Є┘єпДп│┘Ѕ┘Й пд┘Ѕ┘ѓпф┘Ѕп»пДп▒┘є┘Ѕ пд█єп▓ пд┘Ѕ┌є┘Ѕ┌»█Ћ пдпД┘ё┘Ё┘Ѕп│пД, пе┘Ѕп▒ ┘Ё█Ћп│┘Ѕ┘ё┘Ѕ┘є┘Ѕ ┘і┘ѕ┘ё┘ёпД┌Г.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпД┘Ё█Ћ┘ё█Є┘Ё ┌Й█єпгпг█Ћпф п┤█Ћ┘Ѓ┘ё┘Ѕ[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255m┘ѓ┘ѕ┘ё┘ё┘Ѕ┘ЁпД┘іп»┘Ѕп║пД┘є ┘Ђ┘ѕп▒┘ЁпДпф пд█єп▓┌»█Ћп▒пф┘Ѕп┤[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mпдпД┘і┘ёпД┘єп»█Єп▒█Єп┤ п«пДпфпД┘ё┘Ѕ┘ѓ┘Ѕ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ђ┘ѕп▒┘ЁпДпф┘Ѕ┘є┘Ѕ пдпД┘Йпф┘ѕ┘ЁпДпф┘Ѕ┘Ѓ пепД┘і┘ѓпДп┤ ┘Ё█Ћп║┘ё█Єпе пе┘ѕ┘ёп»┘Ѕ.┘ѓ┘ѕ┘ёп»пД пе█Ћ┘ё┌»┘Ѕ┘ё█Ћ┌Г.[0m"##),
    ],
}
}

/// Language ID: ug;
/// Map name: "set";
/// Description: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "пд┘Ѕ┘єпД█І█Ћпфп│┘Ѕп▓ ┌Й█єпгпг█Ћпф ┘і┘ѕ┘ё┘Ѕ.");
/// ```
pub(super) const fn get_ug_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"пд█єп▓┌»█Ћп▒пф┘Ѕ┘ё┌»█Ћ┘є ┘Ё█Ћп▓┘Ё█Є┘є **** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є ***** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є."##),
        ("new-value", r##"┘і█љ┌Г┘Ѕ ┘ѓ┘Ѕ┘Ё┘Ё█Ћпф"##),
        ("invalid-path", r##"пд┘Ѕ┘єпД█І█Ћпфп│┘Ѕп▓ ┌Й█єпгпг█Ћпф ┘і┘ѕ┘ё┘Ѕ."##),
    ],
}
}

/// Language ID: ug;
/// Map name: "set_md";
/// Description: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ;
pub(super) const fn get_ug_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mпд█єп▓┌»█Ћп▒пф┘Ѕ┘ё┌»█Ћ┘є ┘Ё█Ћп▓┘Ё█Є┘є **** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є ***** п│пД┘ѓ┘ёпД┘є┘ЁпД┘іп»█Є.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘і█љ┌Г┘Ѕ ┘ѓ┘Ѕ┘Ё┘Ё█Ћпф[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mпд┘Ѕ┘єпД█І█Ћпфп│┘Ѕп▓ ┌Й█єпгпг█Ћпф ┘і┘ѕ┘ё┘Ѕ.[0m"##),
    ],
}
}

/// Language ID: ug;
/// Map name: "get";
/// Description: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "┘Ё█Ћ┘єп▓┘Ѕ┘ё п┤█Ћ┘Ѓ┘ё┘Ѕ");
/// ```
pub(super) const fn get_ug_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"┘Ё█Ћ┘єп▓┘Ѕ┘ё п┤█Ћ┘Ѓ┘ё┘Ѕ"##),
        ("src-fmt", r##"┘Ё█Ћ┘єпе█Ћ ┌Й█єпгпг█Ћпф п┤█Ћ┘Ѓ┘ё┘Ѕ"##),
    ],
}
}

/// ug: пд█Є┘іп║█Єп▒┌є█Ћ, пд█Ћп▒█Ћпе, пг█Є┌Г┌»┘ѕ
pub(super) const fn get_ug_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ug_map_conversion),
        ("get", get_ug_map_get),
        ("set_md", get_ug_map_set_md),
        ("set", get_ug_map_set),
        ("conversion_md", get_ug_map_conversion_md),
    ],
}
}

/// Language ID: uk;
/// Map name: "conversion";
/// Description: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "лЮлх л▓л┤л░л╗лЙЛЂЛЈ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ л▓лИЛЈл▓лИЛѓлИ ЛёлЙЛђл╝л░Лѓ.лЉЛЃл┤Лї л╗л░ЛЂл║л░, л▓л║л░лХЛќЛѓЛї л▓ЛђЛЃЛЄлйЛЃ.");
/// ```
pub(super) const fn get_uk_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"лцл░л╣л╗ лйлх Лћ л┤Лќл╣ЛЂлйлИл╝ ЛёлЙЛђл╝л░ЛѓлЙл╝ json 1.0`, лйл░л╝л░л│л░ЛјЛЄлИЛЂЛї ЛђлЙлиЛќл▒Лђл░ЛѓлИЛЂЛЈ ЛЈл║ `json5` ..."##),
        ("not-included", r##"лдлхл╣ л┤л▓Лќл╣л║лЙл▓лИл╣ ** лйлх л▓л║л╗ЛјЛЄл░Лћ ** ЛёЛЃлйл║ЛєЛќлЙлйл░л╗ЛїлйЛќЛЂЛѓЛї л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ л┤л╗ЛЈ л▓Лќл┤л┐лЙл▓Лќл┤лйлЙл│лЙ ЛёлЙЛђл╝л░ЛѓЛЃ.
лњл░л╝ л┐лЙЛѓЛђЛќл▒лйлЙ л▓л▓Лќл╝л║лйЛЃЛѓлИ л▓Лќл┤л┐лЙл▓Лќл┤лйЛЃ ЛёЛЃлйл║ЛєЛќЛј ЛЃ л▓л░ЛѕлЙл╝ЛЃ `Cargo.toml` Лѓл░ л┐лхЛђлхл║лЙл╝л┐Лќл╗Лјл▓л░ЛѓлИ.
л»л║ЛЅлЙ Лєлх л┐ЛђлЙл│Лђл░л╝лйлх лил░л▒лхлил┐лхЛЄлхлйлйЛЈ лйлх л▓л║л╗ЛјЛЄл░Лћ л▓Лќл┤л┐лЙл▓Лќл┤лйЛЃ ЛёЛЃлйл║ЛєЛќлЙлйл░л╗ЛїлйЛќЛЂЛѓЛї, лйл░л┤ЛќЛѕл╗ЛќЛѓЛї л┐ЛђлЙл▒л╗лхл╝ЛЃ."##),
        ("currently-supported", r##"лАл┐лИЛЂлЙл║ ЛёлЙЛђл╝л░ЛѓЛќл▓, ЛЅлЙ л┐Лќл┤ЛѓЛђлИл╝ЛЃЛјЛѓЛїЛЂЛЈ л▓ л┤л░лйлИл╣ ЛЄл░ЛЂ:"##),
        ("unsupported", r##"лЮлхл▒ЛЃл┤лЙл▓л░ л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ ЛёлЙЛђл╝л░ЛѓЛЃ"##),
        ("auto-detection-failed", r##"лЮлх л▓л┤л░л╗лЙЛЂЛЈ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ л▓лИЛЈл▓лИЛѓлИ ЛёлЙЛђл╝л░Лѓ.лЉЛЃл┤Лї л╗л░ЛЂл║л░, л▓л║л░лХЛќЛѓЛї л▓ЛђЛЃЛЄлйЛЃ."##),
        ("not-support-deser-sexp", r##"4"##),
        ("unknown-fmt", r##"лЮлхл▓Лќл┤лЙл╝лИл╣ ЛёлЙЛђл╝л░Лѓ Лёл░л╣л╗ЛЃ"##),
        ("not-saved", r##"лЮл░ЛЂЛѓЛЃл┐лйлИл╣ л▓л╝ЛќЛЂЛѓ ** лйлх л▒ЛЃл┤лх лил▒лхЛђлхлХлхлйлЙ, лЙЛЂл║Лќл╗Лїл║лИ `--save` лйлх л▓лИл║л╗лИл║л░л╗лИ."##),
        ("dst", r##"Лѕл╗ЛЈЛЁ л┐ЛђлИлилйл░ЛЄлхлйлйЛЈ"##),
        ("conv-error", r##"лЪлЙл╝лИл╗л║л░ л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ"##),
    ],
}
}

/// Language ID: uk;
/// Map name: "conversion_md";
/// Description: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░;
pub(super) const fn get_uk_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mлцл░л╣л╗ лйлх Лћ л┤Лќл╣ЛЂлйлИл╝ ЛёлЙЛђл╝л░ЛѓлЙл╝ json 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m, лйл░л╝л░л│л░ЛјЛЄлИЛЂЛї ЛђлЙлиЛќл▒Лђл░ЛѓлИЛЂЛЈ ЛЈл║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mлдлхл╣ л┤л▓Лќл╣л║лЙл▓лИл╣ ** лйлх л▓л║л╗ЛјЛЄл░Лћ ** ЛёЛЃлйл║ЛєЛќлЙлйл░л╗ЛїлйЛќЛЂЛѓЛї л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ л┤л╗ЛЈ л▓Лќл┤л┐лЙл▓Лќл┤лйлЙл│лЙ ЛёлЙЛђл╝л░ЛѓЛЃ.
[48;2;34;34;34m[38;2;255;255;255mлњл░л╝ л┐лЙЛѓЛђЛќл▒лйлЙ л▓л▓Лќл╝л║лйЛЃЛѓлИ л▓Лќл┤л┐лЙл▓Лќл┤лйЛЃ ЛёЛЃлйл║ЛєЛќЛј ЛЃ л▓л░ЛѕлЙл╝ЛЃ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Лѓл░ л┐лхЛђлхл║лЙл╝л┐Лќл╗Лјл▓л░ЛѓлИ.
[48;2;34;34;34m[38;2;255;255;255mл»л║ЛЅлЙ Лєлх л┐ЛђлЙл│Лђл░л╝лйлх лил░л▒лхлил┐лхЛЄлхлйлйЛЈ лйлх л▓л║л╗ЛјЛЄл░Лћ л▓Лќл┤л┐лЙл▓Лќл┤лйЛЃ ЛёЛЃлйл║ЛєЛќлЙлйл░л╗ЛїлйЛќЛЂЛѓЛї, лйл░л┤ЛќЛѕл╗ЛќЛѓЛї л┐ЛђлЙл▒л╗лхл╝ЛЃ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mлАл┐лИЛЂлЙл║ ЛёлЙЛђл╝л░ЛѓЛќл▓, ЛЅлЙ л┐Лќл┤ЛѓЛђлИл╝ЛЃЛјЛѓЛїЛЂЛЈ л▓ л┤л░лйлИл╣ ЛЄл░ЛЂ:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▒ЛЃл┤лЙл▓л░ л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ ЛёлЙЛђл╝л░ЛѓЛЃ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлх л▓л┤л░л╗лЙЛЂЛЈ л░л▓ЛѓлЙл╝л░ЛѓлИЛЄлйлЙ л▓лИЛЈл▓лИЛѓлИ ЛёлЙЛђл╝л░Лѓ.лЉЛЃл┤Лї л╗л░ЛЂл║л░, л▓л║л░лХЛќЛѓЛї л▓ЛђЛЃЛЄлйЛЃ.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m4[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл▓Лќл┤лЙл╝лИл╣ ЛёлЙЛђл╝л░Лѓ Лёл░л╣л╗ЛЃ[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mлЮл░ЛЂЛѓЛЃл┐лйлИл╣ л▓л╝ЛќЛЂЛѓ ** лйлх л▒ЛЃл┤лх лил▒лхЛђлхлХлхлйлЙ, лЙЛЂл║Лќл╗Лїл║лИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх л▓лИл║л╗лИл║л░л╗лИ.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mЛѕл╗ЛЈЛЁ л┐ЛђлИлилйл░ЛЄлхлйлйЛЈ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mлЪлЙл╝лИл╗л║л░ л┐лхЛђлхЛѓл▓лЙЛђлхлйлйЛЈ[0m"##),
    ],
}
}

/// Language ID: uk;
/// Map name: "set";
/// Description: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "лЮлхл┤Лќл╣ЛЂлйлИл╣ Лѕл╗ЛЈЛЁ Лёл░л╣л╗ЛЃ.");
/// ```
pub(super) const fn get_uk_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"лЌл╝ЛќлйлхлйлИл╣ л▓л╝ЛќЛЂЛѓ ** лйлх л▒ЛЃл┤лх лил▒лхЛђлхлХлхлйлЙ, лЙЛЂл║Лќл╗Лїл║лИ `--sv` лйлх л▓лИл║л╗лИл║л░л╗лИ."##),
        ("new-value", r##"лйлЙл▓лх лилйл░ЛЄлхлйлйЛЈ"##),
        ("invalid-path", r##"лЮлхл┤Лќл╣ЛЂлйлИл╣ Лѕл╗ЛЈЛЁ Лёл░л╣л╗ЛЃ."##),
    ],
}
}

/// Language ID: uk;
/// Map name: "set_md";
/// Description: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░;
pub(super) const fn get_uk_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mлЌл╝ЛќлйлхлйлИл╣ л▓л╝ЛќЛЂЛѓ ** лйлх л▒ЛЃл┤лх лил▒лхЛђлхлХлхлйлЙ, лЙЛЂл║Лќл╗Лїл║лИ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m лйлх л▓лИл║л╗лИл║л░л╗лИ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mлйлЙл▓лх лилйл░ЛЄлхлйлйЛЈ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mлЮлхл┤Лќл╣ЛЂлйлИл╣ Лѕл╗ЛЈЛЁ Лёл░л╣л╗ЛЃ.[0m"##),
    ],
}
}

/// Language ID: uk;
/// Map name: "get";
/// Description: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "лцлЙЛђл╝л░Лѓ л┐ЛђлИлилйл░ЛЄлхлйлйЛЈ");
/// ```
pub(super) const fn get_uk_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"лцлЙЛђл╝л░Лѓ л┐ЛђлИлилйл░ЛЄлхлйлйЛЈ"##),
        ("src-fmt", r##"лцлЙЛђл╝л░Лѓ л▓лИЛЁЛќл┤лйлЙл│лЙ Лёл░л╣л╗ЛЃ"##),
    ],
}
}

/// uk: ЛЃл║Лђл░ЛЌлйЛЂЛїл║л░, л║лИЛђлИл╗лИЛєЛЈ, лБл║Лђл░ЛЌлйл░
pub(super) const fn get_uk_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_uk_map_conversion),
        ("get", get_uk_map_get),
        ("set_md", get_uk_map_set_md),
        ("set", get_uk_map_set),
        ("conversion_md", get_uk_map_conversion_md),
    ],
}
}

/// Language ID: ur;
/// Map name: "conversion";
/// Description: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "┘ЂпДп▒┘Ё█ї┘╣ ┌ЕпД п«┘ѕп» пеп«┘ѕп» ┘Йпф█Ђ ┘ё┌»пД┘є█њ ┘Ё█ї┌║ ┘єпД┌ЕпД┘Ё█ћпеп▒пД█Ђ ┌Еп▒┘Ё п»п│пф█ї пи┘ѕп▒ ┘Йп▒ ┘ѕпХпДпГпф ┌Еп▒█ї┌║█ћ");
/// ```
pub(super) const fn get_ur_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"┘ЂпДпд┘ё пД█ї┌Е п»п▒п│пф `JSON 1.0` ┘ЂпДп▒┘Ё█ї┘╣ ┘є█Ђ█ї┌║ █Ђ█њ пї пг┘ѕ `JSON5` ┌Е█њ пепи┘ѕп▒ пфпгп▓█ї█Ђ ┌Еп▒┘є█њ ┌Е█ї ┌Е┘ѕп┤п┤ ┌Еп▒ п▒█Ђ█ї █Ђ█њ ..."##),
        ("not-included", r##"пДп│ пепДпд┘єп▒█ї ** ┘Ё█ї┌║ ** ┘Ёпфп╣┘ё┘ѓ█Ђ ┘ЂпДп▒┘Ё█ї┘╣ ┌Е█њ ┘ёпд█њ пфпепДп»┘ё┘ѕ┌║ ┌Е█ї ┘Ђп╣пД┘ё█їпф п┤пД┘Ё┘ё ┘є█Ђ█ї┌║ █Ђ█њ█ћ
пб┘Й ┌Е┘ѕ пД┘Й┘є█њ `Cargo.toml` пД┘ѕп▒ recompile ┘Ё█ї┌║ ┘Ёпфп╣┘ё┘ѓ█Ђ п«пх┘ѕпх█їпф ┌Е┘ѕ ┘ѓпДпе┘ё пе┘єпД┘є█њ ┌Е█ї пХп▒┘ѕп▒пф █Ђ█њ█ћ
пД┌»п▒ пДп│ п│пД┘Ђ┘╣ ┘ѕ█їпдп▒ ┘Ё█ї┌║ ┘Ёпфп╣┘ё┘ѓ█Ђ ┘Ђп╣пД┘ё█їпф п┤пД┘Ё┘ё ┘є█Ђ█ї┌║ █Ђ█њ пф┘ѕ пї пеп▒пД█Ђ ┌Еп▒┘Ё ┌Е┘ѕпд█ї ┘Ёп│пд┘ё█Ђ ┘Й█їп┤ ┌Еп▒█ї┌║█ћ"##),
        ("currently-supported", r##"┘Ђ█ї пД┘ёпГпД┘ё ┘Ёп╣пД┘ѕ┘є ┘ЂпДп▒┘Ё█ї┘╣п│ ┌Е█ї ┘Ђ█Ђп▒п│пф:"##),
        ("unsupported", r##"п║█їп▒ пфп╣пД┘ѕ┘є █їпД┘Ђпф█Ђ ┘ЂпДп▒┘Ё█ї┘╣ пфпепДп»┘ё┘ѕ┌║"##),
        ("auto-detection-failed", r##"┘ЂпДп▒┘Ё█ї┘╣ ┌ЕпД п«┘ѕп» пеп«┘ѕп» ┘Йпф█Ђ ┘ё┌»пД┘є█њ ┘Ё█ї┌║ ┘єпД┌ЕпД┘Ё█ћпеп▒пД█Ђ ┌Еп▒┘Ё п»п│пф█ї пи┘ѕп▒ ┘Йп▒ ┘ѕпХпДпГпф ┌Еп▒█ї┌║█ћ"##),
        ("not-support-deser-sexp", r##"** пДпе┌Й█ї пф┌Е пфп╣пД┘ѕ┘є ┘є█Ђ█ї┌║ ┌Е█їпД ┌»█їпД **: `LISP S-expression` п│█њ` п»┘ѕп│п▒█њ ┘ЂпДп▒┘Ё█ї┘╣п│ ┘Ё█ї┌║ пфпеп»█ї┘ё ┌Еп▒┘єпД"##),
        ("unknown-fmt", r##"┘єпД┘Ёп╣┘ё┘ѕ┘Ё ┘ЂпДпд┘ё ┘ЂпДп▒┘Ё█ї┘╣"##),
        ("not-saved", r##"┘Ё┘єп»п▒пг█Ђ п░█ї┘ё ┘Ё┘ѕпДп» ** ** ┌Е┘ѕ ┘ЁпГ┘Ђ┘ѕпИ ┘є█Ђ█ї┌║ ┌Е█їпД пгпДпд█њ ┌»пД ┌Е█ї┘ѕ┘є┌Е█Ђ `--save` ┌Е┘ѕ ┘є█Ђ█ї┌║ пе┘ёпД█їпД ┌»█їпД пф┌ЙпД█ћ"##),
        ("dst", r##"┘Ё┘єп▓┘ё ┘Ё┘ѓпх┘ѕп» ┌ЕпД п▒пДп│пф█Ђ"##),
        ("conv-error", r##"пфпепДп»┘ё┘ѕ┌║ ┌Е█ї п«п▒пДпе█ї"##),
    ],
}
}

/// Language ID: ur;
/// Map name: "conversion_md";
/// Description: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є;
pub(super) const fn get_ur_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЂпДпд┘ё пД█ї┌Е п»п▒п│пф [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┘ЂпДп▒┘Ё█ї┘╣ ┘є█Ђ█ї┌║ █Ђ█њ пї пг┘ѕ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┌Е█њ пепи┘ѕп▒ пфпгп▓█ї█Ђ ┌Еп▒┘є█њ ┌Е█ї ┌Е┘ѕп┤п┤ ┌Еп▒ п▒█Ђ█ї █Ђ█њ ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mпДп│ пепДпд┘єп▒█ї ** ┘Ё█ї┌║ ** ┘Ёпфп╣┘ё┘ѓ█Ђ ┘ЂпДп▒┘Ё█ї┘╣ ┌Е█њ ┘ёпд█њ пфпепДп»┘ё┘ѕ┌║ ┌Е█ї ┘Ђп╣пД┘ё█їпф п┤пД┘Ё┘ё ┘є█Ђ█ї┌║ █Ђ█њ█ћ
[48;2;34;34;34m[38;2;255;255;255mпб┘Й ┌Е┘ѕ пД┘Й┘є█њ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m пД┘ѕп▒ recompile ┘Ё█ї┌║ ┘Ёпфп╣┘ё┘ѓ█Ђ п«пх┘ѕпх█їпф ┌Е┘ѕ ┘ѓпДпе┘ё пе┘єпД┘є█њ ┌Е█ї пХп▒┘ѕп▒пф █Ђ█њ█ћ
[48;2;34;34;34m[38;2;255;255;255mпД┌»п▒ пДп│ п│пД┘Ђ┘╣ ┘ѕ█їпдп▒ ┘Ё█ї┌║ ┘Ёпфп╣┘ё┘ѓ█Ђ ┘Ђп╣пД┘ё█їпф п┤пД┘Ё┘ё ┘є█Ђ█ї┌║ █Ђ█њ пф┘ѕ пї пеп▒пД█Ђ ┌Еп▒┘Ё ┌Е┘ѕпд█ї ┘Ёп│пд┘ё█Ђ ┘Й█їп┤ ┌Еп▒█ї┌║█ћ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ђ█ї пД┘ёпГпД┘ё ┘Ёп╣пД┘ѕ┘є ┘ЂпДп▒┘Ё█ї┘╣п│ ┌Е█ї ┘Ђ█Ђп▒п│пф:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mп║█їп▒ пфп╣пД┘ѕ┘є █їпД┘Ђпф█Ђ ┘ЂпДп▒┘Ё█ї┘╣ пфпепДп»┘ё┘ѕ┌║[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255m┘ЂпДп▒┘Ё█ї┘╣ ┌ЕпД п«┘ѕп» пеп«┘ѕп» ┘Йпф█Ђ ┘ё┌»пД┘є█њ ┘Ё█ї┌║ ┘єпД┌ЕпД┘Ё█ћпеп▒пД█Ђ ┌Еп▒┘Ё п»п│пф█ї пи┘ѕп▒ ┘Йп▒ ┘ѕпХпДпГпф ┌Еп▒█ї┌║█ћ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** пДпе┌Й█ї пф┌Е пфп╣пД┘ѕ┘є ┘є█Ђ█ї┌║ ┌Е█їпД ┌»█їпД [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLISP S-expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m п│█њ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m п»┘ѕп│п▒█њ ┘ЂпДп▒┘Ё█ї┘╣п│ ┘Ё█ї┌║ пфпеп»█ї┘ё ┌Еп▒┘єпД[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпД┘Ёп╣┘ё┘ѕ┘Ё ┘ЂпДпд┘ё ┘ЂпДп▒┘Ё█ї┘╣[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ё┘єп»п▒пг█Ђ п░█ї┘ё ┘Ё┘ѕпДп» ** ** ┌Е┘ѕ ┘ЁпГ┘Ђ┘ѕпИ ┘є█Ђ█ї┌║ ┌Е█їпД пгпДпд█њ ┌»пД ┌Е█ї┘ѕ┘є┌Е█Ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┌Е┘ѕ ┘є█Ђ█ї┌║ пе┘ёпД█їпД ┌»█їпД пф┌ЙпД█ћ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m┘Ё┘єп▓┘ё ┘Ё┘ѓпх┘ѕп» ┌ЕпД п▒пДп│пф█Ђ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mпфпепДп»┘ё┘ѕ┌║ ┌Е█ї п«п▒пДпе█ї[0m"##),
    ],
}
}

/// Language ID: ur;
/// Map name: "set";
/// Description: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "п║┘ёпи ┘ЂпДпд┘ё ┌ЕпД п▒пДп│пф█Ђ█ћ");
/// ```
pub(super) const fn get_ur_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"пфп▒┘Ё█ї┘Ё п┤п»█Ђ ┘Ё┘ѕпДп» ** ** ┌Е┘ѕ ┘ЁпГ┘Ђ┘ѕпИ ┘є█Ђ█ї┌║ ┌Е█їпД пгпДпд█њ ┌»пД ┌Е█ї┘ѕ┘є┌Е█Ђ `-SV` ┌Е┘ѕ ┘є█Ђ█ї┌║ пе┘ёпД█їпД ┌»█їпД пф┌ЙпД█ћ"##),
        ("new-value", r##"┘єпд█ї ┘ѓ█ї┘Ёпф"##),
        ("invalid-path", r##"п║┘ёпи ┘ЂпДпд┘ё ┌ЕпД п▒пДп│пф█Ђ█ћ"##),
    ],
}
}

/// Language ID: ur;
/// Map name: "set_md";
/// Description: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є;
pub(super) const fn get_ur_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mпфп▒┘Ё█ї┘Ё п┤п»█Ђ ┘Ё┘ѕпДп» ** ** ┌Е┘ѕ ┘ЁпГ┘Ђ┘ѕпИ ┘є█Ђ█ї┌║ ┌Е█їпД пгпДпд█њ ┌»пД ┌Е█ї┘ѕ┘є┌Е█Ђ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m-SV[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ┌Е┘ѕ ┘є█Ђ█ї┌║ пе┘ёпД█їпД ┌»█їпД пф┌ЙпД█ћ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255m┘єпд█ї ┘ѓ█ї┘Ёпф[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mп║┘ёпи ┘ЂпДпд┘ё ┌ЕпД п▒пДп│пф█Ђ█ћ[0m"##),
    ],
}
}

/// Language ID: ur;
/// Map name: "get";
/// Description: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "┘Ё┘єп▓┘ё ┘Ё┘ѓпх┘ѕп»");
/// ```
pub(super) const fn get_ur_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"┘Ё┘єп▓┘ё ┘Ё┘ѓпх┘ѕп»"##),
        ("src-fmt", r##"┘ЁпДп«п░ ┘ЂпДпд┘ё ┌Е█ї п┤┌Е┘ё"##),
    ],
}
}

/// ur: пДп▒п»┘ѕ, п╣п▒пе█ї, ┘ЙпД┌Еп│пфпД┘є
pub(super) const fn get_ur_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_ur_map_conversion),
        ("get", get_ur_map_get),
        ("set_md", get_ur_map_set_md),
        ("set", get_ur_map_set),
        ("conversion_md", get_ur_map_conversion_md),
    ],
}
}

/// Language ID: uz;
/// Map name: "conversion";
/// Description: oРђўzbek, lotin, O╩╗zbekiston;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Formatni avtomatik ravishda aniqlab bo'lmadi.Iltimos, qo'lda belgilang.");
/// ```
pub(super) const fn get_uz_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"Konversiya xato"##),
        ("not-support-deser-sexp", r##"Qo'llab-quvvatlanmaydi **: "lisp s-ifoda" dan "boshqa forss" gacha o'zgarishi"##),
        ("dst", r##"Belgilangan fayl yo'li"##),
        ("unsupported", r##"Qo'llab-quvvatlanmaydigan formatni o'zgartirish"##),
        ("auto-detection-failed", r##"Formatni avtomatik ravishda aniqlab bo'lmadi.Iltimos, qo'lda belgilang."##),
        ("currently-supported", r##"Xursand qilingan formatlar ro'yxati:"##),
        ("not-included", r##"Ushbu ikkilik ** tegishli format uchun konversiya funktsiyalarini o'z ichiga olmaydi.
Siz "yuk tashish" va qayta ishlashda tegishli xususiyatni yoqishingiz kerak.
Agar ushbu dastur mos funktsiyani o'z ichiga olmasa, iltimos, muammoni taqdim eting."##),
        ("unknown-fmt", r##"Noma'lum fayl formati"##),
    ],
}
}

/// Language ID: uz;
/// Map name: "conversion_md";
/// Description: oРђўzbek, lotin, O╩╗zbekiston;
pub(super) const fn get_uz_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 3),
        (2, 0),
    ],
    entries: &[
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mKonversiya xato[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255mQo'llab-quvvatlanmaydi [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: "lisp s-ifoda" dan "boshqa forss" gacha o'zgarishi[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mBelgilangan fayl yo'li[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mQo'llab-quvvatlanmaydigan formatni o'zgartirish[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mFormatni avtomatik ravishda aniqlab bo'lmadi.Iltimos, qo'lda belgilang.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mXursand qilingan formatlar ro'yxati:[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mUshbu ikkilik ** tegishli format uchun konversiya funktsiyalarini o'z ichiga olmaydi.
[48;2;34;34;34m[38;2;255;255;255mSiz "yuk tashish" va qayta ishlashda tegishli xususiyatni yoqishingiz kerak.
[48;2;34;34;34m[38;2;255;255;255mAgar ushbu dastur mos funktsiyani o'z ichiga olmasa, iltimos, muammoni taqdim eting.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mNoma'lum fayl formati[0m"##),
    ],
}
}

/// Language ID: uz;
/// Map name: "set";
/// Description: oРђўzbek, lotin, O╩╗zbekiston;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Noto'g'ri fayl yo'li.");
/// ```
pub(super) const fn get_uz_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"O'zgartirilgan tarkibni saqlab qolmaydi ** "- -sv" deb nomlanmagan."##),
        ("new-value", r##"Yangilik"##),
        ("invalid-path", r##"Noto'g'ri fayl yo'li."##),
    ],
}
}

/// Language ID: uz;
/// Map name: "set_md";
/// Description: oРђўzbek, lotin, O╩╗zbekiston;
pub(super) const fn get_uz_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mO'zgartirilgan tarkibni saqlab qolmaydi ** "- -sv" deb nomlanmagan.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mYangilik[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mNoto'g'ri fayl yo'li.[0m"##),
    ],
}
}

/// Language ID: uz;
/// Map name: "get";
/// Description: oРђўzbek, lotin, O╩╗zbekiston;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Belgilangan format");
/// ```
pub(super) const fn get_uz_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Belgilangan format"##),
        ("src-fmt", r##"Manba fayl formati"##),
    ],
}
}

/// uz: oРђўzbek, lotin, O╩╗zbekiston
pub(super) const fn get_uz_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_uz_map_conversion),
        ("get", get_uz_map_get),
        ("set_md", get_uz_map_set_md),
        ("set", get_uz_map_set),
        ("conversion_md", get_uz_map_conversion_md),
    ],
}
}

/// Language ID: vi;
/// Map name: "conversion";
/// Description: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Kh├┤ng thр╗Ѓ tр╗▒ ─Љр╗Ўng ph├Аt hiр╗Єn ─Љр╗Іnh dр║Аng.Vui l├▓ng chр╗Ѕ ─Љр╗Іnh thр╗Д c├┤ng.");
/// ```
pub(super) const fn get_vi_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Tр╗Єp kh├┤ng phр║Бi l├а ─Љр╗Іnh dр║Аng `json 1.0` hр╗Бp lр╗Є, cр╗Љ gр║»ng ph├бn t├Гch ph├бn t├Гch th├аnh `json5` ..."##),
        ("not-included", r##"Binary ** n├аy kh├┤ng bao gр╗Њm ** Chр╗Еc n─Ѓng chuyр╗Ѓn ─Љр╗Ћi cho ─Љр╗Іnh dр║Аng c├│ li├фn quan.
Bр║Аn cр║Дn bр║Гt t├Гnh n─Ѓng c├│ li├фn quan trong `Cargo.toml` v├а Recompile.
Nр║┐u phр║Дn mр╗Ђm n├аy kh├┤ng bao gр╗Њm chр╗Еc n─Ѓng tк░кАng р╗Еng, vui l├▓ng gр╗Гi mр╗Ўt vр║Цn ─Љр╗Ђ."##),
        ("currently-supported", r##"Danh s├Аch c├Аc ─Љр╗Іnh dр║Аng hiр╗Єn ─Љк░р╗Бc hр╗Ќ trр╗Б:"##),
        ("unsupported", r##"Chuyр╗Ѓn ─Љр╗Ћi ─Љр╗Іnh dр║Аng kh├┤ng ─Љк░р╗Бc hр╗Ќ trр╗Б"##),
        ("auto-detection-failed", r##"Kh├┤ng thр╗Ѓ tр╗▒ ─Љр╗Ўng ph├Аt hiр╗Єn ─Љр╗Іnh dр║Аng.Vui l├▓ng chр╗Ѕ ─Љр╗Іnh thр╗Д c├┤ng."##),
        ("not-support-deser-sexp", r##"** Chк░a ─Љк░р╗Бc hр╗Ќ trр╗Б"##),
        ("unknown-fmt", r##"─љр╗Іnh dр║Аng tр╗Єp kh├┤ng x├Аc ─Љр╗Іnh"##),
        ("not-saved", r##"Nр╗Ўi dung sau ** sр║й kh├┤ng ** ─Љк░р╗Бc lк░u v├г `--save` kh├┤ng ─Љк░р╗Бc gр╗Їi."##),
        ("dst", r##"─љк░р╗Юng dр║Фn tр╗Єp ─Љ├Гch"##),
        ("conv-error", r##"Lр╗Ќi chuyр╗Ѓn ─Љр╗Ћi"##),
    ],
}
}

/// Language ID: vi;
/// Map name: "conversion_md";
/// Description: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam;
pub(super) const fn get_vi_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mTр╗Єp kh├┤ng phр║Бi l├а ─Љр╗Іnh dр║Аng [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m hр╗Бp lр╗Є, cр╗Љ gр║»ng ph├бn t├Гch ph├бn t├Гch th├аnh [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mBinary ** n├аy kh├┤ng bao gр╗Њm ** Chр╗Еc n─Ѓng chuyр╗Ѓn ─Љр╗Ћi cho ─Љр╗Іnh dр║Аng c├│ li├фn quan.
[48;2;34;34;34m[38;2;255;255;255mBр║Аn cр║Дn bр║Гt t├Гnh n─Ѓng c├│ li├фn quan trong [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m v├а Recompile.
[48;2;34;34;34m[38;2;255;255;255mNр║┐u phр║Дn mр╗Ђm n├аy kh├┤ng bao gр╗Њm chр╗Еc n─Ѓng tк░кАng р╗Еng, vui l├▓ng gр╗Гi mр╗Ўt vр║Цn ─Љр╗Ђ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mDanh s├Аch c├Аc ─Љр╗Іnh dр║Аng hiр╗Єn ─Љк░р╗Бc hр╗Ќ trр╗Б:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mChuyр╗Ѓn ─Љр╗Ћi ─Љр╗Іnh dр║Аng kh├┤ng ─Љк░р╗Бc hр╗Ќ trр╗Б[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mKh├┤ng thр╗Ѓ tр╗▒ ─Љр╗Ўng ph├Аt hiр╗Єn ─Љр╗Іnh dр║Аng.Vui l├▓ng chр╗Ѕ ─Љр╗Іnh thр╗Д c├┤ng.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** Chк░a ─Љк░р╗Бc hр╗Ќ trр╗Б[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255m─љр╗Іnh dр║Аng tр╗Єp kh├┤ng x├Аc ─Љр╗Іnh[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mNр╗Ўi dung sau ** sр║й kh├┤ng ** ─Љк░р╗Бc lк░u v├г [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m kh├┤ng ─Љк░р╗Бc gр╗Їi.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255m─љк░р╗Юng dр║Фn tр╗Єp ─Љ├Гch[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mLр╗Ќi chuyр╗Ѓn ─Љр╗Ћi[0m"##),
    ],
}
}

/// Language ID: vi;
/// Map name: "set";
/// Description: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "─љк░р╗Юng dр║Фn tр╗Єp kh├┤ng hр╗Бp lр╗Є.");
/// ```
pub(super) const fn get_vi_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Nр╗Ўi dung ─Љк░р╗Бc sр╗Гa ─Љр╗Ћi ** sр║й kh├┤ng ─Љк░р╗Бc lк░u ** v├г `--sv` kh├┤ng ─Љк░р╗Бc gр╗Їi."##),
        ("new-value", r##"Gi├А trр╗І mр╗Џi"##),
        ("invalid-path", r##"─љк░р╗Юng dр║Фn tр╗Єp kh├┤ng hр╗Бp lр╗Є."##),
    ],
}
}

/// Language ID: vi;
/// Map name: "set_md";
/// Description: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam;
pub(super) const fn get_vi_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mNр╗Ўi dung ─Љк░р╗Бc sр╗Гa ─Љр╗Ћi ** sр║й kh├┤ng ─Љк░р╗Бc lк░u ** v├г [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m kh├┤ng ─Љк░р╗Бc gр╗Їi.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mGi├А trр╗І mр╗Џi[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255m─љк░р╗Юng dр║Фn tр╗Єp kh├┤ng hр╗Бp lр╗Є.[0m"##),
    ],
}
}

/// Language ID: vi;
/// Map name: "get";
/// Description: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "─љр╗Іnh dр║Аng ─Љ├Гch");
/// ```
pub(super) const fn get_vi_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"─љр╗Іnh dр║Аng ─Љ├Гch"##),
        ("src-fmt", r##"─љр╗Іnh dр║Аng tр╗Єp nguр╗Њn"##),
    ],
}
}

/// vi: Tiр║┐ng Viр╗Єt, Chр╗» La tinh, Viр╗Єt Nam
pub(super) const fn get_vi_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_vi_map_conversion),
        ("get", get_vi_map_get),
        ("set_md", get_vi_map_set_md),
        ("set", get_vi_map_set),
        ("conversion_md", get_vi_map_conversion_md),
    ],
}
}

/// Language ID: xh;
/// Map name: "conversion";
/// Description: IsiXhosa, IsiLatin, EMzantsi Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Ayiphumelelanga ukufumanisa ifomathi.Nceda uchaze ngesandla.");
/// ```
pub(super) const fn get_xh_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"Le binary ** ayibandakanyi umsebenzi wokuguqula yefomathi efanelekileyo.
Kuya kufuneka ukuba wenze into efanelekileyo kwi-`Cargo.toml` kwaye uphinde.
Ukuba le software ayibandakanyi ukusebenza ngokuchanekileyo, nceda ungenise umba."##),
        ("auto-detection-failed", r##"Ayiphumelelanga ukufumanisa ifomathi.Nceda uchaze ngesandla."##),
        ("not-support-deser-sexp", r##"*** ayixhaswanga kodwa **: Ukuguqula ukusuka kwi-Lisp s"##),
        ("dst", r##"indlela yefayile yokufika"##),
        ("unsupported", r##"Ifomathi engacwangciswanga"##),
        ("currently-supported", r##"LOLULEKILE OLEKILEYO FRAATS:"##),
        ("not-saved", r##"Lo mxholo ulandelayo ** awuyi kuba usindiswe kuba `--save` yayingabizwanga."##),
        ("unknown-fmt", r##"Ifomati engaziwayo yefayile"##),
        ("conv-error", r##"Impazamo yokuguqula"##),
    ],
}
}

/// Language ID: xh;
/// Map name: "conversion_md";
/// Description: IsiXhosa, IsiLatin, EMzantsi Afrika;
pub(super) const fn get_xh_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 6),
        (6, 0),
    ],
    entries: &[
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mLe binary ** ayibandakanyi umsebenzi wokuguqula yefomathi efanelekileyo.
[48;2;34;34;34m[38;2;255;255;255mKuya kufuneka ukuba wenze into efanelekileyo kwi-[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m kwaye uphinde.
[48;2;34;34;34m[38;2;255;255;255mUkuba le software ayibandakanyi ukusebenza ngokuchanekileyo, nceda ungenise umba.[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mAyiphumelelanga ukufumanisa ifomathi.Nceda uchaze ngesandla.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m*** ayixhaswanga kodwa [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: Ukuguqula ukusuka kwi-Lisp s[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mindlela yefayile yokufika[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mIfomathi engacwangciswanga[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLOLULEKILE OLEKILEYO FRAATS:[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mLo mxholo ulandelayo ** awuyi kuba usindiswe kuba [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m yayingabizwanga.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mIfomati engaziwayo yefayile[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mImpazamo yokuguqula[0m"##),
    ],
}
}

/// Language ID: xh;
/// Map name: "set";
/// Description: IsiXhosa, IsiLatin, EMzantsi Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "indlela engasebenziyo yefayile.");
/// ```
pub(super) const fn get_xh_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Umxholo oguqulweyo ** awuyi kugcinwa kuba `--sv`"##),
        ("new-value", r##"Ixabiso elitsha"##),
        ("invalid-path", r##"indlela engasebenziyo yefayile."##),
    ],
}
}

/// Language ID: xh;
/// Map name: "set_md";
/// Description: IsiXhosa, IsiLatin, EMzantsi Afrika;
pub(super) const fn get_xh_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mUmxholo oguqulweyo ** awuyi kugcinwa kuba [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mIxabiso elitsha[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mindlela engasebenziyo yefayile.[0m"##),
    ],
}
}

/// Language ID: xh;
/// Map name: "get";
/// Description: IsiXhosa, IsiLatin, EMzantsi Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Ifomathi yendawo oya kuyo");
/// ```
pub(super) const fn get_xh_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Ifomathi yendawo oya kuyo"##),
        ("src-fmt", r##"Ifomati yefayile yomthombo"##),
    ],
}
}

/// xh: IsiXhosa, IsiLatin, EMzantsi Afrika
pub(super) const fn get_xh_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_xh_map_conversion),
        ("get", get_xh_map_get),
        ("set_md", get_xh_map_set_md),
        ("set", get_xh_map_set),
        ("conversion_md", get_xh_map_conversion_md),
    ],
}
}

/// Language ID: yi;
/// Map name: "conversion";
/// Description: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "ОаОЎОў Ољ\u{5b7}ОаОЊОбОеОЕ ОдОЋ ОЊОбОўОљ\u{5b7}ОЎОюОА ОЊОЎ Оц\u{5bf}Ољ\u{5b8}ОеОъОљ\u{5b7}Оў.ОЉОЎОўОб ОАОц\u{5bc}ОбОдОЎОцОЎОдОЎОеОЪ ОъОљ\u{5b7}ОаОЎОЋОљ\u{5b7}ОюОЎ.");
/// ```
pub(super) const fn get_yi_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
        (2, 1),
    ],
    entries: &[
        ("unsupported", r##"ОаОЎОў-ОАОЋОцо╝Оцо╝ОљоИОеОўОбОЊ Оцо┐ОљоИОеОъОљоиОў ОДОљоиОаОЋОЋОбОеОќОЕОљоиОЪ"##),
        ("conv-error", r##"ОДОљоиОаОЋОЋОбОеОќОЕОљоиОЪ ОўОбОЋОф"##),
        ("not-support-deser-sexp", r##"** ОаОЎОў ОњОбОЕОўОЎОдОў ОаОљоИОџ **: ОДОљоиОаОЋОЋОбОеОўОЎОаОњ ОцОЋОЪ `ОюОЎОАОцо╝ ОА-ОљОЋОЎОАОЊОеОЋОД` ОдОЋ` ОљОаОЊОбОеОб ОцОљоИОеОъОљоиОЦ`"##),
        ("invalid-json1.0", r##"ОЊОбОе ОўОбОДОб ОљОЎОќ ОаОЎОЕОў Ољои ОњОЎОюОўОЎОД `json 1.0` Оцо┐ОљоИОеОъОљоиОў, ОўОеОЎОЎОаОњ ОдОЋ Оцо╝ОљоиОеОА ОЋОЋОЎ `json5` ..."##),
        ("unknown-fmt", r##"ОљОЋОъОЉОљоиОДОљоиОаОў ОўОбОДОб Оцо┐ОљоИОеОъОљоиОў"##),
        ("auto-detection-failed", r##"ОаОЎОў ОљоиОаОЊОбОеОЕ ОдОЋ ОЊОбОўОљоиОЎОюОА ОЊОЎ Оцо┐ОљоИОеОъОљоиОў.ОЉОЎОўОб ОАОцо╝ОбОдОЎОцОЎОдОЎОеОЪ ОъОљоиОаОЎОЋОљоиОюОЎ."##),
        ("currently-supported", r##"ОЊОбОеОЋОЋОЎОЎоиОю ОњОбОЕОўОЎОдОў Оцо┐ОљоИОеОъОљоиОўОЎОеОЋОаОњОбОЪ ОеОЕОЎОъОћ:"##),
        ("dst", r##"ОЊОбОАОўОЎОаОЎОЎОЕОљоиОЪ ОўОбОДОб ОЊОеОџ"##),
    ],
}
}

/// Language ID: yi;
/// Map name: "conversion_md";
/// Description: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў;
pub(super) const fn get_yi_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (0, 0),
        (2, 1),
    ],
    entries: &[
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mОаОЎОў-ОАОЋОцо╝Оцо╝ОљоИОеОўОбОЊ Оцо┐ОљоИОеОъОљоиОў ОДОљоиОаОЋОЋОбОеОќОЕОљоиОЪ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mОДОљоиОаОЋОЋОбОеОќОЕОљоиОЪ ОўОбОЋОф[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ОаОЎОў ОњОбОЕОўОЎОдОў ОаОљоИОџ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114m: ОДОљоиОаОЋОЋОбОеОўОЎОаОњ ОцОЋОЪ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mОюОЎОАОцо╝ ОА-ОљОЋОЎОАОЊОеОЋОД[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;249;38;114m ОдОЋ[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m ОљОаОЊОбОеОб ОцОљоИОеОъОљоиОЦ[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mОЊОбОе ОўОбОДОб ОљОЎОќ ОаОЎОЕОў Ољои ОњОЎОюОўОЎОД [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Оцо┐ОљоИОеОъОљоиОў, ОўОеОЎОЎОаОњ ОдОЋ Оцо╝ОљоиОеОА ОЋОЋОЎ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mОљОЋОъОЉОљоиОДОљоиОаОў ОўОбОДОб Оцо┐ОљоИОеОъОљоиОў[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mОаОЎОў ОљоиОаОЊОбОеОЕ ОдОЋ ОЊОбОўОљоиОЎОюОА ОЊОЎ Оцо┐ОљоИОеОъОљоиОў.ОЉОЎОўОб ОАОцо╝ОбОдОЎОцОЎОдОЎОеОЪ ОъОљоиОаОЎОЋОљоиОюОЎ.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mОЊОбОеОЋОЋОЎОЎоиОю ОњОбОЕОўОЎОдОў Оцо┐ОљоИОеОъОљоиОўОЎОеОЋОаОњОбОЪ ОеОЕОЎОъОћ:[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mОЊОбОАОўОЎОаОЎОЎОЕОљоиОЪ ОўОбОДОб ОЊОеОџ[0m"##),
    ],
}
}

/// Language ID: yi;
/// Map name: "set";
/// Description: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ОцОљ\u{5b7}ОеОДОеОЎОц\u{5bc}ОюОў ОўОбОДОб ОЊОеОџ.");
/// ```
pub(super) const fn get_yi_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"ОЊОЎ ОъОљоиОЊОљоиОцОЎОЎОЊ ОљОЎОаОћОљоиОюОў ** ОЋОЋОбОў ОаОЎОў ** ОќОЎОЎОЪ ОњОбОеОљОўОбОЋОЋОбОў ОЋОЋОЎОЎоиОю `- - ОА 'ОљОЎОќ ОаОЎОЕОў ОњОбОеОЋОцОЪ."##),
        ("new-value", r##"ОаОЎОЋ ОЋОЋОбОеОў"##),
        ("invalid-path", r##"ОцОљоиОеОДОеОЎОцо╝ОюОў ОўОбОДОб ОЊОеОџ."##),
    ],
}
}

/// Language ID: yi;
/// Map name: "set_md";
/// Description: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў;
pub(super) const fn get_yi_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mОЊОЎ ОъОљоиОЊОљоиОцОЎОЎОЊ ОљОЎОаОћОљоиОюОў ** ОЋОЋОбОў ОаОЎОў ** ОќОЎОЎОЪ ОњОбОеОљОўОбОЋОЋОбОў ОЋОЋОЎОЎоиОю [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m- - ОА 'ОљОЎОќ ОаОЎОЕОў ОњОбОеОЋОцОЪ.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mОаОЎОЋ ОЋОЋОбОеОў[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mОцОљоиОеОДОеОЎОцо╝ОюОў ОўОбОДОб ОЊОеОџ.[0m"##),
    ],
}
}

/// Language ID: yi;
/// Map name: "get";
/// Description: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "ОЊОбОАОўОЎОаОЎОЎОЕОљ\u{5b7}ОЪ Оц\u{5bf}Ољ\u{5b8}ОеОъОљ\u{5b7}Оў");
/// ```
pub(super) const fn get_yi_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"ОЊОбОАОўОЎОаОЎОЎОЕОљоиОЪ Оцо┐ОљоИОеОъОљоиОў"##),
        ("src-fmt", r##"ОъОДОЋОе ОўОбОДОб Оцо┐ОљоИОеОъОљоиОў"##),
    ],
}
}

/// yi: ОЎОЎо┤ОЊОЎОЕ, ОћОбОЉОеОбОЎОЕ, ОЋОЋОбОюОў
pub(super) const fn get_yi_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_yi_map_conversion),
        ("get", get_yi_map_get),
        ("set_md", get_yi_map_set_md),
        ("set", get_yi_map_set),
        ("conversion_md", get_yi_map_conversion_md),
    ],
}
}

/// Language ID: yo;
/// Map name: "conversion";
/// Description: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Kuna lati wa taara р╗Їna kika.Jр╗Їwр╗Ї р╣Бalaye pр║╣lu р╗Їwр╗Ї.");
/// ```
pub(super) const fn get_yo_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"Awр╗Їn akoonu atр║╣le kii yoo ni igbala nitori `--save` ko pe."##),
        ("unknown-fmt", r##"р╗їna kika faili aimр╗Ї"##),
        ("currently-supported", r##"Lр╗Їwр╗Їlр╗Їwр╗Ї awр╗Їn р╗Їna kika р╗Їna kika lр╗Їwр╗Їlр╗Їwр╗Ї:"##),
        ("auto-detection-failed", r##"Kuna lati wa taara р╗Їna kika.Jр╗Їwр╗Ї р╣Бalaye pр║╣lu р╗Їwр╗Ї."##),
        ("not-included", r##"Alakomeji ** ko pр║╣lu ** Awр╗Їn iр╣Бр║╣ iyipada fun р╗Їna kika to wulo.
O nilo lati р╣Бiр╣Бр║╣ р║╣ya ti o yр║╣ ni rр║╣ `Cargo.toml` ati commpile.
Ti sр╗Їfitiwia yii ko pр║╣lu iр╣Бр║╣ ti o baamu, jр╗Їwр╗Ї gbe oro kan."##),
        ("conv-error", r##"Aр╣Бiр╣Бe iyipada"##),
        ("dst", r##"р╗їna faili ibina"##),
        ("unsupported", r##"Iyipada р╗Їna kika ti ko ni iр╣Бiro"##),
        ("invalid-json1.0", r##"Faili naa ko si ni р╗Їna kika `json 1.0` to wulo, o ngbiyanju lati tutumр╗Ї si `json5`..."##),
    ],
}
}

/// Language ID: yo;
/// Map name: "conversion_md";
/// Description: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а;
pub(super) const fn get_yo_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (6, 0),
        (1, 0),
    ],
    entries: &[
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mAwр╗Їn akoonu atр║╣le kii yoo ni igbala nitori [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ko pe.[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mр╗їna kika faili aimр╗Ї[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mLр╗Їwр╗Їlр╗Їwр╗Ї awр╗Їn р╗Їna kika р╗Їna kika lр╗Їwр╗Їlр╗Їwр╗Ї:[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mKuna lati wa taara р╗Їna kika.Jр╗Їwр╗Ї р╣Бalaye pр║╣lu р╗Їwр╗Ї.[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mAlakomeji ** ko pр║╣lu ** Awр╗Їn iр╣Бр║╣ iyipada fun р╗Їna kika to wulo.
[48;2;34;34;34m[38;2;255;255;255mO nilo lati р╣Бiр╣Бр║╣ р║╣ya ti o yр║╣ ni rр║╣ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ati commpile.
[48;2;34;34;34m[38;2;255;255;255mTi sр╗Їfitiwia yii ko pр║╣lu iр╣Бр║╣ ti o baamu, jр╗Їwр╗Ї gbe oro kan.[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mAр╣Бiр╣Бe iyipada[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mр╗їna faili ibina[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mIyipada р╗Їna kika ti ko ni iр╣Бiro[0m"##),
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mFaili naa ko si ni р╗Їna kika [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m to wulo, o ngbiyanju lati tutumр╗Ї si [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
    ],
}
}

/// Language ID: yo;
/// Map name: "set";
/// Description: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "р╗їna faili ti ko wulo.");
/// ```
pub(super) const fn get_yo_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Akoonu ti a tunр╣Бe ** kii yoo ni igbala nitori `sv` a ko pe."##),
        ("new-value", r##"Iye tuntun"##),
        ("invalid-path", r##"р╗їna faili ti ko wulo."##),
    ],
}
}

/// Language ID: yo;
/// Map name: "set_md";
/// Description: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а;
pub(super) const fn get_yo_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mAkoonu ti a tunр╣Бe ** kii yoo ni igbala nitori [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255msv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m a ko pe.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mIye tuntun[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mр╗їna faili ti ko wulo.[0m"##),
    ],
}
}

/// Language ID: yo;
/// Map name: "get";
/// Description: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "р╗їna kika");
/// ```
pub(super) const fn get_yo_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"р╗їna kika"##),
        ("src-fmt", r##"р╗їna kika orisun"##),
    ],
}
}

/// yo: ├ѕd├е Yor├╣b├А, ├ѕd├е L├Аt├гn, N├а├гj├Гr├Г├а
pub(super) const fn get_yo_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_yo_map_conversion),
        ("get", get_yo_map_get),
        ("set_md", get_yo_map_set_md),
        ("set", get_yo_map_set),
        ("conversion_md", get_yo_map_conversion_md),
    ],
}
}

/// Language ID: zh;
/// Map name: "conversion";
/// Description: у«ђСйЊСИГТќЄ, СИГтЏй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "УЄфтіеТБђТхІТа╝т╝Јтц▒У┤Ц№╝їУ»иТЅІтіеТїЄт«џсђѓ");
/// ```
pub(super) const fn get_zh_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"У»ЦТќЄС╗ХСИЇТў»ТюЅТЋѕуџё `json 1.0` Та╝т╝Ј, ТГБтюет░ЮУ»ЋУДБТъљСИ║ `json5`..."##),
        ("not-included", r##"ТГцС║їУ┐ЏтѕХТќЄС╗Х **СИЇтїЁтљФ** уЏИтЁ│Та╝т╝ЈуџёУйгТЇбтіЪУЃйсђѓ
ТѓежюђУдЂтюе `Cargo.toml` жЄїтљ»ућеуЏИтЁ│уџётіЪУЃй№╝їт╣ХжЄЇТќ░у╝ќУ»Љсђѓ
тдѓТъюТГцУй»С╗ХСИЇтїЁтљФуЏИтЁ│тіЪУЃй№╝їУ»иТЈљС║ц issueсђѓ"##),
        ("currently-supported", r##"тйЊтЅЇТћ»ТїЂуџёТа╝т╝ЈтѕЌУАе"##),
        ("unsupported", r##"СИЇТћ»ТїЂуџёТа╝т╝ЈУйгТЇб"##),
        ("auto-detection-failed", r##"УЄфтіеТБђТхІТа╝т╝Јтц▒У┤Ц№╝їУ»иТЅІтіеТїЄт«џсђѓ"##),
        ("not-support-deser-sexp", r##"**ТџѓСИЇТћ»ТїЂ** т░є `Lisp S-Expression` УйгТЇбСИ║ `тЁХС╗ќТа╝т╝Ј`"##),
        ("unknown-fmt", r##"ТюфуЪЦуџёТќЄС╗ХТа╝т╝Ј"##),
        ("not-saved", r##"ућ▒С║јТюфУ░Ѓуће `--save`, ТЋЁС╗ЦСИІтєЁт«╣ **СИЇС╝џ** УбФС┐ЮтГўсђѓ"##),
        ("dst", r##"уЏ«ТаЄТќЄС╗ХУи»тЙё"##),
        ("conv-error", r##"УйгТЇбжћЎУ»»"##),
    ],
}
}

/// Language ID: zh;
/// Map name: "conversion_md";
/// Description: у«ђСйЊСИГТќЄ, СИГтЏй;
pub(super) const fn get_zh_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mУ»ЦТќЄС╗ХСИЇТў»ТюЅТЋѕуџё [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Та╝т╝Ј, ТГБтюет░ЮУ»ЋУДБТъљСИ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mТГцС║їУ┐ЏтѕХТќЄС╗Х [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇтїЁтљФ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m уЏИтЁ│Та╝т╝ЈуџёУйгТЇбтіЪУЃйсђѓ
[48;2;34;34;34m[38;2;255;255;255mТѓежюђУдЂтюе [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m жЄїтљ»ућеуЏИтЁ│уџётіЪУЃй№╝їт╣ХжЄЇТќ░у╝ќУ»Љсђѓ
[48;2;34;34;34m[38;2;255;255;255mтдѓТъюТГцУй»С╗ХСИЇтїЁтљФуЏИтЁ│тіЪУЃй№╝їУ»иТЈљС║ц issueсђѓ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mтйЊтЅЇТћ»ТїЂуџёТа╝т╝ЈтѕЌУАе[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mСИЇТћ»ТїЂуџёТа╝т╝ЈУйгТЇб[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mУЄфтіеТБђТхІТа╝т╝Јтц▒У┤Ц№╝їУ»иТЅІтіеТїЄт«џсђѓ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mТџѓСИЇТћ»ТїЂ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m т░є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m УйгТЇбСИ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mтЁХС╗ќТа╝т╝Ј[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mТюфуЪЦуџёТќЄС╗ХТа╝т╝Ј[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒С║јТюфУ░Ѓуће [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁС╗ЦСИІтєЁт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇС╝џ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФС┐ЮтГўсђѓ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mуЏ«ТаЄТќЄС╗ХУи»тЙё[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mУйгТЇбжћЎУ»»[0m"##),
    ],
}
}

/// Language ID: zh;
/// Map name: "get";
/// Description: у«ђСйЊСИГТќЄ, СИГтЏй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "уЏ«ТаЄТа╝т╝Ј");
/// ```
pub(super) const fn get_zh_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"уЏ«ТаЄТа╝т╝Ј"##),
        ("src-fmt", r##"Т║љТќЄС╗ХТа╝т╝Ј"##),
    ],
}
}

/// Language ID: zh;
/// Map name: "set";
/// Description: у«ђСйЊСИГТќЄ, СИГтЏй;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "ТЌаТЋѕуџёТќЄС╗ХУи»тЙё");
/// ```
pub(super) const fn get_zh_map_set() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (4, 0),
    ],
    entries: &[
        ("value", r##"тђ╝(value)"##),
        ("type", r##"у▒╗тъІ"##),
        ("unsave-warn", r##"ућ▒С║јТюфУ░Ѓуће `--save`, ТЋЁти▓С┐«Тћ╣уџётєЁт«╣ **СИЇС╝џ** УбФС┐ЮтГўсђѓ"##),
        ("invalid-path", r##"ТЌаТЋѕуџёТќЄС╗ХУи»тЙё"##),
        ("new-value", r##"Тќ░тђ╝(value)"##),
    ],
}
}

/// Language ID: zh;
/// Map name: "set_md";
/// Description: у«ђСйЊСИГТќЄ, СИГтЏй;
pub(super) const fn get_zh_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (4, 0),
    ],
    entries: &[
        ("value", r##"[48;2;34;34;34m[38;2;255;255;255mтђ╝(value)[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mу▒╗тъІ[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒С║јТюфУ░Ѓуће [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁти▓С┐«Тћ╣уџётєЁт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇС╝џ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФС┐ЮтГўсђѓ[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mТЌаТЋѕуџёТќЄС╗ХУи»тЙё[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mТќ░тђ╝(value)[0m"##),
    ],
}
}

/// zh: у«ђСйЊСИГТќЄ, СИГтЏй
pub(super) const fn get_zh_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_zh_map_conversion),
        ("get", get_zh_map_get),
        ("set_md", get_zh_map_set_md),
        ("set", get_zh_map_set),
        ("conversion_md", get_zh_map_conversion_md),
    ],
}
}

/// Language ID: zh-Hant;
/// Map name: "conversion";
/// Description: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "УЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ");
/// ```
pub(super) const fn get_zh_hant_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"УЕ▓ТфћТАѕСИЇТў»ТюЅТЋѕуџё `json 1.0` Та╝т╝Ј, ТГБтюетўЌУЕдУДБТъљуѓ║ `json5`..."##),
        ("not-included", r##"ТГцС║їжђ▓СйЇтѕХТфћТАѕ **СИЇтїЁтљФ** уЏИжЌюТа╝т╝ЈуџёУйЅТЈЏтіЪУЃйсђѓ
ТѓежюђУдЂтюе `Cargo.toml` УБАтЋЪућеуЏИжЌюуџётіЪУЃй№╝їСИджЄЇТќ░уиеУГ»сђѓ
тдѓТъюТГцУ╗ЪжФћСИЇтїЁтљФуЏИжЌютіЪУЃй№╝їУФІТЈљС║ц issueсђѓ"##),
        ("currently-supported", r##"уЋХтЅЇТћ»ТЈ┤уџёТа╝т╝ЈтѕЌУАе"##),
        ("unsupported", r##"СИЇТћ»ТЈ┤уџёТа╝т╝ЈУйЅТЈЏ"##),
        ("auto-detection-failed", r##"УЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ"##),
        ("not-support-deser-sexp", r##"**ТџФСИЇТћ»ТЈ┤** т░Є `Lisp S-Expression` УйЅТЈЏуѓ║ `тЁХС╗ќТа╝т╝Ј`"##),
        ("unknown-fmt", r##"ТюфуЪЦуџёТфћТАѕТа╝т╝Ј"##),
        ("not-saved", r##"ућ▒Тќ╝ТюфтЉ╝тЈФ `--save`, ТЋЁС╗ЦСИІтЁДт«╣ **СИЇТюЃ** УбФтё▓тГўсђѓ"##),
        ("dst", r##"уЏ«ТеЎТфћТАѕУи»тЙЉ"##),
        ("conv-error", r##"УйЅТЈЏжї»Уфц"##),
    ],
}
}

/// Language ID: zh-Hant;
/// Map name: "conversion_md";
/// Description: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ;
pub(super) const fn get_zh_hant_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mУЕ▓ТфћТАѕСИЇТў»ТюЅТЋѕуџё [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Та╝т╝Ј, ТГБтюетўЌУЕдУДБТъљуѓ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mТГцС║їжђ▓СйЇтѕХТфћТАѕ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇтїЁтљФ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m уЏИжЌюТа╝т╝ЈуџёУйЅТЈЏтіЪУЃйсђѓ
[48;2;34;34;34m[38;2;255;255;255mТѓежюђУдЂтюе [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m УБАтЋЪућеуЏИжЌюуџётіЪУЃй№╝їСИджЄЇТќ░уиеУГ»сђѓ
[48;2;34;34;34m[38;2;255;255;255mтдѓТъюТГцУ╗ЪжФћСИЇтїЁтљФуЏИжЌютіЪУЃй№╝їУФІТЈљС║ц issueсђѓ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mуЋХтЅЇТћ»ТЈ┤уџёТа╝т╝ЈтѕЌУАе[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mСИЇТћ»ТЈ┤уџёТа╝т╝ЈУйЅТЈЏ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mУЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mТџФСИЇТћ»ТЈ┤[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m т░Є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m УйЅТЈЏуѓ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mтЁХС╗ќТа╝т╝Ј[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mТюфуЪЦуџёТфћТАѕТа╝т╝Ј[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒Тќ╝ТюфтЉ╝тЈФ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁС╗ЦСИІтЁДт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇТюЃ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФтё▓тГўсђѓ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mуЏ«ТеЎТфћТАѕУи»тЙЉ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mУйЅТЈЏжї»Уфц[0m"##),
    ],
}
}

/// Language ID: zh-Hant;
/// Map name: "get";
/// Description: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "уЏ«ТеЎТа╝т╝Ј");
/// ```
pub(super) const fn get_zh_hant_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"уЏ«ТеЎТа╝т╝Ј"##),
        ("src-fmt", r##"тјЪтДІТфћТа╝т╝Ј"##),
    ],
}
}

/// Language ID: zh-Hant;
/// Map name: "set";
/// Description: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "уёАТЋѕуџёТфћТАѕУи»тЙЉ");
/// ```
pub(super) const fn get_zh_hant_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"уёАТЋѕуџёТфћТАѕУи»тЙЉ"##),
        ("new-value", r##"Тќ░тђ╝(value)"##),
        ("unsave-warn", r##"ућ▒Тќ╝ТюфтЉ╝тЈФ `--save`, ТЋЁти▓С┐«Тћ╣уџётЁДт«╣ **СИЇТюЃ** УбФтё▓тГўсђѓ"##),
        ("type", r##"тъІтѕЦ"##),
    ],
}
}

/// Language ID: zh-Hant;
/// Map name: "set_md";
/// Description: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ;
pub(super) const fn get_zh_hant_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mуёАТЋѕуџёТфћТАѕУи»тЙЉ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mТќ░тђ╝(value)[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒Тќ╝ТюфтЉ╝тЈФ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁти▓С┐«Тћ╣уџётЁДт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇТюЃ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФтё▓тГўсђѓ[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mтъІтѕЦ[0m"##),
    ],
}
}

/// zh-Hant: ТГБжФћСИГТќЄ, СИГтюІтЈ░уЂБ
pub(super) const fn get_zh_hant_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_zh_hant_map_conversion),
        ("get", get_zh_hant_map_get),
        ("set_md", get_zh_hant_map_set_md),
        ("set", get_zh_hant_map_set),
        ("conversion_md", get_zh_hant_map_conversion_md),
    ],
}
}

/// Language ID: zh-Hant-HK;
/// Map name: "conversion";
/// Description: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "УЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ");
/// ```
pub(super) const fn get_zh_hant_hk_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"УЕ▓ТќЄС╗ХСИЇТў»ТюЅТЋѕуџё `json 1.0` Та╝т╝Ј, ТГБтюетўЌУЕдУДБТъљуѓ║ `json5`..."##),
        ("not-included", r##"ТГцС║їжђ▓тѕХТќЄС╗Х **СИЇтїЁтљФ** уЏИжЌюТа╝т╝ЈуџёУйЅТЈЏтіЪУЃйсђѓ
ТѓежюђУдЂтюе `Cargo.toml` УБЈтЋЊућеуЏИжЌюуџётіЪУЃй№╝їСИджЄЇТќ░уиеУГ»сђѓ
тдѓТъюТГцУ╗ЪС╗ХСИЇтїЁтљФуЏИжЌютіЪУЃй№╝їУФІТЈљС║ц issueсђѓ"##),
        ("currently-supported", r##"уЋХтЅЇТћ»ТїЂуџёТа╝т╝ЈтѕЌУАе"##),
        ("unsupported", r##"СИЇТћ»ТїЂуџёТа╝т╝ЈУйЅТЈЏ"##),
        ("auto-detection-failed", r##"УЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ"##),
        ("not-support-deser-sexp", r##"**ТџФСИЇТћ»ТїЂ** т░Є `Lisp S-Expression` УйЅТЈЏуѓ║ `тЁХС╗ќТа╝т╝Ј`"##),
        ("unknown-fmt", r##"ТюфуЪЦуџёТќЄС╗ХТа╝т╝Ј"##),
        ("not-saved", r##"ућ▒Тќ╝ТюфУф┐уће `--save`, ТЋЁС╗ЦСИІтЁДт«╣ **СИЇТюЃ** УбФС┐ЮтГўсђѓ"##),
        ("dst", r##"уЏ«ТеЎТќЄС╗ХУи»тЙЉ"##),
        ("conv-error", r##"УйЅТЈЏжї»Уфц"##),
    ],
}
}

/// Language ID: zh-Hant-HK;
/// Map name: "conversion_md";
/// Description: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»;
pub(super) const fn get_zh_hant_hk_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mУЕ▓ТќЄС╗ХСИЇТў»ТюЅТЋѕуџё [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m Та╝т╝Ј, ТГБтюетўЌУЕдУДБТъљуѓ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mТГцС║їжђ▓тѕХТќЄС╗Х [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇтїЁтљФ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m уЏИжЌюТа╝т╝ЈуџёУйЅТЈЏтіЪУЃйсђѓ
[48;2;34;34;34m[38;2;255;255;255mТѓежюђУдЂтюе [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m УБЈтЋЊућеуЏИжЌюуџётіЪУЃй№╝їСИджЄЇТќ░уиеУГ»сђѓ
[48;2;34;34;34m[38;2;255;255;255mтдѓТъюТГцУ╗ЪС╗ХСИЇтїЁтљФуЏИжЌютіЪУЃй№╝їУФІТЈљС║ц issueсђѓ[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mуЋХтЅЇТћ»ТїЂуџёТа╝т╝ЈтѕЌУАе[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mСИЇТћ»ТїЂуџёТа╝т╝ЈУйЅТЈЏ[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mУЄфтІЋТфбТИгТа╝т╝Јтц▒ТЋЌ№╝їУФІТЅІтІЋТїЄт«џсђѓ[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mТџФСИЇТћ»ТїЂ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m т░Є [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mLisp S-Expression[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m УйЅТЈЏуѓ║ [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mтЁХС╗ќТа╝т╝Ј[48;2;34;34;34m[38;2;0;255;255m`[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mТюфуЪЦуџёТќЄС╗ХТа╝т╝Ј[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒Тќ╝ТюфУф┐уће [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁС╗ЦСИІтЁДт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇТюЃ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФС┐ЮтГўсђѓ[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mуЏ«ТеЎТќЄС╗ХУи»тЙЉ[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mУйЅТЈЏжї»Уфц[0m"##),
    ],
}
}

/// Language ID: zh-Hant-HK;
/// Map name: "get";
/// Description: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "уЏ«ТеЎТа╝т╝Ј");
/// ```
pub(super) const fn get_zh_hant_hk_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"уЏ«ТеЎТа╝т╝Ј"##),
        ("src-fmt", r##"Т║љТќЄС╗ХТа╝т╝Ј"##),
    ],
}
}

/// Language ID: zh-Hant-HK;
/// Map name: "set";
/// Description: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "уёАТЋѕуџёТќЄС╗ХУи»тЙЉ");
/// ```
pub(super) const fn get_zh_hant_hk_map_set() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"уёАТЋѕуџёТќЄС╗ХУи»тЙЉ"##),
        ("new-value", r##"Тќ░тђ╝(value)"##),
        ("unsave-warn", r##"ућ▒Тќ╝ТюфУф┐уће `--save`, ТЋЁти▓С┐«Тћ╣уџётЁДт«╣ **СИЇТюЃ** УбФС┐ЮтГўсђѓ"##),
        ("type", r##"жАътъІ"##),
    ],
}
}

/// Language ID: zh-Hant-HK;
/// Map name: "set_md";
/// Description: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»;
pub(super) const fn get_zh_hant_hk_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 14108922650502679131,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mуёАТЋѕуџёТќЄС╗ХУи»тЙЉ[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mТќ░тђ╝(value)[0m"##),
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mућ▒Тќ╝ТюфУф┐уће [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, ТЋЁти▓С┐«Тћ╣уџётЁДт«╣ [48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;249;38;114mСИЇТюЃ[48;2;34;34;34m[38;2;249;38;114m**[48;2;34;34;34m[38;2;255;255;255m УбФС┐ЮтГўсђѓ[0m"##),
        ("type", r##"[48;2;34;34;34m[38;2;255;255;255mжАътъІ[0m"##),
    ],
}
}

/// zh-Hant-HK: у╣ЂжФћСИГТќЄ, СИГтюІждЎТИ»
pub(super) const fn get_zh_hant_hk_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_zh_hant_hk_map_conversion),
        ("get", get_zh_hant_hk_map_get),
        ("set_md", get_zh_hant_hk_map_set_md),
        ("set", get_zh_hant_hk_map_set),
        ("conversion_md", get_zh_hant_hk_map_conversion_md),
    ],
}
}

/// Language ID: zu;
/// Map name: "conversion";
/// Description: isiZulu, isi-Latin, iNingizimu Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("conversion", "auto-detection-failed");
///
/// assert_eq!(msg, "Yehlulekile ukuthola ngokuzenzakalelayo ifomethi.Sicela usho ngesandla.");
/// ```
pub(super) const fn get_zu_map_conversion() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"Ifayela alilona ifomethi evumelekile `JSON 1.0`, izama ukunxusa njengoba `json5` ..."##),
        ("not-included", r##"Le kanambambili ** ayifaki ** Ukuguqulwa kokusebenza kwefomethi efanele.
Udinga ukunika amandla isici esifanelekile ku-`Cargo.toml`.Tom` kanye ne-Relompyile.
Uma le software ingafaki ukusebenza okuhambisanayo, sicela uthumele inkinga."##),
        ("currently-supported", r##"Amafomethi asekelwe njengamanje Uhlu:"##),
        ("unsupported", r##"Ukuguqulwa kwenkundla okungasekelwa"##),
        ("auto-detection-failed", r##"Yehlulekile ukuthola ngokuzenzakalelayo ifomethi.Sicela usho ngesandla."##),
        ("not-support-deser-sexp", r##"** ** AKUFUNIWE okwamanje"##),
        ("unknown-fmt", r##"Angaziwa Ifayela"##),
        ("not-saved", r##"Okuqukethwe okulandelayo ** ngeke kugcinwe ** kugcinwe ngoba `--save` akuzange kufonele."##),
        ("dst", r##"Indlela yefayela lendawo"##),
        ("conv-error", r##"Iphutha lokuguqulwa"##),
    ],
}
}

/// Language ID: zu;
/// Map name: "conversion_md";
/// Description: isiZulu, isi-Latin, iNingizimu Afrika;
pub(super) const fn get_zu_map_conversion_md() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
        (6, 0),
    ],
    entries: &[
        ("invalid-json1.0", r##"[48;2;34;34;34m[38;2;255;255;255mIfayela alilona ifomethi evumelekile [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mJSON 1.0[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m, izama ukunxusa njengoba [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mjson5[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m ...[0m"##),
        ("not-included", r##"[48;2;34;34;34m[38;2;255;255;255mLe kanambambili ** ayifaki ** Ukuguqulwa kokusebenza kwefomethi efanele.
[48;2;34;34;34m[38;2;255;255;255mUdinga ukunika amandla isici esifanelekile ku-[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255mCargo.toml[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m.Tom[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m kanye ne-Relompyile.
[48;2;34;34;34m[38;2;0;255;255mUma le software ingafaki ukusebenza okuhambisanayo, sicela uthumele inkinga.[0m"##),
        ("currently-supported", r##"[48;2;34;34;34m[38;2;255;255;255mAmafomethi asekelwe njengamanje Uhlu:[0m"##),
        ("unsupported", r##"[48;2;34;34;34m[38;2;255;255;255mUkuguqulwa kwenkundla okungasekelwa[0m"##),
        ("auto-detection-failed", r##"[48;2;34;34;34m[38;2;255;255;255mYehlulekile ukuthola ngokuzenzakalelayo ifomethi.Sicela usho ngesandla.[0m"##),
        ("not-support-deser-sexp", r##"[48;2;34;34;34m[38;2;255;255;255m** ** AKUFUNIWE okwamanje[0m"##),
        ("unknown-fmt", r##"[48;2;34;34;34m[38;2;255;255;255mAngaziwa Ifayela[0m"##),
        ("not-saved", r##"[48;2;34;34;34m[38;2;255;255;255mOkuqukethwe okulandelayo ** ngeke kugcinwe ** kugcinwe ngoba [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--save[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m akuzange kufonele.[0m"##),
        ("dst", r##"[48;2;34;34;34m[38;2;255;255;255mIndlela yefayela lendawo[0m"##),
        ("conv-error", r##"[48;2;34;34;34m[38;2;255;255;255mIphutha lokuguqulwa[0m"##),
    ],
}
}

/// Language ID: zu;
/// Map name: "set";
/// Description: isiZulu, isi-Latin, iNingizimu Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("set", "invalid-path");
///
/// assert_eq!(msg, "Indlela yefayela elingavumelekile.");
/// ```
pub(super) const fn get_zu_map_set() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"Okuqukethwe okulungisiwe ** ngeke kugcinwe ** kugcinwe ngoba `--sv` akubizwanga."##),
        ("new-value", r##"Inani elisha"##),
        ("invalid-path", r##"Indlela yefayela elingavumelekile."##),
    ],
}
}

/// Language ID: zu;
/// Map name: "set_md";
/// Description: isiZulu, isi-Latin, iNingizimu Afrika;
pub(super) const fn get_zu_map_set_md() -> L10nMap {
    ::phf::Map {
    key: 12913932095322966823,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("unsave-warn", r##"[48;2;34;34;34m[38;2;255;255;255mOkuqukethwe okulungisiwe ** ngeke kugcinwe ** kugcinwe ngoba [48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;0;255;255m--sv[48;2;34;34;34m[38;2;0;255;255m`[48;2;34;34;34m[38;2;255;255;255m akubizwanga.[0m"##),
        ("new-value", r##"[48;2;34;34;34m[38;2;255;255;255mInani elisha[0m"##),
        ("invalid-path", r##"[48;2;34;34;34m[38;2;255;255;255mIndlela yefayela elingavumelekile.[0m"##),
    ],
}
}

/// Language ID: zu;
/// Map name: "get";
/// Description: isiZulu, isi-Latin, iNingizimu Afrika;
///
/// # Example
///
/// ```no_run
/// let msg = loader.get_or_default("get", "dst-fmt");
///
/// assert_eq!(msg, "Ifomethi Yendawo");
/// ```
pub(super) const fn get_zu_map_get() -> L10nMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (1, 0),
    ],
    entries: &[
        ("dst-fmt", r##"Ifomethi Yendawo"##),
        ("src-fmt", r##"Ifomethi yefayela lomthombo"##),
    ],
}
}

/// zu: isiZulu, isi-Latin, iNingizimu Afrika
pub(super) const fn get_zu_map() -> SubLocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (2, 0),
    ],
    entries: &[
        ("conversion", get_zu_map_conversion),
        ("get", get_zu_map_get),
        ("set_md", get_zu_map_set_md),
        ("set", get_zu_map_set),
        ("conversion_md", get_zu_map_conversion_md),
    ],
}
}

/// # Example
///
/// ```no_run
/// let map = locale_map();
///
/// for k in map.keys() {
///     println!("{k}")
/// }
///
/// map.get("en").map(|v| dbg!(v()));
/// ```
pub(super) const fn locale_map() -> LocaleMap {
    ::phf::Map {
    key: 15467950696543387533,
    disps: &[
        (0, 1),
        (13, 20),
        (0, 4),
        (0, 75),
        (0, 30),
        (0, 13),
        (0, 10),
        (1, 9),
        (0, 80),
        (6, 8),
        (0, 22),
        (0, 0),
        (5, 55),
        (1, 39),
        (3, 105),
        (2, 7),
        (1, 1),
        (0, 1),
        (19, 66),
        (0, 104),
        (0, 5),
        (1, 62),
    ],
    entries: &[
        ("lo", get_lo_map),
        ("ml", get_ml_map),
        ("ne", get_ne_map),
        ("ht", get_ht_map),
        ("sm", get_sm_map),
        ("sl", get_sl_map),
        ("en", get_en_map),
        ("ro", get_ro_map),
        ("yi", get_yi_map),
        ("et", get_et_map),
        ("mg", get_mg_map),
        ("la", get_la_map),
        ("no", get_no_map),
        ("ur", get_ur_map),
        ("hr", get_hr_map),
        ("vi", get_vi_map),
        ("ku", get_ku_map),
        ("ru", get_ru_map),
        ("haw", get_haw_map),
        ("de", get_de_map),
        ("sv", get_sv_map),
        ("he", get_he_map),
        ("yo", get_yo_map),
        ("st", get_st_map),
        ("mt", get_mt_map),
        ("th", get_th_map),
        ("tr", get_tr_map),
        ("cs", get_cs_map),
        ("so", get_so_map),
        ("ta", get_ta_map),
        ("uk", get_uk_map),
        ("ar", get_ar_map),
        ("ko", get_ko_map),
        ("sn", get_sn_map),
        ("ug", get_ug_map),
        ("sr", get_sr_map),
        ("jw", get_jw_map),
        ("te", get_te_map),
        ("ig", get_ig_map),
        ("gl", get_gl_map),
        ("bg", get_bg_map),
        ("ceb", get_ceb_map),
        ("co", get_co_map),
        ("ny", get_ny_map),
        ("hu", get_hu_map),
        ("zu", get_zu_map),
        ("eu", get_eu_map),
        ("zh", get_zh_map),
        ("km", get_km_map),
        ("gu", get_gu_map),
        ("fil", get_fil_map),
        ("sk", get_sk_map),
        ("sd", get_sd_map),
        ("ga", get_ga_map),
        ("af", get_af_map),
        ("lb", get_lb_map),
        ("ha", get_ha_map),
        ("fa", get_fa_map),
        ("ps", get_ps_map),
        ("ky", get_ky_map),
        ("fi", get_fi_map),
        ("hy", get_hy_map),
        ("fy", get_fy_map),
        ("mk", get_mk_map),
        ("ms", get_ms_map),
        ("nl", get_nl_map),
        ("da", get_da_map),
        ("es", get_es_map),
        ("sq", get_sq_map),
        ("my", get_my_map),
        ("kk", get_kk_map),
        ("be", get_be_map),
        ("kn", get_kn_map),
        ("tg", get_tg_map),
        ("xh", get_xh_map),
        ("uz", get_uz_map),
        ("si", get_si_map),
        ("bs", get_bs_map),
        ("bn", get_bn_map),
        ("mi", get_mi_map),
        ("pl", get_pl_map),
        ("mn", get_mn_map),
        ("ka", get_ka_map),
        ("is", get_is_map),
        ("zh-Hant", get_zh_hant_map),
        ("ja", get_ja_map),
        ("lv", get_lv_map),
        ("pa", get_pa_map),
        ("ca", get_ca_map),
        ("gd", get_gd_map),
        ("cy", get_cy_map),
        ("hi", get_hi_map),
        ("id", get_id_map),
        ("eo", get_eo_map),
        ("su", get_su_map),
        ("lt", get_lt_map),
        ("am", get_am_map),
        ("az", get_az_map),
        ("zh-Hant-HK", get_zh_hant_hk_map),
        ("fr", get_fr_map),
        ("el", get_el_map),
        ("sw", get_sw_map),
        ("pt", get_pt_map),
        ("it", get_it_map),
        ("or", get_or_map),
        ("mr", get_mr_map),
    ],
}
}

/// # Example
///
/// ```no_run
/// let loader = glossa::MapLoader::new(locale_hashmap());
///
/// dbg!(&loader);
/// ```
pub(super) fn locale_hashmap() -> LocaleHashMap {
    use lang_id_consts::*;

    HashMap::from_iter([
        (unsafe { get_af() }, get_af_map()),
        (unsafe { get_am() }, get_am_map()),
        (unsafe { get_ar() }, get_ar_map()),
        (unsafe { get_az() }, get_az_map()),
        (unsafe { get_be() }, get_be_map()),
        (unsafe { get_bg() }, get_bg_map()),
        (unsafe { get_bn() }, get_bn_map()),
        (unsafe { get_bs() }, get_bs_map()),
        (unsafe { get_ca() }, get_ca_map()),
        (unsafe { get_ceb() }, get_ceb_map()),
        (unsafe { get_co() }, get_co_map()),
        (unsafe { get_cs() }, get_cs_map()),
        (unsafe { get_cy() }, get_cy_map()),
        (unsafe { get_da() }, get_da_map()),
        (unsafe { get_de() }, get_de_map()),
        (unsafe { get_el() }, get_el_map()),
        (unsafe { get_en() }, get_en_map()),
        (unsafe { get_eo() }, get_eo_map()),
        (unsafe { get_es() }, get_es_map()),
        (unsafe { get_et() }, get_et_map()),
        (unsafe { get_eu() }, get_eu_map()),
        (unsafe { get_fa() }, get_fa_map()),
        (unsafe { get_fi() }, get_fi_map()),
        (unsafe { get_fil() }, get_fil_map()),
        (unsafe { get_fr() }, get_fr_map()),
        (unsafe { get_fy() }, get_fy_map()),
        (unsafe { get_ga() }, get_ga_map()),
        (unsafe { get_gd() }, get_gd_map()),
        (unsafe { get_gl() }, get_gl_map()),
        (unsafe { get_gu() }, get_gu_map()),
        (unsafe { get_ha() }, get_ha_map()),
        (unsafe { get_haw() }, get_haw_map()),
        (unsafe { get_he() }, get_he_map()),
        (unsafe { get_hi() }, get_hi_map()),
        (unsafe { get_hr() }, get_hr_map()),
        (unsafe { get_ht() }, get_ht_map()),
        (unsafe { get_hu() }, get_hu_map()),
        (unsafe { get_hy() }, get_hy_map()),
        (unsafe { get_id() }, get_id_map()),
        (unsafe { get_ig() }, get_ig_map()),
        (unsafe { get_is() }, get_is_map()),
        (unsafe { get_it() }, get_it_map()),
        (unsafe { get_ja() }, get_ja_map()),
        (unsafe { get_jw() }, get_jw_map()),
        (unsafe { get_ka() }, get_ka_map()),
        (unsafe { get_kk() }, get_kk_map()),
        (unsafe { get_km() }, get_km_map()),
        (unsafe { get_kn() }, get_kn_map()),
        (unsafe { get_ko() }, get_ko_map()),
        (unsafe { get_ku() }, get_ku_map()),
        (unsafe { get_ky() }, get_ky_map()),
        (unsafe { get_la() }, get_la_map()),
        (unsafe { get_lb() }, get_lb_map()),
        (unsafe { get_lo() }, get_lo_map()),
        (unsafe { get_lt() }, get_lt_map()),
        (unsafe { get_lv() }, get_lv_map()),
        (unsafe { get_mg() }, get_mg_map()),
        (unsafe { get_mi() }, get_mi_map()),
        (unsafe { get_mk() }, get_mk_map()),
        (unsafe { get_ml() }, get_ml_map()),
        (unsafe { get_mn() }, get_mn_map()),
        (unsafe { get_mr() }, get_mr_map()),
        (unsafe { get_ms() }, get_ms_map()),
        (unsafe { get_mt() }, get_mt_map()),
        (unsafe { get_my() }, get_my_map()),
        (unsafe { get_ne() }, get_ne_map()),
        (unsafe { get_nl() }, get_nl_map()),
        (unsafe { get_no() }, get_no_map()),
        (unsafe { get_ny() }, get_ny_map()),
        (unsafe { get_or() }, get_or_map()),
        (unsafe { get_pa() }, get_pa_map()),
        (unsafe { get_pl() }, get_pl_map()),
        (unsafe { get_ps() }, get_ps_map()),
        (unsafe { get_pt() }, get_pt_map()),
        (unsafe { get_ro() }, get_ro_map()),
        (unsafe { get_ru() }, get_ru_map()),
        (unsafe { get_sd() }, get_sd_map()),
        (unsafe { get_si() }, get_si_map()),
        (unsafe { get_sk() }, get_sk_map()),
        (unsafe { get_sl() }, get_sl_map()),
        (unsafe { get_sm() }, get_sm_map()),
        (unsafe { get_sn() }, get_sn_map()),
        (unsafe { get_so() }, get_so_map()),
        (unsafe { get_sq() }, get_sq_map()),
        (unsafe { get_sr() }, get_sr_map()),
        (unsafe { get_st() }, get_st_map()),
        (unsafe { get_su() }, get_su_map()),
        (unsafe { get_sv() }, get_sv_map()),
        (unsafe { get_sw() }, get_sw_map()),
        (unsafe { get_ta() }, get_ta_map()),
        (unsafe { get_te() }, get_te_map()),
        (unsafe { get_tg() }, get_tg_map()),
        (unsafe { get_th() }, get_th_map()),
        (unsafe { get_tr() }, get_tr_map()),
        (unsafe { get_ug() }, get_ug_map()),
        (unsafe { get_uk() }, get_uk_map()),
        (unsafe { get_ur() }, get_ur_map()),
        (unsafe { get_uz() }, get_uz_map()),
        (unsafe { get_vi() }, get_vi_map()),
        (unsafe { get_xh() }, get_xh_map()),
        (unsafe { get_yi() }, get_yi_map()),
        (unsafe { get_yo() }, get_yo_map()),
        (unsafe { get_zh() }, get_zh_map()),
        (unsafe { get_zh_hant() }, get_zh_hant_map()),
        (unsafe { get_zh_hant_hk() }, get_zh_hant_hk_map()),
        (unsafe { get_zu() }, get_zu_map()),
    ])
}
