theme = "يحدد اسم موضوع تلوين الصفحة"
theme-help = """
عند استخدام الخيار `-t` فقط، يتم إدراج قائمة بموضوعات التلوين المتوفرة في الوقت الحالي. إذا لم يتم تحديد ملف موضوع، فسيتم استخدام مجموعة الموضوعات المضمّنة في البرنامج. على سبيل المثال، إذا كان لديك موضوع بالاسم **ayu-dark** ، فيمكنك استخدام `-t ayu-dark` لاستخدام هذا الموضوع. إذا كان اسم الموضوع يحتوي على مسافات، فيجب وضعه بين علامات اقتباس مزدوجة أو علامات اقتباس مفردة.

> ملاحظة: يوجد موضوع خاص بعدم تلوين النصوص تماماً يحمل الاسم `None`.

إذا لم يتم تحديد خيار `--theme` ، فسيتم البحث عن القيمة في المتغير `$TOMLYRE_THEME` في بيئة العمل. موضوع تلوين هذه المساعدة أيضًا يتم الحصول عليه من المتغير `$TOMLYRE_THEME`.

> تتم إدراج مساعدة الافتراضية بشكل مصفّح، وتحمّل بشكل سريع جدًا.
> يتطلب استخدام النص المصفّح والنص المُلوّن نفس الوقت لتحميلهما بنفس السرعة، بينما سيكون التحميل الديناميكي أبطأ بمقدار رتبة الإشارة.
> قد يؤدي تعيين متغير `$TOMLYRE_THEME` في المستوى العالمي إلى إعادة تحميل المظهر والتأثير بشكل كبير على سرعة التشغيل.
> يرجى استخدام `-t` بدلاً من تعيين متغير `$TOMLYRE_THEME` ما لم تكن ترغب في تغيير موضوع مساعدة البرنامج.

مثال للاستخدام باستخدام متغير البيئة:

```sh
TOMLYRE_THEME="Monokai Extended" tomlyre --help
```

مثال للاستخدام باستخدام خيار السطر الأمر:

```sh
tomlyre -t "Monokai Extended" get test.toml
```

بالنسبة للإخراج الذي يتم إنشاؤه يدويًا مثل "conv/get/set"، يحصل موضوع الخطأ المحدد بواسطة `-t` على الأولوية على `$TOMLYRE_THEME`. إذا لم يتم استخدام `-t` ، فسيتم قراءة `$TOMLYRE_THEME` مباشرة. إذا كانت `$TOMLYRE_THEME` فارغة ، فيتم استخدام موضوع "Monokai Extended"."""

theme-file = "يحدد ملف تجميع لموضوعات التلوين المخصصة. يجب تحديد اسم الموضوع باستخدام خيار `--theme`."
theme-file-help = """
يتم دعم صيغة الملفات التي يتم إنشاؤها بواسطة أداة `syntect` في Rust والتي تعرف بـ dump format. فعلى الأغلب، هذه الملفات تحتوي على مجموعة من الموضوعات التي كانت مستخدمة في Sublime Text القديمة. إذا لم يتم تحديد خيار `--tf`، فسيتم قراءة مسار الملف من البيئة `$TOMLYRE_THEME_FILE`. """

theme-uncompressed-file = "يحدد ملف تجميع لموضوعات التلوين المخصصة، ولكن يجب أن يكون غير مضغوط (uncompressed). يجب تحديد اسم الموضوع باستخدام خيار `--theme`."
theme-uncompressed-file-help = """
> يتم منح الأولوية للإصدار غير المضغوط على نسخة المضغوطة.

إذا لم يتم تحديد خيار `--tuf`، فسيتم قراءة مسار الملف من البيئة `$TOMLYRE_THEME_UNCOMPRESSED_FILE`."""

disable-theme-background = "يعطل خلفية الموضوع (مفعّلة افتراضيًا)، يتم تعطيلها باستخدام `--dis-theme-bg`."

disable-theme-background-help = """
إذا لم يتم تحديد `--dis-theme-bg`، فسيتم قراءة القيمة من المتغير `$TOMLYRE_THEME_BG`.
إذا تم تعيين هذه القيمة على false ، سيتم تعطيل خلفية الموضوع.

مثال للاستخدام:

```sh
env TOMLYRE_THEME_BG=false TOMLYRE_THEME="ayu-dark" tomlyre --help
```"""

table-style = "يحدد نمط الجدول."
table-style-help = """
باستخدام خيار `--ts` فقط، سيتم إدراج مجموعة الأنماط المضمنة.
لا يمكن استخدام الأسماء المختصرة للأنماط المختلفة باستثناء markdown والتي يمكن اختصارها إلى md.
قم بتحديد الأسماء الكاملة للأنماط الأخرى.
مثال: `--ts ascii`

ملاحظات:
- حالياً، لا يمكن قراءة مجموعات **أنماط الجداول** من ملف. إذا كنت بحاجة إلى هذه الميزة أو ميزات أخرى، يرجى تقديم issue لإبلاغنا بها.
"""

from-format = "يحدد صيغة الملف الذي يتم قراءته من stdin (سيتم التعرف على الصيغة تلقائيًا افتراضيًا)."
from-format-help = """
عند قراءة البيانات من stdin ، على سبيل المثال: `cat a | tomlyre conv -`، سيتم محاولة التعرف على صيغة الملف تلقائيًا في البداية. ومع ذلك، قد يفشل التعرف التلقائي، وفي هذه الحالة، يجب تحديد الصيغة بشكل يدوي.
مثال: `cat test.bson | tomlyre --src-fmt bson get -`"""

shell-completion = "يولد نص استكمال الأوامر لل shell."
shell-completion-help = """
يجب تحديد اسم ال Shell المستخدم لإنشاء نص استكمال الأوامر.
على سبيل المثال، إذا كنت تستخدم PowerShell على Windows، يمكنك استخدام: 

```pwsh
[Console]::OutputEncoding = [Text.Encoding]::UTF8
tomlyre --sh-comp pwsh > "_tomlyre.ps1"
```

> Q: ما هو استكمال الأوامر في ال Shell؟

> A: عند كتابة أوامر في سطر الأوامر، يمكن الاستفادة من ميزة تعبئة الأوامر (Tab Completion) لتصحيح وإكمال الأوامر كما يجب. لاستخدام هذه الميزة بشكل فعال، يتم إنشاء نص استكمال الأوامر.

تختلف الموقع الذي يتم حفظ نص استكمال الأوامر فيه بين أنواع مختلفة من الـ Shells. على سبيل المثال ، في Zsh، يجب حفظ النص في مسارات `$fpath` المعروفة.
يمكنك الحصول على محتوى هذه المتغير باستخدام الأمر `print -l $fpath`.
فرضًا أن المسار `/usr/local/share/zsh/site-functions` موجود في مسار `$fpath` ، يمكنك استخدام الأمر التالي لحفظ نص استكمال الأوامر في الملف `_tomlyre` داخل هذا المسار:

```sh
tomlyre --sh-comp zsh | doas tee /usr/local/share/zsh/site-functions/_tomlyre
```

لتجنب استخدام صلاحيات root في هذا المثال ، يمكن وضع النص في الدليل الخاص بالمستخدم.
على سبيل المثال، يمكنك استخدام الأمر التالي لإضافة دليل تابع لمسار `$fpath`:

```zsh
fpath=(~/.local/share/zsh/completions $fpath)
```"""
