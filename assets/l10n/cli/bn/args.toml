theme = "সিনট্যাক্স হাইলাইট এর প্রধান থিম নাম"
theme-help = """
শুধুমাত্র `-t` প্যারামিটার ব্যবহার করা হলে, বর্তমান থিম এর তালিকা দেখানো হবে। 
যদি থিম ফাইল উল্লেখ করা না হয়, তখন প্রস্তুতিভুক্ত থিম সেট ব্যবহৃত হবে।
যেমন যদি একটি থিম `ayu-dark` উপস্থিত হয়, তবে আপনি `-t ayu-dark` ব্যবহার করে সেটি ব্যবহার করতে পারেন।
থিম নামে যদি স্পেস থাকে, তবে এটি ডাবল কোটেশন অথবা সিঙ্গেল কোটেশন দিয়ে আবদ্ধ করুন।

> নোট: `None` একটি বিশেষ থিম যা কোন সিনট্যাক্স হাইলাইট না করে মৌলিক টেক্সট স্টাইল প্রদর্শিত করে। 

যখন `-t` ব্যবহার না করা হলে, তখন ডিফল্ট থিম `$TOMLYRE_THEME` এর মধ্যে থাকা থিম ব্যবহৃত হবে।
এই হেল্প সেকশনের **সিনট্যাক্স হাইলাইট** থিম ও এক্সট্রাক্ট করা `$TOMLYRE_THEME` এর মাধ্যমে প্রদর্শিত করা হয়েছে।

> ডিফল্ট হেল্প টেক্সট হার্ডকোড করা আছে, এটি খুব দ্রুত লোড করা যায়।
> হার্ডকোড টেক্সট এবং `None` থিম লোড করা সমস্ত লোড এর স্পীড একই হবে, যেখানে ডাইনামিক লোড এর স্পীড দুইটি অর্ডার বা তার চেয়ে বেশি ধীর। 
> `$TOMLYRE_THEME` এনভায়রনমেন্ট ভেরিয়েবল সেট করা মূলত থিমটি আবার লোড করতে পারে এবং এটি শুরুর স্পীডকে অত্যন্তভাবে **ধীর** করতে পারে।  
> সহায়তা তথ্য এর থিম পরিবর্তন করার পরিকল্পনা না করে কিংবা সিনট্যাক্স হাইলাইট নিষ্ক্রিয় করার পরিকল্পনা না করলে, আপনাকে `-t` প্যারামিটারটি ব্যবহার করতে হবে এবং এনভায়রনমেন্ট ভেরিয়েবল পরিবর্তন করতে হবে না।  

এনভায়রনমেন্ট ভেরিয়েবল ব্যবহারের উদাহরণ:
```sh
TOMLYRE_THEME="Monokai Extended" tomlyre --help
```

কমান্ড লাইন প্যারামিটার ব্যবহারের উদাহরণ:
```sh
tomlyre -t "Monokai Extended" get test.toml
```

"conv/get/set" এবং সম্পর্কিত অপারেশন সম্পাদনা করার জন্য ম্যানুয়ালি উত্তরগুলি, `-t` দ্রষ্টব্যতার করা থিমের প্রাথমিকতা > এনভায়রনমেন্ট ভেরিয়েবল।  
যদি `-t` কল করা না হয় তবে এনভায়রনমেন্ট ভেরিয়েবল পড়া হবে; যদি এনভায়রনমেন্ট ভেরিয়েবল ফাঁকা হয়, তবে **Monokai Extended** ব্যবহৃত হবে।"""

theme-file = "আপনি অবশ্যই থিম নাম উল্লেখ করতে `--theme` দিতে হবেন, স্বয়ংক্রিয়ভাবে এটি লোড হয় না।"

theme-file-help = """
এটি সমর্থিত ফাইল ফরম্যাট rust crate `syntect` দ্বারা স্থাপিত করা হয়েছে।  
মূলতঃ এগুলি পুরানো সাবলাইম থিমের মতো। 
`--tf` উল্লেখ না করলে, `$TOMLYRE_THEME_FILE` এনভায়রনমেন্ট ভেরিয়েবলের মান পড়া হবে।"""

theme-uncompressed-file = "theme-file এর মতোই, তবে অবশ্যই অকম্প্রেসড ডাম্প ডেটা (ফাইল) ব্যবহার করতে হবে"

theme-uncompressed-file-help = """
> আনকম্প্রেসড ভার্সন কম্প্রেসড ভার্সনের চেয়ে উচ্চ প্রাথমিকতা দেয়।  

`--tuf` উল্লেখ না করলে, `$TOMLYRE_THEME_UNCOMPRESSED_FILE` এনভায়রনমেন্ট ভেরিয়েবলের মান পড়া হবে।"""

disable-theme-background = "থিম ব্যাকগ্রাউন্ড নিষ্ক্রিয় করুন (ডিফল্ট সক্ষম হয়ে থাকে, `--dis-theme-bg` ইউজ করে অক্ষম করুন)"

disable-theme-background-help = """
`--dis-theme-bg` উল্লেখ না করলে, `$TOMLYRE_THEME_BG` এনভায়রনমেন্ট ভেরিয়েবলের মান পড়া হবে।

যদি মান false হয়, তবে থিম ব্যাকগ্রাউন্ড নিষ্ক্রিয় হবে। 

```sh
env TOMLYRE_THEME_BG=false TOMLYRE_THEME="ayu-dark" tomlyre --help
```"""

table-style = "টেবিল স্টাইল নির্দিষ্ট করুন"
table-style-help = """
কেবলমাত্র `--ts` প্যারামিটার ব্যবহার করে আপনি উন্নয়নকৃত স্টাইল সেটের তালিকা জানতে পারেন। 
md এর ছাড়াও, অন্যান্য স্টাইলের জন্য পূর্ণ নাম ব্যবহার করতে হবে।

উদাহরণ 1: `--ts md`
উদাহরণ 2: `--table-style ascii`

লক্ষ্য করুন: **টেবিল স্টাইল** সেটের কালেকশন ফাইল থেকে পড়া সমর্থিত নয়, আপনি যদি এই বৈশিষ্ট্য ব্যবহার করতে চান বা অন্যান্য বৈশিষ্ট্যের জন্য যে কোনও পরামর্শ দিতে চান তবে সমস্যা রিপোর্ট করতে আপনার স্বাগতম।"""

from-format = "সোর্স ফাইল ফরম্যাট ম্যানুয়ালি নির্দিষ্ট করুন (ডিফল্টভাবে সমানুপাতিকভাবে পরীক্ষা করা হয়)"
from-format-help = """
ডেটা stdin থেকে পড়া হয়, যেমন: `cat a | tomlyre conv -`, এটি প্রথমে ফাইল ফরম্যাট অটোমেটিকভাবে চেষ্টা করবে।
তবে, অটোমেটিকভাবে চেষ্টা করার সময় সফলতা অসম্ভব হলে, ম্যানুয়ালি ফরম্যাট নির্দিষ্ট করা দরকার হতে পারে।

উদাহরণ: `cat test.bson | tomlyre --src-fmt bson get -` """

shell-completion = "শেলের জন্য পূর্ণাঙ্গ সম্পূর্ণতা স্ক্রিপ্ট তৈরি করুন"

shell-completion-help = """
আপনাকে স্ক্রিপ্ট তৈরি করতে শেলের নাম নির্দিষ্ট করতে হবে।
উদাহরণঃ উইন্ডোজের জন্য powershell এর জন্য, আপনি ব্যবহার করতে পারেন : 

```pwsh
[Console]::OutputEncoding = [Text.Encoding]::UTF8
tomlyre --sh-comp pwsh > "_tomlyre.ps1"
```

> প্রশ্ন: শেলের কিছু ফাংশনালিটি কি?

> উত্তর: আমরা কমান্ড লাইনে কমান্ড ইনপুট করার সময় ট্যাব কী চাপা হলে, অটোমেটিক কমপ্লিট চালু হবে এবং সম্ভবত কমপ্লিট পছন্দগুলি খুঁজে পাওয়া শুরু করবে। এই ফাংশনালিটি কমান্ড লাইন ইনপুট এর দক্ষতা এবং নির্ভুলতা উন্নয়নে সাহায্য করে।

পার্থক্যপূর্ণ শেলের জন্য কমপ্লিট স্ক্রিপ্টের জায়গাগুলি ভিন্ন হতে পারে। zsh এর জন্য, আপনাকে `$fpath` এর উল্লেখ করতে হবে।
আপনি `print -l $fpath` ব্যবহার করে এই অ্যারে এর কন্টেন্ট জানতে পারেন। 
ধরা যাক, এটি `/usr/local/share/zsh/site-functions` ডিরেক্টরিকে ধারণ করে। তাহলে, নিম্নোক্ত কমান্ড ব্যবহার করে সেখানে `_tomlyre` নামক ফাইলটি লিখতে পারেন।

```sh
tomlyre --sh-comp zsh | doas tee /usr/local/share/zsh/site-functions/_tomlyre
```

সুষ্ঠ কাজটির জন্য root হওয়ার প্রয়োজন নেই। ব্যবহারকারীর সাবডিরেক্টরিতে কমপ্লিশনগুলি সংরক্ষণ করা যেতে পারে। উদাহরণঃ আপনি এই কমান্ড ব্যবহার করে এই অ্যারের শুরুতে একটি উপাদান সংযুক্ত করতে পারেন

```zsh
fpath=(~/.local/share/zsh/completions $fpath)
```"""
