conv-opts = "tomlএবং yaml, json এবং ron ফরম্যাটে রুপান্তর করা হয়"

from = "ইনপুট ফাইল নির্দিষ্ট করুন"

conv-to = "আউটপুট ফরম্যাট / ফাইল নির্দিষ্ট করুন, এটি একাধিকবার কল করা সমর্থিত"
conv-to-help = """
যদি বর্তমান ডিরেক্টরিতে **test.json** ফাইল থাকে তবে আপনি `conv test.json -t yml` কল করে এটি একটি yml (yaml) ফরম্যাটে রুপান্তর করতে পারেন,
আপনি ম্যানুয়ালি ফাইল পথ নির্দিষ্ট করতে পারেন: `conv test.json -t /tmp/test.yml`

এটি সকল বৈশিষ্ট্য সক্ষম হলে সমর্থিত ফর্ম্যাটের উপর নির্ভর করে এবং সমস্ত বৈশিষ্ট্য ডিফল্ট ভাবে সক্রিয় নয়।

উপরোক্ত এর সাথে, আপনাকে জানা দরকারি -
- 1. এটি অস্পষ্ট ফাইল পথের জন্য স্বয়ংক্রিয়ভাবে নাম পরিবর্তন করবে।
  - 1.1: শুধুমাত্র একটি স্তরের ফাইলগুলি ফাইল ফরম্যাট হিসাবে চিহ্নিত হবে এবং পথ হিসাবে চিহ্নিত হবে না।
    `conv test.toml -t ron` কল করলে, পথ নির্দিষ্ট না করলেও, আউটপুট ফাইলটি স্বয়ংক্রিয়ভাবে `test.ron` হবে।
    যদি আপনি এই বৈশিষ্ট্যটি ব্যবহার করতে না চান তবে দয়া করে `-t ./ron` বা `-t $PWD/ron` ব্যবহার করুন।
  - 1.2: ফাইলের স্থানান্তর করা হচ্ছে ডিরেক্টরিতে বর্ধিত না
    `-t /tmp/` এর মতো হলে, আমরা শুধুমাত্র `/tmp/` এর সাবডিরে `test.toml` রাখতে পারি এবং `/tmp` ফাইলটি স্বয়ংক্রিয়ভাবে নয়।
    যদি আপনি এই বৈশিষ্ট্যটি ব্যবহার করতে না চান, তবে পূর্ণ ফাইল পথটি ব্যবহার করুন, উদাহরণস্বরূপ `-t /tmp/xx.toml`, বর্তমানে `-t /tmp/` হওয়া উচিত নয়।
- 2. যখন `--save` কল করা না হয় তখন নির্দিষ্ট ফাইলটি স্বয়ংক্রিয়ভাবে সংরক্ষিত হবে না।
- 3. `--save` কল করার সময়, conv উপ-কমান্ডের ইনপুট এবং আউটপুট একই ফাইল নিষ্ক্রিয় করা যাবে না।
- 4. রুপান্তরিত ফাইলে মন্তব্য সংরক্ষিত থাকবে না।"""

save = "`--save` কল করলে, `--to` দেওয়া ফাইলটি সংরক্ষিত হবে"
